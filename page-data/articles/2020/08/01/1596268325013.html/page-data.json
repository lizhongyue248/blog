{"componentChunkName":"component---src-templates-post-tsx","path":"/articles/2020/08/01/1596268325013.html","result":{"data":{"asciidoc":{"id":"1556f66a-7364-5b1e-8d9a-74c39e947db1","fields":{"slug":"/articles/2020/08/01/1596268325013.html","birthTime":"2020-08-01T07:52:05.192Z","modifiedTime":"2020-08-01T07:52:05.192Z"},"html":"<div id=\"toc\" class=\"toc\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div id=\"toctitle\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">Table of Contents</div>\n<ul class=\"sectlevel1\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_环境准备\">环境准备</a></li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_开始\">开始</a></li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_docker_方式\">Docker 方式</a></li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_docker_compose_方式\">Docker Compose 方式</a></li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_debug\">Debug</a></li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_发生了什么\">发生了什么</a></li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_docker_compose_编排\">Docker Compose 编排</a></li>\n</ul>\n</div>\n<div id=\"preamble\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"sectionbody\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>刚换笔记本，不想搞太多环境，什么 Apache、Mysql 啥的，想全部交给 Docker\n管理，复杂一点的直接 Docker compose\n编排一下就好了。乐得清闲，升级又容易，php\n的环境也不例外，所以将它搭建一下：</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h2 id=\"_环境准备\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">环境准备</h2>\n<div class=\"sectionbody\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"ulist\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<ul data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>开发工具：Phpstorm</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>必备环境：Docker 或 Docker Compose</p>\n<div class=\"ulist\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<ul data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p><a href=\"https://docs.docker.com/docker-for-windows/install/\">Windows 安装</a></p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p><a href=\"https://docs.docker.com/docker-for-mac/install/\">Mac 安装</a></p>\n</li>\n</ul>\n</div>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>不需要安装 php，不需要安装 apach，也不需要配置 xdebug，啥都不用，安排。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h2 id=\"_开始\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">开始</h2>\n<div class=\"sectionbody\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>创建一个 phpstrom 空项目，然后创建一个 <code>index.php</code> 文件</p>\n</div>\n<div class=\"listingblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre class=\"highlight\"><code class=\"language-php\" data-lang=\"php\">&lt;?php\n$world = \"World\";\necho \"hello,\", $world;</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h2 id=\"_docker_方式\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">Docker 方式</h2>\n<div class=\"sectionbody\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>两种方式拉去镜像</p>\n</div>\n<div class=\"ulist\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<ul data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>去 <a href=\"https://hub.docker.com/\">Docker Hub</a> 搜索 phpstorm 下的\n<a href=\"https://hub.docker.com/u/phpstorm/\">php 镜像</a></p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>去 <a href=\"https://github.com/JetBrains/phpstorm-docker-images\">Phpstorm\nGithub</a> 查找相应版本的 Docker 镜像</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>主要提供两种类型的镜像（以 7.4 php 为例，<strong>注意：7.4 版本官方没有传到\nDocker Hub，可以使用 7.3 的</strong>）：</p>\n</div>\n<div class=\"ulist\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<ul data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p><code>php-74-cli-xdebug-29</code>：主要提供基础的 <code>php 7.4</code> + <code>xdebug 2.9</code><br>\n<code>mysqli</code> 环境，不提供web环境与端口暴露。</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p><code>php-74-apache-xdebug-29</code>：主要提供 <code>php 7.4</code> + <code>xdebug 2.9</code><br>\n<code>mysqli</code>+ <code>apache2</code> 环境，同时安装了 <code>php</code> 部分依赖（见\n<a href=\"https://github.com/phpearth/docker-php/blob/master/docker/7.4-apache.Dockerfile\">Docker\n官方构建文件</a>），提供web环境，内部暴露端口 <code>80</code>。</p>\n</li>\n</ul>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>本次以 <code>php-74-apache-xdebug-29</code>\n为例，在<strong>项目所在的目录</strong>启动并拉取容器：</p>\n</div>\n<div class=\"listingblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre class=\"highlight\"><code class=\"language-shell\" data-lang=\"shell\">docker run --name php-web-dev -p 80:80 -e XDEBUG_CONFIG=remote_host=host.docker.internal -v $(pwd):/var/www/html -d phpstorm/php-73-apache-xdebug-27</code></pre>\n</div>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>具体参数不做解释啦，能安装 <code>Docker</code> 的应该都能明白，可以通过 <code>man</code>\n查一下。</p>\n</div>\n<div class=\"quoteblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<blockquote>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>需要注意以下两点：</p>\n</div>\n<div class=\"olist arabic\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<ol class=\"arabic\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>其中的 <code>${pwd}</code> 是获取当前的工作目录路径，可以自己手动指定。或者</p>\n<div class=\"ulist\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<ul data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>对于 <code>Windows</code> 的 <code>cmd</code> 可以是 <code>%cd%</code></p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>对于 <code>Windows</code> 的 <code>powershell</code> 可以不变。如果不行可以尝试 <code>${PWD}</code></p>\n</li>\n</ul>\n</div>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>通过 <code>-e</code> 设置的环境变量 <code>XDEBUG_CONFIG</code> 指定了远程的主机地址，对于\n<code>windows</code> 和 <code>Mac</code> 来说，<code>host.docker.internal</code> 即是主机地址（参考\n<a href=\"https://docs.docker.com/docker-for-windows/networking/\">官网文档1</a> 与\n<a href=\"https://docs.docker.com/docker-for-mac/networking/\">官网文档2</a>）。而对于\nLinux，则是<strong>无法进行识别</strong>的（参考\n<a href=\"https://github.com/docker/for-linux/issues/264\">Github\nIssue</a>），这个时候可以使用 <strong>主机名</strong> 来指定（通过 <code>hostname</code>\n获取），请自己根据情况修改 。</p>\n</li>\n</ol>\n</div>\n</blockquote>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>然后直接访问 <a href=\"http://127.0.0.1\">127.0.0.1</a>，结果如下：</p>\n</div>\n<div class=\"imageblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<img src=\"https://resources.echocow.cn/file/2020/8/1/image-20200731211328720.png\" alt=\"image-20200731211328720\">\n</div>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>这样就跑起来啦。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h2 id=\"_docker_compose_方式\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">Docker Compose 方式</h2>\n<div class=\"sectionbody\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"quoteblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<blockquote>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>注意：如果你是一步一步的来，请先停止上一步的容器：</p>\n</div>\n<div class=\"listingblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre class=\"highlight\"><code class=\"language-shell\" data-lang=\"shell\">docker stop php-web-dev</code></pre>\n</div>\n</div>\n</blockquote>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>项目根目录创建一个 <code>docker-compose.yml</code> 文件，如下：</p>\n</div>\n<div class=\"listingblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre class=\"highlight\"><code class=\"language-yaml\" data-lang=\"yaml\">version: '3.8'\nservices:\n  webserver:\n    image: phpstorm/php-73-apache-xdebug-27\n    ports:\n      - \"80:80\"\n    volumes:\n      - ./:/var/www/html\n    environment:\n      XDEBUG_CONFIG: remote_host=host.docker.internal</code></pre>\n</div>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>对于 <code>Linux</code> ，修改 <code>environment</code></p>\n</div>\n<div class=\"listingblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre class=\"highlight\"><code class=\"language-yaml\" data-lang=\"yaml\">   ...\n    environment:\n      XDEBUG_CONFIG: remote_host=&lt;hostname&gt;</code></pre>\n</div>\n</div>\n<div class=\"quoteblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<blockquote>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>注意：Docker Compose 和 Docker 的版本有所关系，具体参见\n<a href=\"https://docs.docker.com/compose/compose-file/compose-versioning/\">官方文档</a>。</p>\n</div>\n</blockquote>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>创建完成直接运行即可</p>\n</div>\n<div class=\"imageblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<img src=\"https://resources.echocow.cn/file/2020/8/1/image-20200731212509592.png\" alt=\"image-20200731212509592\">\n</div>\n</div>\n<div class=\"quoteblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<blockquote>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>Tips: <code>phpstorm</code> 和 <code>idea</code> 一样，都有 <code>services</code>，可以直接通过\n<code>services</code> 进行容器管理。</p>\n</div>\n<div class=\"imageblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<img src=\"https://resources.echocow.cn/file/2020/8/1/image-20200731212534550.png\" alt=\"image-20200731212534550\">\n</div>\n</div>\n</blockquote>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>访问测试 <a href=\"http://127.0.0.1\">127.0.0.1</a>，结果同上。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h2 id=\"_debug\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">Debug</h2>\n<div class=\"sectionbody\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>浏览器安装 <code>xdebug</code> 扩展插件，见\n<a href=\"https://www.jetbrains.com/help/phpstorm/browser-debugging-extensions.html?_ga=2.160701439.351768353.1596075455-1678276671.1595950120\">官方文档</a>，<code>Zend Debugger</code>\n没有试过。</p>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>访问 <a href=\"http://127.0.0.1\">127.0.0.1</a> ，开启插件 <code>debug</code> 模式</p>\n</div>\n<div class=\"imageblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<img src=\"https://resources.echocow.cn/file/2020/8/1/image-20200731214409388.png\" alt=\"image-20200731214409388\">\n</div>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>上述两种方式的 Debug 的方式都是一样的，所以一起说啦。首先打断点</p>\n</div>\n<div class=\"imageblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<img src=\"https://resources.echocow.cn/file/2020/8/1/image-20200731212639298.png\" alt=\"image-20200731212639298\">\n</div>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>开启 <code>phpstorm</code> 的 <code>debug</code> 监听</p>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>(开启前)</p>\n</div>\n<div class=\"imageblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<img src=\"https://resources.echocow.cn/file/2020/8/1/image-20200731212753466.png\" alt=\"image-20200731212753466\">\n</div>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>(开启后)</p>\n</div>\n<div class=\"imageblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<img src=\"https://resources.echocow.cn/file/2020/8/1/image-20200731212834049.png\" alt=\"image-20200731212834049\">\n</div>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>无论上述两种的那种运行方式，直接访问\n<a href=\"http://127.0.0.1\">127.0.0.1</a>，会弹出如下界面：</p>\n</div>\n<div class=\"imageblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<img src=\"https://resources.echocow.cn/file/2020/8/1/image-20200731213100779.png\" alt=\"image-20200731213100779\">\n</div>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>选择当前项目，<code>ACCEPT</code> 即可！随后就可以看到效果啦</p>\n</div>\n<div class=\"imageblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<img src=\"https://resources.echocow.cn/file/2020/8/1/image-20200731213555345.png\" alt=\"image-20200731213555345\">\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h2 id=\"_发生了什么\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">发生了什么</h2>\n<div class=\"sectionbody\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>其实这个过程很好理解，通过查看他的构建方式就知道，主要有以下几步：</p>\n</div>\n<div class=\"olist arabic\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<ol class=\"arabic\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>拉取 <code>php7.4</code> 镜像，完成基本的依赖安装、<code>apache</code> 、`xdebug`安装</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>指定当前工作目录映射到容器内的 <code>apache</code> 下，端口 <code>80</code> 进行映射</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p><strong>指定 <code>xdebug</code> 的主机地址为我们宿主机</strong></p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>开启 <code>phpstorm</code> 的监听，以及文件的 `debug`映射</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>这里需要提一下，其实我们在倒数第二部 <code>ACCEPT</code> 那里，主要是配置了一个\n<code>php server</code>：</p>\n</div>\n<div class=\"imageblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<img src=\"https://resources.echocow.cn/file/2020/8/1/image-20200731214550471.png\" alt=\"image-20200731214550471\">\n</div>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>这个配置是十分重要的，你可以提前将它配置好，然后倒数第二部里面进行选择即可。如果是\n<code>Zend Debugger</code> ，无非就是修改 <code>Debugger</code>，但是*没有官方镜像支持*。</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h2 id=\"_docker_compose_编排\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">Docker Compose 编排</h2>\n<div class=\"sectionbody\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>下面我们加上另外一个容器：Mysql8，很简单：</p>\n</div>\n<div class=\"listingblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre class=\"highlight\"><code class=\"language-yaml\" data-lang=\"yaml\">version: '3.8'\nservices:\n  mysql-php-dev:\n    container_name: mysql-php-dev\n    image: mysql:8\n    command: --default-authentication-plugin=mysql_native_password\n    environment:\n      MYSQL_ROOT_PASSWORD: 123456\n    networks:\n      - php-mysql\n  webserver:\n    container_name: php-web-dev-1\n    depends_on:\n      - mysql-php-dev\n    image: phpstorm/php-73-apache-xdebug-27\n    ports:\n      - \"80:80\"\n    volumes:\n      - ./:/var/www/html\n    environment:\n      XDEBUG_CONFIG: remote_host=host.docker.internal\n    networks:\n      - php-mysql\n\nnetworks:\n  php-mysql:</code></pre>\n</div>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>修改代码：</p>\n</div>\n<div class=\"listingblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre class=\"highlight\"><code class=\"language-php\" data-lang=\"php\">&lt;?php\n$world = \"World\";\necho \"Hello，\", $world;\n$servername = \"mysql-php-dev\";\n$username = \"root\";\n$password = \"123456\";\n\n$conn = mysqli_connect($servername, $username, $password);\nif (!$conn) {\n    die(\"Connection failed: \" . mysqli_connect_error());\n}\necho \"连接成功\";</code></pre>\n</div>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>访问测试一下：</p>\n</div>\n<div class=\"imageblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<img src=\"https://resources.echocow.cn/file/2020/8/1/image-20200731215831768.png\" alt=\"image-20200731215831768\">\n</div>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>搞定！</p>\n</div>\n</div>\n</div>","document":{"title":"Phpstorm + Docker / Docker Compose + xdebug 环境搭建"},"pageAttributes":{"category":"归档","description":"Phpstorm + Docker / Docker Compose + xdebug 环境搭建","image":"https://resources.echocow.cn/file/2020/8/1/image-20200731211328720.png?imageView2/1/w/1280/h/720/interlace/1/q/100","sort":null}}},"pageContext":{"slug":"/articles/2020/08/01/1596268325013.html","next":{"document":{"title":"Spring Security OAuth2 Authorization Server 初体验"},"fields":{"slug":"/articles/2020/08/25/1598370094047.html"}},"previous":{"document":{"title":"Spring Reactive Mongodb Jpa Repository 总结"},"fields":{"slug":"/articles/2020/04/13/1586760856276.html"}}}},"staticQueryHashes":["3069561552","3673333084"]}