{"componentChunkName":"component---src-templates-post-tsx","path":"/articles/2019/02/22/1550766482735.html","result":{"data":{"asciidoc":{"id":"beaffb61-257d-57d9-b9b6-846a7cbf0c2f","fields":{"slug":"/articles/2019/02/22/1550766482735.html","birthTime":"2019-02-21T18:05:09.829Z","modifiedTime":"2019-02-21T18:05:42.307Z"},"html":"<div id=\"toc\" class=\"toc\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div id=\"toctitle\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">Table of Contents</div>\n<ul class=\"sectlevel1\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_这篇文章能够带给你什么\">这篇文章能够带给你什么</a></li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_submail_的使用\">submail 的使用</a>\n<ul class=\"sectlevel2\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_接口说明\">接口说明</a></li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_创建模板\">创建模板</a></li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_创建_appid\">创建 APPID</a></li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_测试短信\">测试短信</a></li>\n</ul>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_发送一条信息\">发送一条信息</a></li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_发送多条信息\">发送多条信息</a></li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_在_spring_boot_中集成_submail\">在 spring-boot 中集成 submail</a>\n<ul class=\"sectlevel2\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_添加配置文件读取类\">添加配置文件读取类</a></li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_创建组件\">创建组件</a></li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_使用组件\">使用组件</a></li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_测试\">测试</a></li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_发送多条短信\">发送多条短信</a></li>\n</ul>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_总结\">总结</a></li>\n</ul>\n</div>\n<div id=\"preamble\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"sectionbody\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>短信接口这种东西，在现在的环境下基本 web\n应用都会去准备的，毕竟移动端还是占据不少市场的，方便快捷与可控都是比起用户名密码方便很多。在对比多个短信提供商后，我最终选择了\n<a href=\"https://www.mysubmail.com/\">submail</a>，主要是有以下几点原因：</p>\n</div>\n<div class=\"olist arabic\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<ol class=\"arabic\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>接口的灵活性，提供多种类型接口\n，包括单/多条内容自定义短信，单/多条模板变量短信，模板控制接口，短信日志接口，余额接口。这些接口包含了所有场景，而对比阿里大鱼、腾讯云，每次都要申请还要上传一堆东西（什么域名证书啊，还必须一致），时间两小时内，然而\nsubmail\n不需要上传任何东西，写好后直接发起审核，并且白天几分钟就通过，刚才是晚上十二点，我发起审核，半小时不到就通过了，速度太赞。</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>后台真的好看，比起阿里大鱼、腾讯云、106这些，真的好看了不是一点，提供了可视化图表，余额提醒这些，最赞提供了非常详细的错误日志，方便排错，</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>价格优惠，短信分为事务类和运营类，一般应用事务类就足够了。第一次体验\n35 元就有 1K 条，后面购买 400 元 1W 条，比阿里大鱼，腾讯云便宜 50 元。</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>操作十分简单，请求接口就完事儿（好像都是这样，，逃～）</p>\n</li>\n</ol>\n</div>\n</div>\n</div>\n<div class=\"sect1\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h2 id=\"_这篇文章能够带给你什么\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">这篇文章能够带给你什么</h2>\n<div class=\"sectionbody\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"olist arabic\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<ol class=\"arabic\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>submail 的使用</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>使用 <code>httpclient</code> + <code>fastjson</code> 工具发送一条信息</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>使用 <code>httpclient</code> + <code>fastjson</code> 工具发送多条信息</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>在 spring-boot 中集成 submail</p>\n</li>\n</ol>\n</div>\n</div>\n</div>\n<div class=\"sect1\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h2 id=\"_submail_的使用\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">submail 的使用</h2>\n<div class=\"sectionbody\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>一个网站的使用是非常简单的，无非就是官网\n<a href=\"https://www.mysubmail.com/\">submail</a>\n注册登录控制台，所以我直接从控制台这里开始，我姑且假设你已经购买了优惠包已经拥有了\n1K 条的短信量。</p>\n</div>\n<div class=\"sect2\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h3 id=\"_接口说明\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">接口说明</h3>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>在开始之前，我们需要了解一下\n<a href=\"https://www.mysubmail.com/chs/documents/developer/YPWD84\">submail\n的短信接口</a></p>\n</div>\n<div class=\"olist arabic\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<ol class=\"arabic\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>message/send\n接口，优点：方便、快速对接使用，<strong>免模板，可直接提交任意内容（需要符合短信发送规范，短信签名前置）</strong>，缺点：并发效率不高，适用于并发小，内容变动或模板变动较多的场景（并发效率低指高于每秒1000的并发，低于这个并发需求请无视）</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>message/xsend\n接口，优点：高稳定性，<strong>低延迟，高并发</strong>，适用验证码类要求低延迟，高请求效率的场景，缺点：接入时需要提前创建模板，并指定模板ID</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>message/multisend\n接口，优点：接入方便，<strong>免模板，可直接提交任意内容（需要符合短信发送规范，短信签名前置），支持大批量群发</strong>，缺点：效率低于multixsend，如果每小时的发送量低于百万级，请无视此缺点</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>message/multixsend\n接口，优点：高效，<strong>高稳定性，低延迟，超高并发</strong>，适用大批量群发场景（50个号码/API,100线程并发，每分钟可处理15万左右的群发需求）缺点：接入时需要提前创建模板，并指定模板ID</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>message/template 接口，可以获取、创建、编辑或删除您的短信模板。</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>log/message 接口，\n可以方便的查询详细的短信发送日志和状态记录，也还可以按短信模板、手机号码、发送状态、开始/结束日期等条件筛选日志的返回结果。</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>balance/sms 接口，可以实时获取账户的短信余额。</p>\n</li>\n</ol>\n</div>\n</div>\n<div class=\"sect2\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h3 id=\"_创建模板\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">创建模板</h3>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>我们选择使用 <code>2</code> 和 <code>4</code>\n的接口，因为它具有高稳定性和高并发的特点。使用这两个接口的前提是我们需要创建短信模板</p>\n</div>\n<div class=\"imageblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<img src=\"https://resources.echocow.cn/file/2019/2/22/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20190222005719.png\" alt=\"创建模板\">\n</div>\n</div>\n<div class=\"imageblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<img src=\"https://resources.echocow.cn/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20190222005948.png\" alt=\"创建\">\n</div>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>创建完成耐心等待审核即可</p>\n</div>\n</div>\n<div class=\"sect2\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h3 id=\"_创建_appid\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">创建 APPID</h3>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>在有了模板后，我们需要创建一个\nAPPID，简单的说就是密钥，用来进行认证短信发送的。</p>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>image::https://resources.echocow.cn/file/2019/2/22/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20190222010204.png[创建\nAPPID]</p>\n</div>\n</div>\n<div class=\"sect2\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h3 id=\"_测试短信\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">测试短信</h3>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>完成上面两步就可以测试短信了</p>\n</div>\n<div class=\"imageblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<img src=\"https://resources.echocow.cn/file/2019/2/22/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20190222010429.png\" alt=\"测试短信\">\n</div>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>然后点击最下面的发送即可，这就是 submail\n的使用方式，所测的更多功能需要大家自己多多探索，非常简单。</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h2 id=\"_发送一条信息\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">发送一条信息</h2>\n<div class=\"sectionbody\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>使用 maven 或者 gradle 引入依赖 <code>fastjson</code> 和 <code>httpclient</code></p>\n</div>\n<div class=\"literalblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre> 'fastjson' : 'com.alibaba:fastjson:1.2.56',\n`'httpClient' : 'org.apache.httpcomponents:httpclient:4.5.7'</pre>\n</div>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>我们采用 <strong>明文的密匙验证模式</strong>，因为他简单，具体参见\n<a href=\"https://www.mysubmail.com/chs/documents/developer/gbibb3\" class=\"bare\">https://www.mysubmail.com/chs/documents/developer/gbibb3</a></p>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>创建测试用例，具体请看注释</p>\n</div>\n<div class=\"listingblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">    @Test\n    public void messageOneTest() throws Exception {\n        CloseableHttpClient httpclient = HttpClients.createDefault();\n        // api 地址\n        String url = \"https://api.mysubmail.com/message/xsend\";\n        // 需要使用 POST 请求\n        HttpPost httpPost = new HttpPost(url);\n        JSONObject jsonParam = new JSONObject();\n        // 创建的 APPID\n        jsonParam.put(\"appid\", \"\");\n        // 创建的 APPID 的 APPKEY\n        jsonParam.put(\"signature\", \"ae54fe1399bafd5728e88ca29a7e22f8\");\n        // 你的模板编号，见 https://www.mysubmail.com/chs/documents/developer/MmSw12\n        jsonParam.put(\"project\", \"\");\n        // 接收人手机号\n        jsonParam.put(\"to\", \"\");\n        JSONObject vars = new JSONObject();\n        // 模板变量\n        vars.put(\"code\", \"1234\");\n        vars.put(\"time\", \"30\");\n        jsonParam.put(\"vars\", vars.toJSONString());\n        StringEntity entity = new StringEntity(jsonParam.toJSONString(), \"UTF-8\");\n        entity.setContentEncoding(\"UTF-8\");\n        entity.setContentType(\"application/json\");\n        httpPost.setEntity(entity);\n        // 响应体\n        HttpResponse resp = httpclient.execute(httpPost);\n        String respContent = null;\n        if (resp.getStatusLine().getStatusCode() == 200) {\n            HttpEntity he = resp.getEntity();\n            respContent = EntityUtils.toString(he, \"UTF-8\");\n        }\n        System.out.println(respContent);\n    }</code></pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h2 id=\"_发送多条信息\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">发送多条信息</h2>\n<div class=\"sectionbody\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>使用 maven 或者 gradle 引入依赖 <code>fastjson</code> 和 <code>httpclient</code></p>\n</div>\n<div class=\"literalblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre> 'fastjson' : 'com.alibaba:fastjson:1.2.56',\n`'httpClient' : 'org.apache.httpcomponents:httpclient:4.5.7'</pre>\n</div>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>创建测试用例，重复地方不再加注释啦</p>\n</div>\n<div class=\"literalblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre>    @Test\n    public void messageManyTest() throws Exception {\n        CloseableHttpClient httpclient = HttpClients.createDefault();\n        String url = \"https://api.mysubmail.com/message/multixsend\";\n        HttpPost httpPost = new HttpPost(url);\n        JSONObject jsonParam = new JSONObject();\n        jsonParam.put(\"appid\", \"\");\n        jsonParam.put(\"signature\", \"\");\n        jsonParam.put(\"project\", \"\");\n\n        // 模板变量\n        JSONObject vars = new JSONObject();\n        vars.put(\"code\", \"\");\n        vars.put(\"time\", \"\");\n\n        // 第一个接受者\n        JSONObject person1 = new JSONObject();\n        person1.put(\"to\", \"\");\n        // 此人的模板变量，因为我做测试，所以所有的人都用同一个变量即可\n        person1.put(\"vars\", vars);\n\n        // 第二个接受者\n        JSONObject person2 = new JSONObject();\n        person2.put(\"to\", \"\");\n        // 此人的模板变量，因为我做测试，所以所有的人都用同一个变量即可\n        person2.put(\"vars\", vars);\n\n        // 接受者数组\n        JSONArray multi = new JSONArray();\n        multi.add(person1);\n        multi.add(person2);\n\n        jsonParam.put(\"multi\", multi.toJSONString());\n\n        // 答应出来瞅瞅\n        System.out.println(jsonParam.toString());\n\n        StringEntity entity = new StringEntity(jsonParam.toJSONString(), \"UTF-8\");\n        entity.setContentEncoding(\"UTF-8\");\n        entity.setContentType(\"application/json\");\n        httpPost.setEntity(entity);\n        HttpResponse resp = httpclient.execute(httpPost);\n        String respContent = null;\n        if (resp.getStatusLine().getStatusCode() == 200) {\n            HttpEntity he = resp.getEntity();\n            respContent = EntityUtils.toString(he, \"UTF-8\");\n        }\n        System.out.println(respContent);\n    }</pre>\n</div>\n</div>\n<div class=\"quoteblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<blockquote>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>如果响应报错，请参照\n<a href=\"https://www.mysubmail.com/chs/documents/developer/c8ujr\" class=\"bare\">https://www.mysubmail.com/chs/documents/developer/c8ujr</a> 文档拍错</p>\n</div>\n</blockquote>\n</div>\n</div>\n</div>\n<div class=\"sect1\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h2 id=\"_在_spring_boot_中集成_submail\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">在 spring-boot 中集成 submail</h2>\n<div class=\"sectionbody\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>对于在 spring boot 中，我们有几个要求 1. 把他作为一个组件来使用 2.\n批量发送时，需要异步不阻塞 2. 使用配置文件进行配置 APPID 等信息</p>\n</div>\n<div class=\"sect2\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h3 id=\"_添加配置文件读取类\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">添加配置文件读取类</h3>\n<div class=\"listingblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre class=\"highlight\"><code class=\"language-java\" data-lang=\"java\">/**\n * @author Echo\n * @version 1.0\n * @date 2019-02-22 01:26\n */\n@Data\n@Component\n@ConfigurationProperties(prefix = \"application.message\")\npublic class MessageConfig {\n    /**\n     * appid\n     */\n    private String appId;\n    /**\n     * appkey\n     */\n    private String appKey;\n    /**\n     * 注册模板\n     */\n    private String registerTemplate;\n    /**\n     * 作业提醒模板\n     */\n    private String homeworkTipTemplate;\n}</code></pre>\n</div>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>application.yml</p>\n</div>\n<div class=\"literalblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre>application:\n  message:\n    app-id: 1111\n    app-key: 111\n    register-template: 111\n    homework-tip-template:111</pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h3 id=\"_创建组件\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">创建组件</h3>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>添加一个 httpclient 的 bean</p>\n</div>\n<div class=\"literalblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre>    @Bean\n    public HttpClient httpClient(){\n        return HttpClients.createDefault();\n    }</pre>\n</div>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>组件创建</p>\n</div>\n<div class=\"literalblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre>/**\n * @author Echo\n * @version 1.0\n * @date 2019-02-22 01:17\n */\n@Component\n@Slf4j\npublic class SubMailUtils {\n\n    private final HttpClient httpClient;\n    private final MessageConfig messageConfig;\n    private static final String X_SEND = \"https://api.mysubmail.com/message/xsend\";\n\n    @Autowired\n    public SubMailUtils(HttpClient httpClient, MessageConfig messageConfig) {\n        this.httpClient = httpClient;\n        this.messageConfig = messageConfig;\n    }\n\n    /**\n     * 发送一条信息\n     *\n     * @param to   接收人\n     * @param vars 模板变量\n     */\n    public boolean sendOneMessage(String to, String project, JSONObject vars) {\n        HttpPost httpPost = new HttpPost(X_SEND);\n        JSONObject jsonParam = new JSONObject();\n        jsonParam.put(\"appid\", messageConfig.getAppId());\n        jsonParam.put(\"signature\", messageConfig.getAppKey());\n        jsonParam.put(\"project\", project);\n        jsonParam.put(\"to\", to);\n        jsonParam.put(\"vars\", vars);\n        StringEntity entity = new StringEntity(jsonParam.toJSONString(), \"UTF-8\");\n        entity.setContentEncoding(\"UTF-8\");\n        entity.setContentType(\"application/json\");\n        httpPost.setEntity(entity);\n        HttpResponse resp;\n        try {\n            resp = httpClient.execute(httpPost);\n            HttpEntity he = resp.getEntity();\n            log.info(EntityUtils.toString(he, \"UTF-8\"));\n            return resp.getStatusLine().getStatusCode() == 200;\n        } catch (IOException e) {\n            e.printStackTrace();\n            return false;\n        }\n\n    }\n}</pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h3 id=\"_使用组件\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">使用组件</h3>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>我注册的时候需要发送一条短信，那么我应该在 controller 里面这样写</p>\n</div>\n<div class=\"literalblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre>    @GetMapping(\"/mobile/{phone}\")\n    public HttpEntity&lt;?&gt; mobileCode(@PathVariable String phone) {\n        // 当前手机号是否已被注册\n        SysUser sysUser = new SysUser();\n        sysUser.setPhone(phone);\n        String result = sysUserService.existUser(sysUser);\n        if (result != null) {\n            throw new ResourceExistException(result);\n        }\n        // 生成 key 和 code\n        String key = MOBILE + phone;\n        String code = RandomStringUtils.randomNumeric(\n                applicationProperties.getValidate().getMobileCodeMinLength(),\n                applicationProperties.getValidate().getMobileCodeMaxLength());\n        // 存放\n        oauth2Service.saveValidateCode(key, code,\n                applicationProperties.getValidate().getMobileCodeValidityPeriod(),\n                TimeUnit.MINUTES);\n        // 创建模板变量\n        JSONObject vars = new JSONObject();\n        vars.put(\"code\", code);\n        vars.put(\"time\", applicationProperties.getValidate().getMobileCodeValidityPeriod());\n        // 发送短信\n        if (!subMailUtils.sendOneMessage(phone, messageConfig.getRegisterTemplate(), vars)) {\n            throw new RuntimeException(\"message send failed!\");\n        }\n        log.info(\"{} 短信验证码已经发送：{}\", phone, code);\n        return ResponseEntity.ok().build();\n    }</pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h3 id=\"_测试\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">测试</h3>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>请求验证码</p>\n</div>\n<div class=\"imageblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<img src=\"https://resources.echocow.cn/file/2019/2/22/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20190222015734.png\" alt=\"验证码\">\n</div>\n</div>\n<div class=\"imageblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<img src=\"https://resources.echocow.cn/file/2019/2/22/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_%E9%80%89%E6%8B%A9%E5%8C%BA%E5%9F%9F_20190222005019.png\" alt=\"接受验证码\">\n</div>\n</div>\n<div class=\"imageblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<img src=\"https://resources.echocow.cn/file/2019/2/22/%E6%B7%B1%E5%BA%A6%E6%88%AA%E5%9B%BE_crx_fhbjgbiflinjbdggehcddcbncdddomop_20190222020030.png\" alt=\"验证\">\n</div>\n</div>\n</div>\n<div class=\"sect2\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h3 id=\"_发送多条短信\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">发送多条短信</h3>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>发送多条短信封装类似，不过多加一个异步`@Async`注解，再配置下异步线程池即可，就不再详述了，太困了。。。。</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h2 id=\"_总结\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">总结</h2>\n<div class=\"sectionbody\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>到这里就算结束了，难度不大，但是很好玩儿，其实难点在于如何手动生成\noauth2 的 jwt\n加密那里。。。其余地方都不是很难，后面写这个应用总结的时候再详述吧～短信接口感觉还是很贵的，学生党，玩玩儿就够啦哈哈。晚安啦</p>\n</div>\n</div>\n</div>","document":{"title":"submail 短信接口以及 spring boot 集成"},"pageAttributes":{"category":"spring","description":"submail 短信接口以及 spring boot 集成","image":"https://img.hacpai.com/bing/20171205.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100","sort":null}}},"pageContext":{"slug":"/articles/2019/02/22/1550766482735.html","next":{"document":{"title":"Vaadin —— Java 从后端到前端 （路由与导航）"},"fields":{"slug":"/articles/2019/02/25/1551107245928.html"}},"previous":{"document":{"title":"记录一下即将重构的项目 spring boot + restful"},"fields":{"slug":"/articles/2019/02/18/1550500427954.html"}}}},"staticQueryHashes":["3069561552","3673333084"]}