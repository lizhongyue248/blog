{"componentChunkName":"component---src-templates-post-tsx","path":"/articles/2019/01/01/1546349681570.html","result":{"data":{"asciidoc":{"id":"38d0ac1f-1069-537c-9c04-d7f6eebed7c0","fields":{"slug":"/articles/2019/01/01/1546349681570.html","birthTime":"2019-01-01T14:19:48.717Z","modifiedTime":"2019-01-27T09:58:55.268Z"},"html":"<div id=\"toc\" class=\"toc\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div id=\"toctitle\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">Table of Contents</div>\n<ul class=\"sectlevel1\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_服务器部署\">服务器部署</a></li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_hexo_迁移\">hexo 迁移</a></li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_nginx_配置\">nginx 配置</a></li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_问题\">问题</a>\n<ul class=\"sectlevel2\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_从_hexo_迁移过来的数据时不时包_nginx_502_错误\">从 hexo 迁移过来的数据时不时包 nginx 502 错误，</a></li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_页面渲染问题\">页面渲染问题</a></li>\n</ul>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_总结\">总结</a></li>\n</ul>\n</div>\n<div id=\"preamble\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"sectionbody\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>好久没有更新博客啦！～一部分原因是期末了作业多事情多，还有一部分是\nhexo-admin\n真的让人头疼，访问速度感人。自己选了很多博客系统，选择的博客有那么点要求</p>\n</div>\n<div class=\"olist arabic\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<ol class=\"arabic\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>好看！必须的。</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>我能够自定义！</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>能够方便管理的（自从用过hexo后觉得这很重要，毕竟我不是部署在 github\n上而是自己的服务器）</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>能够支持自己的 七牛云 更好啦！</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>必须支持 markdown</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>上手简单</p>\n</li>\n</ol>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>自己找了好多博客，wordpress、typecho 这些动态博客，还有 hexo\n静态博客，都试过了，但是都没有满足上面几个条件的，特别是由于只会java和前端的缘故（逃，最后今年九月发现了一款基于\njava 的一款小而美的博客系统\n<a href=\"https://github.com/b3log/solo\">solo</a>，都要动手换了，但是发现没有太喜欢的皮肤，所以在https://github.com/b3log/solo/issues/12449[皮肤推荐]中推荐了一款\n<a href=\"https://github.com/ahonn/hexo-theme-even\">hexo-even</a>，当初就是因为这款主题用上了\nhexo，宁愿受点苦都要用这个主题(可见一款好的皮肤真的会吸引人的哈哈哈)，原本打算等\nV姐 出了后自己就立刻换的（自己前端真的渣），但是在这次 12 月发布的\n<a href=\"https://github.com/b3log/solo/releases/tag/v2.9.7\">2.9.7</a>\n版本上，加了一个新的皮肤\nJane！简直太棒了，在放假作业完成后，立刻花时间把他安排到了我的服务器上，不论前台还是后台，速度都是很给力！不过中间也大大小小的遇到些问题，记录下～～</p>\n</div>\n<div class=\"quoteblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<blockquote>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>服务器配置：centos7.2 + jdk8 + nginx 使用端口：8765\n访问地址：https://echocow.cn</p>\n</div>\n</blockquote>\n</div>\n</div>\n</div>\n<div class=\"sect1\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h2 id=\"_服务器部署\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">服务器部署</h2>\n<div class=\"sectionbody\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"olist arabic\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<ol class=\"arabic\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>使用 scp 复制 war 包到服务器</p>\n</li>\n</ol>\n</div>\n<div class=\"literalblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre> scp solo-2.9.7.war  root@**.**.***.**:/root/</pre>\n</div>\n</div>\n<div class=\"olist arabic\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<ol class=\"arabic\" start=\"2\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>输入密码复制，然后创建 solo 文件夹并解压 war 包</p>\n</li>\n</ol>\n</div>\n<div class=\"literalblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre>mkdir solo\nmv solo-2.9.7.war solo\ncd solo/\njar -xvf solo-2.9.7.war</pre>\n</div>\n</div>\n<div class=\"olist arabic\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<ol class=\"arabic\" start=\"3\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>修改配置文件</p>\n</li>\n</ol>\n</div>\n<div class=\"literalblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre>cd WEB-INF/classes/\nvim latke.properties\n\n#### Server ####\n# Browser visit protocol\nserverScheme=https\n# Browser visit domain name 最终要访问的路径\nserverHost=echocow.cn\n# Browser visit port, 80 as usual, THIS IS NOT SERVER LISTEN PORT! 我使用 https ，所以指定 443\nserverPort=443\n\n\nvim local.properties\n# 添加自己数据库的密码，我使用mysql数据库</pre>\n</div>\n</div>\n<div class=\"olist arabic\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<ol class=\"arabic\" start=\"4\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>登录数据库创建 solo 库</p>\n</li>\n</ol>\n</div>\n<div class=\"literalblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre>&gt;&gt;&gt; create database solo;</pre>\n</div>\n</div>\n<div class=\"olist arabic\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<ol class=\"arabic\" start=\"5\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>开启后台服务</p>\n</li>\n</ol>\n</div>\n<div class=\"literalblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre># 通过 -lp 选项指定部署在 8765 端口\nnohup java -cp \"WEB-INF/lib/*:WEB-INF/classes\" org.b3log.solo.Starter -lp 8765 &gt;/dev/null 2&gt;&amp;1 &amp;</pre>\n</div>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>solo 也就算部署完毕啦</p>\n</div>\n<div class=\"quoteblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<blockquote>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>为什么不用 tomcat？因为我自己的 tomcat\n已经部署多个应用并且还要去修改配置文件，十分麻烦，所以选择这种方式运行，8080端口被tomcat使用，由nginx\n转发，443、80 端口被 nginx 使用，所以随便选了一个 8765 端口进行部署。</p>\n</div>\n</blockquote>\n</div>\n</div>\n</div>\n<div class=\"sect1\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h2 id=\"_hexo_迁移\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">hexo 迁移</h2>\n<div class=\"sectionbody\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"quoteblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<blockquote>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>不得不说最棒的就是提供了 hexo 的迁移，让我省去好多功夫！</p>\n</div>\n</blockquote>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>直接复制 hexo 下的 source 文件夹到 solo/markdown 即可</p>\n</div>\n<div class=\"literalblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre># 我直接移动过去了=-=\nmv source ../solo/\n# 然后终于可以停止掉慢出翔的 hexo-admin 啦\n[root@EchoLZY blog]# ps -ef | grep hexo\nroot       647 29099  0 22:34 pts/1    00:00:00 grep --color=auto hexo\nroot     15475 27799  0  2018 ?        00:50:17 node /root/blog/hexo_run.js\nroot     15481 15475  0  2018 ?        00:05:35 hexo\n[root@EchoLZY blog]# kill -9 15475\n[root@EchoLZY blog]# kill -9 15481</pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h2 id=\"_nginx_配置\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">nginx 配置</h2>\n<div class=\"sectionbody\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"quoteblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<blockquote>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>要求，支持 https 访问。同时访问 <a href=\"http://echocow.cn\" class=\"bare\">http://echocow.cn</a>\n、http://www.echocow.cn 、https://www.echocow.cn 都直接转到\n<a href=\"https://echocow.cn\" class=\"bare\">https://echocow.cn</a> 上面去</p>\n</div>\n</blockquote>\n</div>\n<div class=\"olist arabic\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<ol class=\"arabic\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>由于以前配置 hexo 的时候已经配置好了 ssl 证书，所以需要改动的只有\nlocation 那里，对于 <a href=\"http://echocow.cn\" class=\"bare\">http://echocow.cn</a> 、http://www.echocow.cn\n、https://www.echocow.cn 这三个都是用重定向即可，如下：</p>\n</li>\n</ol>\n</div>\n<div class=\"literalblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre>server {\n        listen       80;\n        server_name  echocow.cn, www.echocow.cn;\n        access_log  logs/http_echocow.access.log  main;\n        location / {\n           return 301 https://echocow.cn$request_uri;\n        }\n}\n\nserver {\n        listen       443;\n        server_name  www.echocow.cn;\n        ssl_certificate   cert/www.echocow.cn.crt;\n        ssl_certificate_key  cert/www.echocow.cn.key;\n        access_log  logs/https_www_echocow.access.log  main;\n        location / {\n           return 301 https://echocow.cn$request_uri;\n        }\n}</pre>\n</div>\n</div>\n<div class=\"olist arabic\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<ol class=\"arabic\" start=\"2\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>配置 <a href=\"https://echocow.cn\" class=\"bare\">https://echocow.cn</a></p>\n</li>\n</ol>\n</div>\n<div class=\"literalblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre>server {\n    listen 443 ssl;\n    server_name echocow.cn;\n    ssl_certificate   cert/echocow.cn.crt;\n    ssl_certificate_key  cert/echocow.cn.key;\n    access_log  logs/https_echocow.access.log  main;\n    # 以前的 hexo 配置\n    #location / {\n    #    root   /usr/local/nginx/html/public;\n    #    index index.html index.htm;\n    #}\n    # 现在的 solo 配置\n    location / {\n        proxy_pass http://127.0.0.1:8765$request_uri;\n        proxy_set_header  Host $host:$server_port;\n        proxy_set_header  X-Real-IP  $remote_addr;\n        client_max_body_size  10m;\n    }\n}</pre>\n</div>\n</div>\n<div class=\"olist arabic\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<ol class=\"arabic\" start=\"3\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>重启 nginx 即可</p>\n</li>\n</ol>\n</div>\n<div class=\"literalblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre>cd /usr/local/nginx/sbin\n./nginx -s reload</pre>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h2 id=\"_问题\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">问题</h2>\n<div class=\"sectionbody\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"sect2\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h3 id=\"_从_hexo_迁移过来的数据时不时包_nginx_502_错误\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">从 hexo 迁移过来的数据时不时包 nginx 502 错误，</h3>\n<div class=\"olist arabic\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<ol class=\"arabic\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>查看 access 日志没有发现什么，查看 nginx error 日志发现错误如下</p>\n</li>\n</ol>\n</div>\n<div class=\"literalblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre>tail /var/log/nginx/error.log\n2019/01/01 21:18:55 [error] 24232#0: *112566 upstream sent too big header while reading response header from upstream, client: 1.48.57.4, server: echocow.cn, request: \"GET /articles/2018/02/12/1546344575473.html?pjax=true HTTP/1.1\", upstream: \"http://127.0.0.1:8765/articles/2018/02/12/1546344575473.html?pjax=true\", host: \"echocow.cn\", referrer: \"https://echocow.cn/\"\n2019/01/01 21:18:55 [error] 24232#0: *112566 upstream sent too big header while reading response header from upstream, client: 1.48.57.4, server: echocow.cn, request: \"GET /articles/2018/02/12/1546344575473.html HTTP/1.1\", upstream: \"http://127.0.0.1:8765/articles/2018/02/12/1546344575473.html\", host: \"echocow.cn\", referrer: \"https://echocow.cn/\"</pre>\n</div>\n</div>\n<div class=\"olist arabic\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<ol class=\"arabic\" start=\"2\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>`sent too big header`说得很明确，发送太大的头了，所以配置下nginx.conf</p>\n</li>\n</ol>\n</div>\n<div class=\"literalblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre>vim conf/nginx.conf\n# 在http块内添加如下\nproxy_buffer_size  128k;\nproxy_buffers   32 32k;\nproxy_busy_buffers_size 128k;</pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h3 id=\"_页面渲染问题\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">页面渲染问题</h3>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>使用默认的渲染引擎造成的结果就是，中间含有代码块有序列表全部都是1所以不得已要使用\nmarked 进行渲染。</p>\n</div>\n<div class=\"literalblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre>cd solo\nnpm install marked --save\nnohup node js/marked/http.js &gt;/dev/null 2&gt;&amp;1 &amp;\n# 自定义的 solo 启动别名，直接启动\nsolo</pre>\n</div>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>效果就好多啦</p>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h2 id=\"_总结\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">总结</h2>\n<div class=\"sectionbody\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>总的来说还算顺利，部署加搭建前后一个小时不到吧，感觉solo还是挺友好的，后台方面也好，分类也好，都挺不错，话说他的陪图功能简直大爱！唯一有个缺点就是搜索好丑啊哈哈哈。自己看看有没有能力改再说吧。2019\n来了，再见了 2018.</p>\n</div>\n<div class=\"quoteblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<blockquote>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>再见,2018,有得有失。 你好,2019,与君共勉。</p>\n</div>\n</blockquote>\n</div>\n</div>\n</div>","document":{"title":"新年新气象，博客迁移，迎来 solo！"},"pageAttributes":{"category":"感想","description":"新年新气象，博客迁移，迎来 solo！","image":"https://img.hacpai.com/bing/20180703.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100","sort":null}}},"pageContext":{"slug":"/articles/2019/01/01/1546349681570.html","next":{"document":{"title":"spring security + gradle + spring mvc 模板化配置"},"fields":{"slug":"/articles/2019/01/02/1546395090197.html"}},"previous":{"document":{"title":"基于 vertx web 应用 YBSport-vertx"},"fields":{"slug":"/articles/2018/10/18/1546344582189.html"}}}},"staticQueryHashes":["3069561552","3673333084"]}