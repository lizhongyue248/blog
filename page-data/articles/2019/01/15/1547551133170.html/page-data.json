{"componentChunkName":"component---src-templates-post-tsx","path":"/articles/2019/01/15/1547551133170.html","result":{"data":{"asciidoc":{"id":"1292aa30-5328-5eb4-8f90-7895ab3e3136","fields":{"slug":"/articles/2019/01/15/1547551133170.html","birthTime":"2019-01-15T12:56:15.715Z","modifiedTime":"2019-01-15T13:04:17.352Z"},"html":"<div id=\"toc\" class=\"toc\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div id=\"toctitle\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">Table of Contents</div>\n<ul class=\"sectlevel1\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_一些说明\">一些说明</a></li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_问题一_项目整合\">问题一： 项目整合</a>\n<ul class=\"sectlevel2\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_1_默认入口\">1. 默认入口</a></li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_2_打包目录\">2. 打包目录</a></li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_3_全局引入\">3. 全局引入</a></li>\n</ul>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_问题二vue\">问题二：vue</a>\n<ul class=\"sectlevel2\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_1_滚动条问题\">1. 滚动条问题</a></li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_2_soketio\">2. soketio</a></li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_3_打包问题\">3. 打包问题</a></li>\n</ul>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_待解决的问题\">待解决的问题</a></li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\"><a href=\"#_小总结\">小总结</a></li>\n</ul>\n</div>\n<div id=\"preamble\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"sectionbody\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>最近在重构我们上学期参加比赛做的一个小软件，https://github.com/GeneralAndKing/help-teacher[help\nteacher] 主要是作业收取的一款小工具，局域网内进行作业传输，简单用 vert.x\n做了一个登录注册以及数据备份与同步。为了参加比赛写的小软件，时间紧迫代码质量普遍不高，并且使用\n<a href=\"https://github.com/SimulatedGREG/electron-vue\">electron-vue</a>\n进行搭建，也发现了不少问题，而那时候第一次接触\nvue，也不理解其组件化思想，也不会组件抽离什么的，然后这次放假了，有老师对我们项目感兴趣，我们开始重构我们的软件，不再使用\nelectron-vue ，一方面因为 vue cli 3\n生成的项目结构十分让我喜欢，约定大于配置也类似于 spring boot\n的思想，所以我不需要太多的配置文件，一个就够，这是我非常喜欢的，但是目前\nelectron-vue 还不支持，而且 vue cli 3\n拥有自己的图形化界面，可以更加方便的管理项目依赖以及插件；另一方面，我们以前的项目使用的\nvue + element ui 进行开发，也发现很多 element 的组件在 electron-vue\n中有着 bug 的存在，比如很简单的一个 MessageBox\n弹框，使用的时候都会报错，然后造成整个软件其它部分的瘫痪，所以后面我们急冲冲的引入了其他的弹框组件。这次重构是对上次的一个功能上的完善，也是一个性能的优化。不过自己虽然是一个后端，自己来做前端的时候也发现一些异曲同工之处，而且因为以前使用\nvert.x ，在接触 node\n以后发现了很多地方的相似之处。今天这篇文章，主要是记录一下这个项目开始的重构过程，所以不会是一种教程似的画风，大多都是一些问题上的处理方法进行记录。<strong>不得不说的是，作为一个非专业的前端人员，在没有学过\nwebpack 、es6语法、babel\n等等一些前端方面的知识就直接上手开发，还是遇到很多问题的。</strong></p>\n</div>\n<div class=\"quoteblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<blockquote>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>项目地址：https://github.com/GeneralAndKing/teacher-tools[teacher-tools]</p>\n</div>\n</blockquote>\n<div class=\"attribution\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n— bash\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h2 id=\"_一些说明\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">一些说明</h2>\n<div class=\"sectionbody\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"ulist\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<ul data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>为了统一代码风格，使用 eslint，并且统一使用 vscode 进行开发</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>element 换为 iview， 同时为了方便修改 iview 主题，使用 less 替换原来的\nstylus</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>从 npm 改为使用 yarn</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>前端数据库依旧使用 nedb（暂定）</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>为了实时聊天，学习 socketio（暂定）</p>\n</li>\n</ul>\n</div>\n</div>\n</div>\n<div class=\"sect1\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h2 id=\"_问题一_项目整合\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">问题一： 项目整合</h2>\n<div class=\"sectionbody\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>我们在使用 vue cli 3 初始化项目后，他是一个纯正的 web\n项目，我们需要对他进行 electron\n进行整合，我们寻找了很久方案，最后终于找到一款插件进行整合 ——\n<a href=\"https://github.com/nklayman/vue-cli-plugin-electron-builder\">vue-cli-plugin-electron-builder</a>\n, 安装很方便，直接图形化界面搜索安装即可</p>\n</div>\n<div class=\"imageblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<img src=\"https://resources.echocow.cn//file/2019/01/cf3427538b7d40b2a7ebd832cc082c1f_image.png\" alt=\"搜索安装\">\n</div>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>或者命令行模式安装</p>\n</div>\n<div class=\"literalblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre>vue add electron-builder</pre>\n</div>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>然后通过</p>\n</div>\n<div class=\"literalblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre>yarn electron:serve\n\nyarn electron:build</pre>\n</div>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>进行使用。不过使用新的东西随之而来的问题就是，遇到什么问题或者其它需求的时候，只能自己摸索，而且没啥基础很难受。</p>\n</div>\n<div class=\"sect2\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h3 id=\"_1_默认入口\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">1. 默认入口</h3>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>我们移动了插件生成的文件路径以及修改了文件名，那么如何保证他能够正确的使用并进入呢？我们卡在这问题很久，最后在\ngithub 的\n<a href=\"https://github.com/nklayman/vue-cli-plugin-electron-builder/issues/44\">issue</a>\n上面找到答案，于是修改 vue.config.js 如下：</p>\n</div>\n<div class=\"listingblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre class=\"highlight\"><code class=\"language-kotlin\" data-lang=\"kotlin\">pluginOptions: {\n  electronBuilder: {\n    builderOptions: {\n      files: [\n        {\n          'filter': ['**/*']\n        }\n      ],\n      extraFiles: ['./extensions/'],\n      asar:  false\n    },\n    mainProcessFile:  'src/main/main.js',\n    mainProcessWatch: ['src/main'],\n    // [1.0.0-rc.4+] Provide a list of arguments that Electron will be launched with during \"electron:serve\",\n    // which can be accessed from the main process (src/background.js).\n    // Note that it is ignored when --debug flag is used with \"electron:serve\", as you must launch Electron yourself\n    mainProcessArgs: []\n  }\n},</code></pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h3 id=\"_2_打包目录\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">2. 打包目录</h3>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>与以往不同的是，我们有多个页面，除了 electron 的，也有 web\n的，需要更具不同的进行打包，所以我们查找资料，修改 pages 参数如下：</p>\n</div>\n<div class=\"literalblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre>...\npages:  getPages(),\n...\n/**\n* 根据 MODE 选择对应的 pages 进行打包\n*/\nfunction  getPages () {\n  return  process.env.MODE  ===  'web'\n  ? {\n    client: {\n      // entry for the page\n      entry:  'src/client/main.js',\n      // the source template\n      template:  'public/index.html',\n      // output as dist/index.html\n      filename:  'index.html'\n    }\n  }\n  : {\n    app: {\n      entry:  'src/app/main.js',\n      template:  'public/index.html',\n      filename:  'app.html'\n    },\n    communication: {\n      entry:  'src/communication/main.js',\n      template:  'public/index.html',\n      filename:  'communication.html'\n    },\n    forms: {\n      entry:  'src/forms/main.js',\n      template:  'public/index.html',\n      filename:  'forms.html'\n    }\n  }\n}</pre>\n</div>\n</div>\n</div>\n<div class=\"sect2\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h3 id=\"_3_全局引入\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">3. 全局引入</h3>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>参照了官网的例子</p>\n</div>\n<div class=\"literalblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre>...\nchainWebpack:  config  =&gt; {\n  config.resolve.alias\n  .set('app@', resolve('src/app'))\n  .set('_n', resolve('node_modules'))\n  .set('common@', resolve('src/common/'))\n  .set('communication@', resolve('src/communication/'))\n  .set('form@', resolve('src/form/'))\n  .set('client@', resolve('src/client/'))\n  const  types  = ['vue-modules', 'vue', 'normal-modules', 'normal']\n  types.forEach(type  =&gt;  addStyleResource(config.module.rule('less').oneOf(type)))\n}\n...\n\n/**\n* 全局 less 引入\n* @param  {*}  rule 传递规则\n*/\nfunction  addStyleResource (rule) {\n  rule.use('style-resource')\n    .loader('style-resources-loader')\n    .options({\n      patterns: [\n        path.resolve(__dirname, './src/common/theme/iview-variables.less')\n      ]\n    })\n}</pre>\n</div>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>不过对于 stylus 还有另外一种方式，不知道为啥 less 不行</p>\n</div>\n<div class=\"literalblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre>css: {\n  loaderOptions: {\n    stylus: {\n      import: path.resolve(__dirname, './src/styles/global.styl')\n    }\n  }\n}</pre>\n</div>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h2 id=\"_问题二vue\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">问题二：vue</h2>\n<div class=\"sectionbody\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"sect2\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h3 id=\"_1_滚动条问题\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">1. 滚动条问题</h3>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>由于我们自定义了标题，没有使用默认的标题栏，然后就会有一种情况，他的滚动条会在标题右侧了</p>\n</div>\n<div class=\"imageblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<img src=\"https://resources.echocow.cn//file/2019/01/dd4e900c3f174729917af0077e547818_1.jpg\" alt=\"滚动条\">\n</div>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>通过 css 修改如下：</p>\n</div>\n<div class=\"literalblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre>@gak-no-visible: rgba(0, 0, 0, 0);\nhtml, body {\n  overflow: hidden;\n  height: 100%;\n}\n.gak-bg-no-visible {\n  background-color: @gak-no-visible;\n}\n.gak-scroll {\n  height: 100%;\n  -webkit-overflow-scrolling: touch;\n  overflow-y: auto;\n  /*定义滚动条高宽及背景 高宽分别对应横竖滚动条的尺寸*/\n  &amp;::-webkit-scrollbar {\n    width: 8px;\n    height: 4px;\n    cursor: pointer;\n    .gak-bg-no-visible;\n  }\n  /*定义滚动条轨道 内阴影+圆角*/\n  &amp;::-webkit-scrollbar-track {\n    border: none;\n    .gak-bg-no-visible;\n  }\n  /*定义滑块 内阴影+圆角*/\n  &amp;::-webkit-scrollbar-thumb{\n    border-radius: 10px;\n    background-color: rgba(110, 110, 110, 0.2);\n  }\n}</pre>\n</div>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>修改后如图</p>\n</div>\n<div class=\"imageblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<img src=\"https://resources.echocow.cn//file/2019/01/7d17cd6d68644ab6954d9c0d44237935_TIM20190115202528.jpg\" alt=\"滚动条\">\n</div>\n</div>\n</div>\n<div class=\"sect2\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h3 id=\"_2_soketio\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">2. soketio</h3>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>找了很多组件，原本一开始使用的是\n<a href=\"https://github.com/MetinSeylan/Vue-Socket.io\">Vue-Socket.io</a>，但是发现对于\nvuex 他似乎已经不再支持，所以找了半天，改成使用了\n<a href=\"https://github.com/probil/vue-socket.io-extended\">vue-socket.io-extended</a>，目前用起来十分方便。</p>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>使用方式采用https://github.com/probil/vue-socket.io-extended/issues/91#issuecomment-397232621[外部文件扩展的方式]，能够在\naction 里面调用是及其方便的。</p>\n</div>\n</div>\n<div class=\"sect2\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h3 id=\"_3_打包问题\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">3. 打包问题</h3>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>因为我们包含的 vue 页面比较多，并且有一个不是 electron 项目而是 web\n项目，需要指定不同的打包路径，最后查阅资料，使用https://cli.vuejs.org/zh/guide/build-targets.html#%E5%BA%94%E7%94%A8[官方文档中]的方法如下：</p>\n</div>\n<div class=\"literalblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<pre>\"scripts\": {\n  \"lint\": \"vue-cli-service lint\",\n  \"electron:build\": \"vue-cli-service electron:build\",\n  \"electron:serve\": \"vue-cli-service electron:serve\",\n  \"postinstall\": \"electron-builder install-app-deps\",\n  \"test:unit\": \"vue-cli-service test:unit\",\n  \"web:serve\": \"cross-env MODE=web vue-cli-service serve\",\n  \"web:build\": \"cross-env MODE=web vue-cli-service build --dest ./extensions/dist\"\n},</pre>\n</div>\n</div>\n<div class=\"quoteblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<blockquote>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>为什么不用 -mode\n<a href=\"https://cli.vuejs.org/zh/guide/mode-and-env.html#%E6%A8%A1%E5%BC%8F\">模式</a>\n而是使用 cross-env MODE=web ？因为我们这里 -mode\n读取不到，可能使用方式不对，所以采用以前的老办法了。</p>\n</div>\n</blockquote>\n</div>\n</div>\n</div>\n</div>\n<div class=\"sect1\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h2 id=\"_待解决的问题\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">待解决的问题</h2>\n<div class=\"sectionbody\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"ulist\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<ul data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>☐ <code>作业收取</code> 和 <code>屏幕分享</code>，如果单用 node\n的话是完成不了的（或者我们不会），希望用c++来完成，由我队友负责</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>☐\n内存问题，上一次项目出现了一个典型情况就是内存占用比预期中的高，并且出现卡顿情况</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>☐ 多页面情况 vuex 状态不共享</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>☐ 开发时加载出现 首屏白屏情况，打包后不明显</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>☐ vue devtools\n不管用，多次尝试各种组件都上了还是不行（要不就是临时的），最后使用本地的，但是只有第一次运行有效，后面都是无效</p>\n</li>\n<li data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>☐ …很多杂七杂八的小问题</p>\n</li>\n</ul>\n</div>\n<div class=\"imageblock\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"content\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<img src=\"https://resources.echocow.cn//file/2019/01/70abbb3b474341849b67c77fba3cb906_image.png\" alt=\"imagepng\">\n</div>\n</div>\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>C++ 很强</p>\n</div>\n</div>\n</div>\n<div class=\"sect1\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<h2 id=\"_小总结\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">小总结</h2>\n<div class=\"sectionbody\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<div class=\"paragraph\" data-sal=\"fade\" data-sal-duration=\"500\" data-sal-repeat=\"true\">\n<p>其实是非常喜欢 electron 这种的，因为他的跨平台真的太棒，我队友操作系统是\n<code>主 windows + mint(移动硬盘)</code>，我的是\n<code>主 deepin + windows(移动硬盘)</code>，正是这种跨平台性能够让我们在不同平台下进行协作开发、然后重构的时候也对目录进行修改，也更好的进行组织以及抽取多页面的公共部分，不过自己其实还是喜欢后端哈哈哈哈，自己来做前端也是因为我们学校这一届实在找不到人一起来做了，只有我们两个人，做起来时间上很是费力，然后又要学车，大多是队友一直在弄，做了很多东西，自己就晚上弄弄页面，希望开学能够看得到成果吧。</p>\n</div>\n</div>\n</div>","document":{"title":"vue cli 3 项目与 electron 记录"},"pageAttributes":{"category":"归档","description":"vue cli 3 项目与 electron 记录","image":"https://img.hacpai.com/bing/20181231.jpg?imageView2/1/w/1280/h/720/interlace/1/q/100","sort":null}}},"pageContext":{"slug":"/articles/2019/01/15/1547551133170.html","next":{"document":{"title":"spring boot security oauth2  构建简单安全的 restful api"},"fields":{"slug":"/articles/2019/01/22/1548148450889.html"}},"previous":{"document":{"title":"再见 manjaro，你好 deepin"},"fields":{"slug":"/articles/2019/01/02/1546399233990.html"}}}},"staticQueryHashes":["3069561552","3673333084"]}