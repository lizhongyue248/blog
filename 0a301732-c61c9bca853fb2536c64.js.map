{"version":3,"sources":["webpack://z-yue/./node_modules/recoil/es/recoil.js"],"names":["_excluded","_excluded2","_excluded3","_createSuper","Derived","hasNativeReflectConstruct","Reflect","construct","sham","Proxy","Boolean","prototype","valueOf","call","e","_isNativeReflectConstruct","result","Super","NewTarget","this","constructor","arguments","apply","_marked","filterIterable","_marked2","concatIterables","_createForOfIteratorHelper","o","allowArrayLike","it","Symbol","iterator","Array","isArray","minLen","_arrayLikeToArray","n","Object","toString","slice","name","from","test","_unsupportedIterableToArray","length","i","F","s","done","value","_e","f","TypeError","err","normalCompletion","didErr","step","next","_e2","return","arr","len","arr2","ownKeys","object","enumerableOnly","keys","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","_objectSpread","target","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","Recoil_isPromise","p","then","Recoil_nullthrows","x","message","Error","Canceled","CANCELED","loadableAccessors","valueMaybe","valueOrThrow","concat","state","errorMaybe","errorOrThrow","promiseMaybe","promiseOrThrow","is","other","contents","map","_map","_this","loadableWithPromise","loadableWithValue","loadableWithError","catch","freeze","getValue","toPromise","Promise","resolve","error","reject","promise","_ref2","__value","_ref3","_ref4","_ref5","Recoil_Loadable","loadableLoading","loadableAll","inputs","every","some","find","all","Recoil_recoverableViolation","projectName","_ref6","undefined","Recoil_CopyOnWrite","set","v","Set","add","iterable","predicate","index","_iterator","_step","_context","prev","t0","finish","stop","Recoil_filterIterable","gks","Map","Recoil_gkx","gk","_gks$get","get","setPass","setFail","Recoil_gkx_1","Recoil_mapIterable","callback","_callee","_iterator2","_step2","_context2","Recoil_expectationViolation","format","_defineProperty","obj","configurable","writable","AbstractRecoilValue","newKey","RecoilState","_AbstractRecoilValue","_super","RecoilValueReadOnly","_AbstractRecoilValue2","_super2","Recoil_RecoilValue","isRecoilValue","Recoil_RecoilValue_1","Recoil_RecoilValue_2","Recoil_RecoilValue_3","Recoil_RecoilValue_4","Recoil_RecoilValue$1","__proto__","DefaultValue","DEFAULT_VALUE","RecoilValueNotReady","_Error","_super3","nodes","recoilValues","NodeMissingError","_Error2","_super4","configDeletionHandlers","getConfigDeletionHandler","Recoil_Node","registerNode","node","has","console","warn","recoilValue","getNode","getNodeMaybe","deleteNodeConfigIfPossible","_node$shouldDeleteCon","_getConfigDeletionHan","shouldDeleteConfigOnRelease","delete","setConfigDeletionHandler","fn","recoilValuesForKeys","RetentionZone","Recoil_RetentionZone","setByAddingToSet$1","getNode$1","getNodeMaybe$1","recoilValuesForKeys$1","RetentionZone$1","emptySet","ReadOnlyRecoilValueError","_Error3","_super5","initializeNodeIfNewToStore","store","treeState","trigger","storeState","getState","nodeCleanupFunctions","config","retentionCleanup","nodeKey","retainedBy","nodesRetainedByZone","retention","addToZone","zone","_step3","_iterator3","deleteFromZone","_step4","_iterator4","size","initializeRetentionForNode","nodeCleanup","init","peekNodeLoadable","peek","getDownstreamNodes","visitedNodes","visitingNodes","graph","getGraph","version","pop","_graph$nodeToNodeSubs","_step5","_iterator5","nodeToNodeSubscriptions","downstreamNode","Recoil_FunctionalCore","newValue","_state$nodeCleanupFun","_node$invalidate","invalidate","atomValues","clone","nonvalidatedAtoms","dirtyAtoms","_graph$nodeDeps$get","_storeState$nodeToCom","_storeState$nodeToCom2","type","knownAtoms","knownSelectors","downstreamNodes","loadable","isActive","isSet","isModified","deps","nodeDeps","subscribers","components","nodeToComponentSubscriptions","values","_ref7","CANCELED$1","getDownstreamNodes$1","getNodeLoadable$1","setNodeValue$1","getNodeMaybe$2","DefaultValue$1","RecoilValueNotReady$1","AbstractRecoilValue$1","RecoilState$1","RecoilValueReadOnly$1","isRecoilValue$1","applyAction","action","_step6","_ref10","valueOrUpdater","current","valueFromValueOrUpdater","_iterator6","entries","_step6$value","writeLoadableToTreeState","_key4","_key5","unvalidatedValue","applyActionsToStore","actions","replaceState","_step7","newState","copyTreeState","_iterator7","invalidateDownstreams","queueOrPerformStateUpdate","batchStack","actionsByStore","_step9","_iterator9","_getNodeMaybe","_getNodeMaybe$invalid","setRecoilValue","subscriptionID","Recoil_RecoilValueInterface","getRecoilValueAsLoadable","_ref9","_storeState$nextTree","_storeState$previousT","currentTree","nextTree","previousTree","setRecoilValueLoadable","markRecoilValueModified","setUnvalidatedRecoilValue","subscribeToRecoilValue","_ref11","componentDebugName","subID","release","subs","applyAtomValueWrites","writes","k","batchStart","_step8","_iterator8","_step8$value","invalidateDownstreams_FOR_TESTING","unstable_batchedUpdates","batchStart$1","batcher","Recoil_Batching","newBatcher","batchEnd","Recoil_Queue","enqueueExecution","Recoil_differenceSets","ret","_len3","setsWithValuesToRemove","_key6","_step10","_iterator10","FIRST","_step11","_iterator11","otherSet","Recoil_mapMap","mergeDependencyMapIntoGraph","olderGraph","upstreams","downstream","existingUpstreams","upstream","existing","Recoil_Graph","dependencyMap","_storeState$previousT2","_storeState$previousT3","_storeState$nextTree2","nextVersion","module","hamt_1","_typeof","hamt","BUCKET_SIZE","Math","pow","MASK","MAX_INDEX_NODE","MIN_ARRAY_NODE","nothing","constant","hash","str","charCodeAt","hashFragment","shift","h","toBitmap","fromBitmap","bitmap","bit","arrayUpdate","mutate","at","out","arraySpliceOut","newLen","g","empty","__hamt_isEmpty","isEmptyNode","Leaf","edit","_modify","Leaf__modify","Collision","children","Collision__modify","IndexedNode","mask","IndexedNode__modify","ArrayNode","ArrayNode__modify","mergeLeaves","h1","n1","h2","n2","subH1","subH2","canEditNode","keyEq","_v","list","child","_newValue","updateCollisionList","frag","indx","exists","canEdit","newChildren","subNodes","count","expand","_i","arraySpliceIn","newChild","removed","elements","elem","pack","editable","root","_editable","_edit","_config","_root","_size","setTree","newRoot","newSize","tryGetHash","alt","tryGet","getHash","hasHash","defKeyCompare","y","make","isEmpty","modifyHash","NaN","modify","setHash","del","removeHash","deleteHash","remove","beginMutation","endMutation","transient","appk","lazyVisitChildren","lazyVisit","rest","DONE","MapIterator","v0","visit","buildPairs","buildKeys","buildValues","fold","z","m","toVisit","_","exports","BuiltInMap","persistentMap","HashArrayMappedTrieMap","_hamt","_step12","_iterator12","_step12$value","Recoil_PersistentMap_1","graph$1","persistentMap$1","nextTreeStateVersion","getNextTreeStateVersion","makeEmptyTreeState","stateID","transactionMetadata","Recoil_State","commitDepth","transactionSubscriptions","nodeTransactionSubscriptions","queuedComponentCallbacks_DEPRECATED","suspendedComponentResolvers","graphsByVersion","versionsUsedByComponent","referenceCounts","retainablesToCheckForRelease","Recoil_unionSets","_len4","sets","_key7","_i2","_sets","_step13","_iterator13","Recoil_someSet","context","entry","cleanUpNode$1","deleteNodeConfigIfPossible$1","getNode$2","RetentionZone$2","emptySet$1","releaseRetainablesNowOnCurrentTree","retainables","_step14","_iterator14","r","_step16","_iterator16","_step15","releasableNodes","searchFromNodes","nonReleasableNodes","findReleasableNodesInner","_step17","releasableNodesFoundThisIteration","downstreams","doNotDescendInto1","doNotDescendInto2","answer","visited","_step20","_iterator20","getDownstreamNodesInTopologicalOrder","_iterator17","_storeState$retention","zonesThatCouldRetainNode","nodeChildren","_step18","parents","_iterator18","_step19","_node","_iterator19","parent","findReleasableNodes","_iterator15","releaseNode","_step21","_iterator21","_storeState$retention2","_step22","_iterator22","dep","_storeState$retention3","updateRetainCountToZero","retainable","scheduleOrPerformPossibleReleaseOfRetainable","Recoil_Retention","delta","_map$get","newCount","clear","iters","_iterator23","_step23","iter","_iterator24","_step24","val","_context3","t1","Recoil_concatIterables","Recoil_Environment","isSSR","window","isReactNative","navigator","product","isSSR$1","batchUpdates$1","initializeNodeIfNewToStore$1","peekNodeInfo$1","graph$2","DEFAULT_VALUE$1","recoilValues$1","recoilValuesForKeys$2","AbstractRecoilValue$2","getRecoilValueAsLoadable$1","setRecoilValue$1","setUnvalidatedRecoilValue$1","updateRetainCount$1","getNextTreeStateVersion$1","makeEmptyStoreState$1","Snapshot","_this2","checkRefCount_INTERNAL","_store","getLoadable","opt","isInitialized","_ref12","_ref13","mapper","mutableSnapshot","MutableSnapshot","cloneSnapshot","getStore_INTERNAL","_ref14","_callee2","_context4","abrupt","_x","replacer","graphs","newGraph","subscribeToTransactions","addTransactionMetadata","_step25","_iterator25","retain","autorelease_INTERNAL","_this3","_refCount","released","release_INTERNAL","_this4","setTimeout","getID_INTERNAL","cloneStoreState","bumpVersion","_Snapshot","_super6","snapshot","_this5","recoilState","newValueOrUpdater","_step26","_iterator26","_step26$value","Recoil_Snapshot","freshSnapshot","initializeState","Recoil_Snapshot_1","Recoil_Snapshot_2","Recoil_Snapshot_3","Recoil_Snapshot_4","Recoil_Snapshot$1","getNextTreeStateVersion$2","makeEmptyStoreState$2","cleanUpNode$2","getDownstreamNodes$2","setNodeValue$2","setUnvalidatedAtomValue_DEPRECATED$1","graph$3","cloneGraph$1","applyAtomValueWrites$1","releaseScheduledRetainablesNow$1","freshSnapshot$1","useCallback","useContext","useEffect","useMemo","useRef","useState","notInAContext","defaultStore","stateReplacerIsBeingExecuted","startNextTreeIfNeeded","AppContext","useStoreRef","MutableSourceContext","sendEndOfBatchNotifications","_step27","_iterator27","_step27$value","subscriptions","_step30","_iterator30","_step30$value","subscription","_step28","_iterator28","_step28$value","_subscription","_step29","_iterator29","_key8","comps","_step31","_iterator31","_step31$value","_step31$value$","cb","splice","Batcher","_ref15","setNotifyBatcherOfChange","storeRef","_useState","_useState2","setState","discardedVersion","nextID","RecoilRoot_INTERNAL","_ref16","_createMutableSource","initializeState_DEPRECATED","storeProp","store_INTERNAL","notifyBatcherOfChange","createMutableSource","replaced","id","_id2","metadata","_i3","_Object$keys","initial","atom","_step32","writtenNodes","_iterator32","setUnvalidatedAtomValues","initialStoreState_DEPRECATED","initialStoreState","mutableSource","_step33","_iterator33","atomKey","Provider","Recoil_RecoilRoot_react","props","override","propsExceptOverride","ancestorStoreRef","Recoil_filterMap","_step34","_iterator34","_step34$value","Recoil_filterSet","_step35","_iterator35","Recoil_invariant","condition","_useMutableSource","Recoil_mergeMaps","_len5","maps","_key9","nextKey","useMutableSource","Recoil_mutableSource","mutableSourceExists","$disableRecoilValueMutableSource_TEMP_HACK_DO_NOT_USE","Recoil_shallowArrayEqual","a","b","l","useRef$1","Recoil_useComponentName","batchUpdates$2","DEFAULT_VALUE$2","getNode$3","nodes$1","useRecoilMutableSource$1","useStoreRef$1","AbstractRecoilValue$3","getRecoilValueAsLoadable$2","setRecoilValue$2","setRecoilValueLoadable$1","setUnvalidatedRecoilValue$2","subscribeToRecoilValue$1","updateRetainCount$2","RetentionZone$3","cloneSnapshot$1","isSSR$2","mutableSourceExists$1","useMutableSource$1","useCallback$1","useEffect$1","useRef$2","useState$1","SUSPENSE_TIMEOUT_MS","handleLoadable","useRecoilValueLoadable","useRetain","getLoadableWithTesting","componentName","subscribe","_storeState","newLoadable","prevLoadableRef","useRecoilValueLoadable_MUTABLESOURCE","_useState$3","_useState$4","forceUpdate","_state","_prevLoadableRef$curr","_prevLoadableRef$curr2","useRecoilValueLoadable_LEGACY","useRecoilValue","useSetRecoilState","useTransactionSubscription","externallyVisibleAtomValuesInState","toMap","persistedAtomContentsValues","persistence","persistence_UNSTABLE","usePrevious","ref","useGotoRecoilSnapshot","keysToUpdate","_i4","_arr","_step37","_iterator37","_prev$atomValues$get","_next$atomValues$get","shouldRestoreFromSnapshots","Sentinel","SENTINEL","toRetain","timeoutID","clearTimeout","_step38","_iterator38","_step39","_iterator39","_r","previousRetainables","_step40","_iterator40","_r3","_step41","_iterator41","_step42","_iterator42","_r2","useRetain_ACTUAL","Recoil_Hooks","gotoSnapshot","_len6","args","_key10","reset","errMsg","_useState$5","_useState$6","setSnapshot","previousSnapshot","previousAtomValues","atomInfo","_node$persistence_UNS","_node$persistence_UNS2","_node$persistence_UNS3","_node$persistence_UNS4","backButton","modifiedAtoms","peekNodeInfo$2","useStoreRef$2","Recoil_useGetRecoilValueInfo","_ref17","RecoilRoot$1","useStoreRef$3","useMemo$2","Recoil_useRecoilBridgeAcrossReactRoots","_ref18","stringify","includes","String","JSON","allowFunctions","_JSON$stringify","toJSON","_step43","_iterator43","_step43$value","sort","localeCompare","join","Recoil_stableStringify","TreeCache","options","_options$onHit","_options$onSet","_options$mapNodeValue","_numLeafs","_onHit","onHit","_onSet","onSet","_mapNodeValue","mapNodeValue","getNodeValue","handlers","_this$getLeafNode","getLeafNode","_this6","findLeaf","onNodeVisit","route","leafNode","_this7","addLeaf","_ref19","_ref20","nodeValue","pruneNodeFromTree","branches","countDownstreamLeaves","_handlers$onNodeVisit","branchKey","_handlers$onNodeVisit2","_route","path","_path","_route2","_path2","_rest","_path3","_nodeKey","_nodeValue","pruneUpstreamBranches","branchNode","reduce","sum","currNode","Recoil_TreeCache_1","Recoil_TreeCache$1","Recoil_LRUCache_1","LRUCache","_options$mapKey","_maxSize","maxSize","_head","_tail","_keyMapper","mapKey","mappedKey","head","right","left","_maybeDeleteLRU","deleteLru","tail","Recoil_LRUCache$1","LRUCache$1","TreeCache$1","Recoil_treeCacheLRU","lruCache","cache","lruNode","TreeCache$2","defaultPolicy","equality","eviction","Infinity","getValueMapper","getTreeCache","Recoil_treeCacheFromPolicy","_ref21","_ref21$equality","_ref21$eviction","_ref21$maxSize","valueMapper","treeCache","executionId","Recoil_PerformanceTimings","_id","CANCELED$2","Canceled$1","loadableWithError$1","loadableWithPromise$1","loadableWithValue$1","getNodeLoadable$2","peekNodeLoadable$1","setNodeValue$3","saveDependencyMapToStore$1","DEFAULT_VALUE$3","RecoilValueNotReady$2","getConfigDeletionHandler$1","registerNode$1","isRecoilValue$3","AbstractRecoilValue$4","setRecoilValueLoadable$2","retainedByOptionWithDefault$1","cloneSnapshot$2","startPerfBlock$1","dependencyStack","waitingStores","getNewExecutionId","Recoil_selector","cachePolicy","cachePolicy_UNSTABLE","retainedBy_UNSTABLE","executionInfoMap","liveStoresCount","selectorIsLive","getExecutionInfo","depValuesDiscoveredSoFarDuringAsyncWork","latestLoadable","latestExecutionId","stateVersion","selectorInit","selectorShouldDeleteConfigOnRelease","notifyStoreWhenAsyncSettles","stores","getCachedNodeLoadable","isKeyPointingToSelector","wrapPendingPromise","depValues","clearExecutionInfo","maybeFreezeValue","setCache","depValuesToDepRoute","setDepsInStore","setLoadableInStoreToNotifyDeps","__key","errorOrPromise","isLatestExecution","updateExecutionInfoDepValues","wrapPendingDependencyPromise","existingDeps","resolvedDep","_ref22","resolvedDepKey","depValue","bypassSelectorDepCacheOnReevaluation","_evaluateSelectorGett","evaluateSelectorGetter","_evaluateSelectorGett2","maybeFreezeLoadableContents","setExecutionInfo","_step44","_iterator44","notifyStoresOfSettledAsync","_store$getState","_store$getState$curre","_store$getState2","_store$getState2$next","_store$getState$nextT","_store$getState3","_store$getState3$next","setNewDepInStore","newDepKey","bypassSelectorDepCache","endPerfBlock","resultIsError","getRecoilValue","depKey","depLoadable","gateCallback","getCallback","finally","errorOrDepPromise","_ref23","_ref24","getValFromRunningNewExecutionAndUpdatedDeps","newExecutionId","_evaluateSelectorGett3","_evaluateSelectorGett4","newDepValues","depRoute","maybeSetCacheWithLoadable","getSelectorValAndUpdatedDeps","cachedVal","depsAfterCacheDone","executionInfo","getValFromCacheAndUpdatedDownstreamDeps","inProgressExecutionInfo","_Array$from$find","_ref25","_ref27","_executionInfo$depVal","_mapOfCheckedVersions","oldDepValues","cachedDepValuesCheckedForThisVersion","mapOfCheckedVersions","isCachedVersionSame","_ref29","_ref30","nodeVal","_ref31","_ref32","oldVal","haveAsyncDepsChanged","getExecutionInfoOfInProgressExecution","cacheRoute","selectorPeek","selectorGet","indexOf","detectCircularDependencies","invalidateSelector","syncSelectorSetFinished","_ref33","setRecoilState","dangerouslyAllowMutability","loadableWithError$2","loadableWithPromise$2","loadableWithValue$2","DEFAULT_VALUE$4","DefaultValue$2","getConfigDeletionHandler$2","registerNode$2","setConfigDeletionHandler$1","isRecoilValue$4","markRecoilValueModified$1","setRecoilValue$3","setRecoilValueLoadable$3","retainedByOptionWithDefault$2","baseAtom","defaultLoadable","default","cachedAnswerForUnvalidatedValue","cleanupEffectsByStore","_ref","_state$atomValues$get3","_cachedAnswerForUnval","nonvalidatedValue","validatorResult","validator","validatedValueLoadable","initState","alreadyKnown","notifyDefaultSubscribers","_store$getState$nextT3","initValue","pendingSetSelf","effects_UNSTABLE","_step45","duringInit","setSelf","effect","currentValue","resetSelf","handler","currentStore","_currentStore$getStat","_previousTree$atomVal","_pendingSetSelf","_pendingSetSelf2","_pendingSetSelf3","oldLoadable","oldValue","_iterator45","_options$effects_UNST","cleanup","_store$getState$nextT4","initLoadable","wrappedPromise","_state$atomValues$get","_store$getState$nextT2","_state$atomValues$get2","_cleanupEffectsByStor","optionsDefault","restOptions","base","storedValue","sel","_ref34","baseValue","_get","_ref35","_set","atomWithFallback","Recoil_atom","Recoil_MapCache_1","MapCache","Recoil_MapCache$1","LRUCache$2","MapCache$1","defaultPolicy$1","getValueMapper$1","getCache","Recoil_cacheFromPolicy","_ref36","_ref36$equality","_ref36$eviction","_ref36$maxSize","setConfigDeletionHandler$2","Recoil_atomFamily","_options$cachePolicyF","atomCache","cachePolicyForParams_UNSTABLE","params","_stableStringify","cachedAtom","atomOptions","newAtom","setConfigDeletionHandler$3","nextIndex","Recoil_selectorFamily","selectorCache","cachedSelector","newSelector","myKey","myGet","callbacks","myCachePolicy","constantSelector","Recoil_constSelector","throwingSelector","Recoil_errorSelector","Recoil_readOnlySelector","loadableWithError$3","loadableWithPromise$3","loadableWithValue$3","concurrentRequests","_step46","results","fill","exceptions","_iterator46","_step46$value","isError","exp","unwrapDependencies","dependencies","getOwnPropertyNames","getValueFromLoadablePromiseResult","hasOwnProperty","wrapResults","idx","wrapLoadables","exception","Recoil_WaitFor","waitForNone","_ref37","_concurrentRequests","_concurrentRequests2","waitForAny","_ref38","_concurrentRequests3","_concurrentRequests4","_step47","_iterator47","_loop","_step47$value","waitForAll","_ref39","_concurrentRequests5","_concurrentRequests6","exceptionResults","syncResults","asyncResults","waitForAllSettled","_ref40","_concurrentRequests7","_concurrentRequests8","noWait","dependency","_ref41","batchUpdates$3","setBatcher$1","DefaultValue$3","RecoilRoot$2","isRecoilValue$5","retentionZone$1","freshSnapshot$2","Recoil_index","RecoilRoot","useRecoilBridgeAcrossReactRoots_UNSTABLE","selector","retentionZone","atomFamily","selectorFamily","constSelector","errorSelector","readOnlySelector","useRecoilState","useRecoilStateLoadable","useResetRecoilState","useGetRecoilValueInfo_UNSTABLE","useRecoilCallback","useRecoilSnapshot","useRecoilTransactionObserver_UNSTABLE","useTransactionObservation_UNSTABLE","useSetUnvalidatedAtomValues_UNSTABLE","batchUpdates","setBatcher","snapshot_UNSTABLE","Recoil_index_1","Recoil_index_2","Recoil_index_3","Recoil_index_4","Recoil_index_5","Recoil_index_6","Recoil_index_7","Recoil_index_8","Recoil_index_9","Recoil_index_10","Recoil_index_11","Recoil_index_12","Recoil_index_13","Recoil_index_14","Recoil_index_15","Recoil_index_16","Recoil_index_17","Recoil_index_18","Recoil_index_19","Recoil_index_20","Recoil_index_21","Recoil_index_22","Recoil_index_23","Recoil_index_24","Recoil_index_25","Recoil_index_26","Recoil_index_27","Recoil_index_28","Recoil_index_29","Recoil_index_30","Recoil_index_31","Recoil_index_32","Recoil_index_33","Recoil_index_34"],"mappings":"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","file":"0a301732-c61c9bca853fb2536c64.js","sourcesContent":["import _toArray from \"/home/runner/work/blog/blog/node_modules/babel-preset-gatsby/node_modules/@babel/runtime/helpers/esm/toArray\";\nimport _toConsumableArray from \"/home/runner/work/blog/blog/node_modules/babel-preset-gatsby/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"/home/runner/work/blog/blog/node_modules/babel-preset-gatsby/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _assertThisInitialized from \"/home/runner/work/blog/blog/node_modules/babel-preset-gatsby/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _asyncToGenerator from \"/home/runner/work/blog/blog/node_modules/babel-preset-gatsby/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _createClass from \"/home/runner/work/blog/blog/node_modules/babel-preset-gatsby/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _slicedToArray from \"/home/runner/work/blog/blog/node_modules/babel-preset-gatsby/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _wrapNativeSuper from \"/home/runner/work/blog/blog/node_modules/babel-preset-gatsby/node_modules/@babel/runtime/helpers/esm/wrapNativeSuper\";\nimport _inherits from \"/home/runner/work/blog/blog/node_modules/babel-preset-gatsby/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/home/runner/work/blog/blog/node_modules/babel-preset-gatsby/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/runner/work/blog/blog/node_modules/babel-preset-gatsby/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty2 from \"/home/runner/work/blog/blog/node_modules/babel-preset-gatsby/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/home/runner/work/blog/blog/node_modules/babel-preset-gatsby/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nvar _excluded = [\"override\"],\n    _excluded2 = [\"default\"],\n    _excluded3 = [\"cachePolicyForParams_UNSTABLE\"];\nimport \"core-js/modules/es.promise.finally.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport _regeneratorRuntime from \"/home/runner/work/blog/blog/node_modules/babel-preset-gatsby/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(filterIterable),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(concatIterables);\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty2(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport reactDom from 'react-dom';\nimport react from 'react';\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n// Split declaration and implementation to allow this function to pretend to\n// check for actual instance of Promise instead of something with a `then`\n// method.\n// eslint-disable-next-line no-redeclare\n\nfunction isPromise(p) {\n  return !!p && typeof p.then === 'function';\n}\n\nvar Recoil_isPromise = isPromise;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction nullthrows(x, message) {\n  if (x != null) {\n    return x;\n  }\n\n  throw new Error(message !== null && message !== void 0 ? message : 'Got unexpected null or undefined');\n}\n\nvar Recoil_nullthrows = nullthrows; // TODO Convert Loadable to a Class to allow for runtime type detection.\n// Containing static factories of withValue(), withError(), withPromise(), and all()\n\nvar Canceled = function Canceled() {\n  _classCallCheck(this, Canceled);\n};\n\nvar CANCELED = new Canceled();\nvar loadableAccessors = {\n  valueMaybe: function valueMaybe() {\n    return undefined;\n  },\n  valueOrThrow: function valueOrThrow() {\n    var error = new Error(\"Loadable expected value, but in \\\"\".concat(this.state, \"\\\" state\")); // V8 keeps closures alive until stack is accessed, this prevents a memory leak\n\n    throw error;\n  },\n  errorMaybe: function errorMaybe() {\n    return undefined;\n  },\n  errorOrThrow: function errorOrThrow() {\n    var error = new Error(\"Loadable expected error, but in \\\"\".concat(this.state, \"\\\" state\")); // V8 keeps closures alive until stack is accessed, this prevents a memory leak\n\n    throw error;\n  },\n  promiseMaybe: function promiseMaybe() {\n    return undefined;\n  },\n  promiseOrThrow: function promiseOrThrow() {\n    var error = new Error(\"Loadable expected promise, but in \\\"\".concat(this.state, \"\\\" state\")); // V8 keeps closures alive until stack is accessed, this prevents a memory leak\n\n    throw error;\n  },\n  is: function is(other) {\n    return other.state === this.state && other.contents === this.contents;\n  },\n  // TODO Unit tests\n  // TODO Convert Loadable to a Class to better support chaining\n  //      by returning a Loadable from a map function\n  map: function map(_map) {\n    var _this = this;\n\n    if (this.state === 'hasError') {\n      return this;\n    }\n\n    if (this.state === 'hasValue') {\n      try {\n        var next = _map(this.contents); // TODO if next instanceof Loadable, then return next\n\n\n        return Recoil_isPromise(next) ? loadableWithPromise(next) : loadableWithValue(next);\n      } catch (e) {\n        return Recoil_isPromise(e) ? // If we \"suspended\", then try again.\n        // errors and subsequent retries will be handled in 'loading' case\n        loadableWithPromise(e.next(function () {\n          return _map(_this.contents);\n        })) : loadableWithError(e);\n      }\n    }\n\n    if (this.state === 'loading') {\n      return loadableWithPromise(this.contents // TODO if map returns a loadable, then return the value or promise or throw the error\n      .then(_map).catch(function (e) {\n        if (Recoil_isPromise(e)) {\n          // we were \"suspended,\" try again\n          return e.then(function () {\n            return _map(_this.contents);\n          });\n        }\n\n        throw e;\n      }));\n    }\n\n    var error = new Error('Invalid Loadable state'); // V8 keeps closures alive until stack is accessed, this prevents a memory leak\n\n    throw error;\n  }\n};\n\nfunction loadableWithValue(value) {\n  // Build objects this way since Flow doesn't support disjoint unions for class properties\n  return Object.freeze(_objectSpread(_objectSpread({\n    state: 'hasValue',\n    contents: value\n  }, loadableAccessors), {}, {\n    getValue: function getValue() {\n      return this.contents;\n    },\n    toPromise: function toPromise() {\n      return Promise.resolve(this.contents);\n    },\n    valueMaybe: function valueMaybe() {\n      return this.contents;\n    },\n    valueOrThrow: function valueOrThrow() {\n      return this.contents;\n    }\n  }));\n}\n\nfunction loadableWithError(error) {\n  return Object.freeze(_objectSpread(_objectSpread({\n    state: 'hasError',\n    contents: error\n  }, loadableAccessors), {}, {\n    getValue: function getValue() {\n      throw this.contents;\n    },\n    toPromise: function toPromise() {\n      return Promise.reject(this.contents);\n    },\n    errorMaybe: function errorMaybe() {\n      return this.contents;\n    },\n    errorOrThrow: function errorOrThrow() {\n      return this.contents;\n    }\n  }));\n}\n\nfunction loadableWithPromise(promise) {\n  return Object.freeze(_objectSpread(_objectSpread({\n    state: 'loading',\n    contents: promise\n  }, loadableAccessors), {}, {\n    getValue: function getValue() {\n      throw this.contents.then(function (_ref2) {\n        var __value = _ref2.__value;\n        return __value;\n      });\n    },\n    toPromise: function toPromise() {\n      return this.contents.then(function (_ref3) {\n        var __value = _ref3.__value;\n        return __value;\n      });\n    },\n    promiseMaybe: function promiseMaybe() {\n      return this.contents.then(function (_ref4) {\n        var __value = _ref4.__value;\n        return __value;\n      });\n    },\n    promiseOrThrow: function promiseOrThrow() {\n      return this.contents.then(function (_ref5) {\n        var __value = _ref5.__value;\n        return __value;\n      });\n    }\n  }));\n}\n\nfunction loadableLoading() {\n  return loadableWithPromise(new Promise(function () {}));\n}\n\nfunction loadableAll(inputs) {\n  return inputs.every(function (i) {\n    return i.state === 'hasValue';\n  }) ? loadableWithValue(inputs.map(function (i) {\n    return i.contents;\n  })) : inputs.some(function (i) {\n    return i.state === 'hasError';\n  }) ? loadableWithError(Recoil_nullthrows(inputs.find(function (i) {\n    return i.state === 'hasError';\n  }), 'Invalid loadable passed to loadableAll').contents) : loadableWithPromise(Promise.all(inputs.map(function (i) {\n    return i.contents;\n  })).then(function (value) {\n    return {\n      __value: value\n    };\n  }));\n}\n\nvar Recoil_Loadable = {\n  loadableWithValue: loadableWithValue,\n  loadableWithError: loadableWithError,\n  loadableWithPromise: loadableWithPromise,\n  loadableLoading: loadableLoading,\n  loadableAll: loadableAll,\n  Canceled: Canceled,\n  CANCELED: CANCELED\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction recoverableViolation(message, projectName) {\n  var _ref6 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      error = _ref6.error;\n\n  if (process.env.NODE_ENV !== \"production\") {\n    console.error(message, error);\n  }\n\n  return null;\n}\n\nvar recoverableViolation_1 = recoverableViolation; // @oss-only\n\nvar Recoil_recoverableViolation = recoverableViolation_1;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Utilities for working with built-in Maps and Sets without mutating them.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction setByAddingToSet(set, v) {\n  var next = new Set(set);\n  next.add(v);\n  return next;\n}\n\nfunction setByDeletingFromSet(set, v) {\n  var next = new Set(set);\n  next.delete(v);\n  return next;\n}\n\nfunction mapBySettingInMap(map, k, v) {\n  var next = new Map(map);\n  next.set(k, v);\n  return next;\n}\n\nfunction mapByUpdatingInMap(map, k, updater) {\n  var next = new Map(map);\n  next.set(k, updater(next.get(k)));\n  return next;\n}\n\nfunction mapByDeletingFromMap(map, k) {\n  var next = new Map(map);\n  next.delete(k);\n  return next;\n}\n\nfunction mapByDeletingMultipleFromMap(map, ks) {\n  var next = new Map(map);\n  ks.forEach(function (k) {\n    return next.delete(k);\n  });\n  return next;\n}\n\nvar Recoil_CopyOnWrite = {\n  setByAddingToSet: setByAddingToSet,\n  setByDeletingFromSet: setByDeletingFromSet,\n  mapBySettingInMap: mapBySettingInMap,\n  mapByUpdatingInMap: mapByUpdatingInMap,\n  mapByDeletingFromMap: mapByDeletingFromMap,\n  mapByDeletingMultipleFromMap: mapByDeletingMultipleFromMap\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\n/**\n * Creates a new iterable whose output is generated by passing the input\n * iterable's values through the filter function.\n */\n\nfunction filterIterable(iterable, predicate) {\n  var index, _iterator, _step, value;\n\n  return _regeneratorRuntime.wrap(function filterIterable$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          // Use generator to create iterable/iterator\n          index = 0;\n          _iterator = _createForOfIteratorHelper(iterable);\n          _context.prev = 2;\n\n          _iterator.s();\n\n        case 4:\n          if ((_step = _iterator.n()).done) {\n            _context.next = 11;\n            break;\n          }\n\n          value = _step.value;\n\n          if (!predicate(value, index++)) {\n            _context.next = 9;\n            break;\n          }\n\n          _context.next = 9;\n          return value;\n\n        case 9:\n          _context.next = 4;\n          break;\n\n        case 11:\n          _context.next = 16;\n          break;\n\n        case 13:\n          _context.prev = 13;\n          _context.t0 = _context[\"catch\"](2);\n\n          _iterator.e(_context.t0);\n\n        case 16:\n          _context.prev = 16;\n\n          _iterator.f();\n\n          return _context.finish(16);\n\n        case 19:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked, null, [[2, 13, 16, 19]]);\n}\n\nvar Recoil_filterIterable = filterIterable;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nvar gks = new Map().set('recoil_hamt_2020', true).set('recoil_memory_managament_2020', true);\n\nfunction Recoil_gkx(gk) {\n  var _gks$get;\n\n  return (_gks$get = gks.get(gk)) !== null && _gks$get !== void 0 ? _gks$get : false;\n}\n\nRecoil_gkx.setPass = function (gk) {\n  gks.set(gk, true);\n};\n\nRecoil_gkx.setFail = function (gk) {\n  gks.set(gk, false);\n};\n\nvar Recoil_gkx_1 = Recoil_gkx; // @oss-only\n\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\n/**\n * Creates a new iterable whose output is generated by passing the input\n * iterable's values through the mapper function.\n */\n\nfunction mapIterable(iterable, callback) {\n  // Use generator to create iterable/iterator\n  return /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n    var index, _iterator2, _step2, value;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            index = 0;\n            _iterator2 = _createForOfIteratorHelper(iterable);\n            _context2.prev = 2;\n\n            _iterator2.s();\n\n          case 4:\n            if ((_step2 = _iterator2.n()).done) {\n              _context2.next = 10;\n              break;\n            }\n\n            value = _step2.value;\n            _context2.next = 8;\n            return callback(value, index++);\n\n          case 8:\n            _context2.next = 4;\n            break;\n\n          case 10:\n            _context2.next = 15;\n            break;\n\n          case 12:\n            _context2.prev = 12;\n            _context2.t0 = _context2[\"catch\"](2);\n\n            _iterator2.e(_context2.t0);\n\n          case 15:\n            _context2.prev = 15;\n\n            _iterator2.f();\n\n            return _context2.finish(15);\n\n          case 18:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee, null, [[2, 12, 15, 18]]);\n  })();\n}\n\nvar Recoil_mapIterable = mapIterable;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction sprintf(format) {\n  for (var _len = arguments.length, args = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  var index = 0;\n  return format.replace(/%s/g, function () {\n    return String(args[index++]);\n  });\n}\n\nvar sprintf_1 = sprintf;\n\nfunction expectationViolation(format) {\n  if (process.env.NODE_ENV !== \"production\") {\n    for (var _len2 = arguments.length, args = new Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      args[_key2 - 1] = arguments[_key2];\n    }\n\n    var message = sprintf_1.call.apply(sprintf_1, [null, format].concat(args));\n    var error = new Error(message);\n    error.name = 'Expectation Violation';\n    console.error(error);\n  }\n}\n\nvar expectationViolation_1 = expectationViolation; // @oss-only\n\nvar Recoil_expectationViolation = expectationViolation_1;\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n// eslint-disable-next-line no-unused-vars\n\n\nvar AbstractRecoilValue = function AbstractRecoilValue(newKey) {\n  _classCallCheck(this, AbstractRecoilValue);\n\n  _defineProperty(this, \"key\", void 0);\n\n  this.key = newKey;\n};\n\nvar RecoilState = /*#__PURE__*/function (_AbstractRecoilValue) {\n  _inherits(RecoilState, _AbstractRecoilValue);\n\n  var _super = _createSuper(RecoilState);\n\n  function RecoilState() {\n    _classCallCheck(this, RecoilState);\n\n    return _super.apply(this, arguments);\n  }\n\n  return RecoilState;\n}(AbstractRecoilValue);\n\nvar RecoilValueReadOnly = /*#__PURE__*/function (_AbstractRecoilValue2) {\n  _inherits(RecoilValueReadOnly, _AbstractRecoilValue2);\n\n  var _super2 = _createSuper(RecoilValueReadOnly);\n\n  function RecoilValueReadOnly() {\n    _classCallCheck(this, RecoilValueReadOnly);\n\n    return _super2.apply(this, arguments);\n  }\n\n  return RecoilValueReadOnly;\n}(AbstractRecoilValue);\n\nfunction isRecoilValue(x) {\n  return x instanceof RecoilState || x instanceof RecoilValueReadOnly;\n}\n\nvar Recoil_RecoilValue = {\n  AbstractRecoilValue: AbstractRecoilValue,\n  RecoilState: RecoilState,\n  RecoilValueReadOnly: RecoilValueReadOnly,\n  isRecoilValue: isRecoilValue\n};\nvar Recoil_RecoilValue_1 = Recoil_RecoilValue.AbstractRecoilValue;\nvar Recoil_RecoilValue_2 = Recoil_RecoilValue.RecoilState;\nvar Recoil_RecoilValue_3 = Recoil_RecoilValue.RecoilValueReadOnly;\nvar Recoil_RecoilValue_4 = Recoil_RecoilValue.isRecoilValue;\nvar Recoil_RecoilValue$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  AbstractRecoilValue: Recoil_RecoilValue_1,\n  RecoilState: Recoil_RecoilValue_2,\n  RecoilValueReadOnly: Recoil_RecoilValue_3,\n  isRecoilValue: Recoil_RecoilValue_4\n});\n\nvar DefaultValue = function DefaultValue() {\n  _classCallCheck(this, DefaultValue);\n};\n\nvar DEFAULT_VALUE = new DefaultValue();\n\nvar RecoilValueNotReady = /*#__PURE__*/function (_Error) {\n  _inherits(RecoilValueNotReady, _Error);\n\n  var _super3 = _createSuper(RecoilValueNotReady);\n\n  function RecoilValueNotReady(key) {\n    _classCallCheck(this, RecoilValueNotReady);\n\n    return _super3.call(this, \"Tried to set the value of Recoil selector \".concat(key, \" using an updater function, but it is an async selector in a pending or error state; this is not supported.\"));\n  }\n\n  return RecoilValueNotReady;\n}( /*#__PURE__*/_wrapNativeSuper(Error)); // flowlint-next-line unclear-type:off\n\n\nvar nodes = new Map(); // flowlint-next-line unclear-type:off\n\nvar recoilValues = new Map();\n/* eslint-disable no-redeclare */\n\nfunction recoilValuesForKeys(keys) {\n  return Recoil_mapIterable(keys, function (key) {\n    return Recoil_nullthrows(recoilValues.get(key));\n  });\n}\n\nfunction registerNode(node) {\n  if (nodes.has(node.key)) {\n    var message = \"Duplicate atom key \\\"\".concat(node.key, \"\\\". This is a FATAL ERROR in\\n      production. But it is safe to ignore this warning if it occurred because of\\n      hot module replacement.\"); // TODO Need to figure out if there is a standard/open-source equivalent to see if hot module replacement is happening:\n    // prettier-ignore\n    // @fb-only: if (__DEV__) {\n    // @fb-only: const isAcceptingUpdate = require('__debug').isAcceptingUpdate;\n    // prettier-ignore\n    // @fb-only: if (typeof isAcceptingUpdate !== 'function' || !isAcceptingUpdate()) {\n    // @fb-only: expectationViolation(message, 'recoil');\n    // @fb-only: }\n    // prettier-ignore\n    // @fb-only: } else {\n    // @fb-only: recoverableViolation(message, 'recoil');\n    // @fb-only: }\n\n    console.warn(message); // @oss-only\n  }\n\n  nodes.set(node.key, node);\n  var recoilValue = node.set == null ? new Recoil_RecoilValue$1.RecoilValueReadOnly(node.key) : new Recoil_RecoilValue$1.RecoilState(node.key);\n  recoilValues.set(node.key, recoilValue);\n  return recoilValue;\n}\n/* eslint-enable no-redeclare */\n\n\nvar NodeMissingError = /*#__PURE__*/function (_Error2) {\n  _inherits(NodeMissingError, _Error2);\n\n  var _super4 = _createSuper(NodeMissingError);\n\n  function NodeMissingError() {\n    _classCallCheck(this, NodeMissingError);\n\n    return _super4.apply(this, arguments);\n  }\n\n  return NodeMissingError;\n}( /*#__PURE__*/_wrapNativeSuper(Error)); // flowlint-next-line unclear-type:off\n\n\nfunction getNode(key) {\n  var node = nodes.get(key);\n\n  if (node == null) {\n    throw new NodeMissingError(\"Missing definition for RecoilValue: \\\"\".concat(key, \"\\\"\\\"\"));\n  }\n\n  return node;\n} // flowlint-next-line unclear-type:off\n\n\nfunction getNodeMaybe(key) {\n  return nodes.get(key);\n}\n\nvar configDeletionHandlers = new Map();\n\nfunction deleteNodeConfigIfPossible(key) {\n  var _node$shouldDeleteCon;\n\n  if (!Recoil_gkx_1('recoil_memory_managament_2020')) {\n    return;\n  }\n\n  var node = nodes.get(key);\n\n  if (node === null || node === void 0 ? void 0 : (_node$shouldDeleteCon = node.shouldDeleteConfigOnRelease) === null || _node$shouldDeleteCon === void 0 ? void 0 : _node$shouldDeleteCon.call(node)) {\n    var _getConfigDeletionHan;\n\n    nodes.delete(key);\n    (_getConfigDeletionHan = getConfigDeletionHandler(key)) === null || _getConfigDeletionHan === void 0 ? void 0 : _getConfigDeletionHan();\n    configDeletionHandlers.delete(key);\n  }\n}\n\nfunction setConfigDeletionHandler(key, fn) {\n  if (!Recoil_gkx_1('recoil_memory_managament_2020')) {\n    return;\n  }\n\n  if (fn === undefined) {\n    configDeletionHandlers.delete(key);\n  } else {\n    configDeletionHandlers.set(key, fn);\n  }\n}\n\nfunction getConfigDeletionHandler(key) {\n  return configDeletionHandlers.get(key);\n}\n\nvar Recoil_Node = {\n  nodes: nodes,\n  recoilValues: recoilValues,\n  registerNode: registerNode,\n  getNode: getNode,\n  getNodeMaybe: getNodeMaybe,\n  deleteNodeConfigIfPossible: deleteNodeConfigIfPossible,\n  setConfigDeletionHandler: setConfigDeletionHandler,\n  getConfigDeletionHandler: getConfigDeletionHandler,\n  recoilValuesForKeys: recoilValuesForKeys,\n  NodeMissingError: NodeMissingError,\n  DefaultValue: DefaultValue,\n  DEFAULT_VALUE: DEFAULT_VALUE,\n  RecoilValueNotReady: RecoilValueNotReady\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nvar RetentionZone = function RetentionZone() {\n  _classCallCheck(this, RetentionZone);\n};\n\nfunction retentionZone() {\n  return new RetentionZone();\n}\n\nvar Recoil_RetentionZone = {\n  RetentionZone: RetentionZone,\n  retentionZone: retentionZone\n};\nvar setByAddingToSet$1 = Recoil_CopyOnWrite.setByAddingToSet;\nvar getNode$1 = Recoil_Node.getNode,\n    getNodeMaybe$1 = Recoil_Node.getNodeMaybe,\n    recoilValuesForKeys$1 = Recoil_Node.recoilValuesForKeys;\nvar RetentionZone$1 = Recoil_RetentionZone.RetentionZone; // flowlint-next-line unclear-type:off\n\nvar emptySet = Object.freeze(new Set());\n\nvar ReadOnlyRecoilValueError = /*#__PURE__*/function (_Error3) {\n  _inherits(ReadOnlyRecoilValueError, _Error3);\n\n  var _super5 = _createSuper(ReadOnlyRecoilValueError);\n\n  function ReadOnlyRecoilValueError() {\n    _classCallCheck(this, ReadOnlyRecoilValueError);\n\n    return _super5.apply(this, arguments);\n  }\n\n  return ReadOnlyRecoilValueError;\n}( /*#__PURE__*/_wrapNativeSuper(Error));\n\nfunction initializeRetentionForNode(store, nodeKey, retainedBy) {\n  if (!Recoil_gkx_1('recoil_memory_managament_2020')) {\n    return function () {\n      return undefined;\n    };\n  }\n\n  var nodesRetainedByZone = store.getState().retention.nodesRetainedByZone;\n\n  function addToZone(zone) {\n    var set = nodesRetainedByZone.get(zone);\n\n    if (!set) {\n      nodesRetainedByZone.set(zone, set = new Set());\n    }\n\n    set.add(nodeKey);\n  }\n\n  if (retainedBy instanceof RetentionZone$1) {\n    addToZone(retainedBy);\n  } else if (Array.isArray(retainedBy)) {\n    var _iterator3 = _createForOfIteratorHelper(retainedBy),\n        _step3;\n\n    try {\n      for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n        var zone = _step3.value;\n        addToZone(zone);\n      }\n    } catch (err) {\n      _iterator3.e(err);\n    } finally {\n      _iterator3.f();\n    }\n  }\n\n  return function () {\n    if (!Recoil_gkx_1('recoil_memory_managament_2020')) {\n      return;\n    }\n\n    var nodesRetainedByZone = store.getState().retention.nodesRetainedByZone;\n\n    function deleteFromZone(zone) {\n      var set = nodesRetainedByZone.get(zone);\n\n      if (set) {\n        set.delete(nodeKey);\n      }\n\n      if (set && set.size === 0) {\n        nodesRetainedByZone.delete(zone);\n      }\n    }\n\n    if (retainedBy instanceof RetentionZone$1) {\n      deleteFromZone(retainedBy);\n    } else if (Array.isArray(retainedBy)) {\n      var _iterator4 = _createForOfIteratorHelper(retainedBy),\n          _step4;\n\n      try {\n        for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n          var _zone = _step4.value;\n          deleteFromZone(_zone);\n        }\n      } catch (err) {\n        _iterator4.e(err);\n      } finally {\n        _iterator4.f();\n      }\n    }\n  };\n}\n\nfunction initializeNodeIfNewToStore(store, treeState, key, trigger) {\n  var storeState = store.getState();\n\n  if (storeState.nodeCleanupFunctions.has(key)) {\n    return;\n  }\n\n  var config = getNode$1(key);\n  var retentionCleanup = initializeRetentionForNode(store, key, config.retainedBy);\n  var nodeCleanup = config.init(store, treeState, trigger);\n  storeState.nodeCleanupFunctions.set(key, function () {\n    nodeCleanup();\n    retentionCleanup();\n  });\n}\n\nfunction cleanUpNode(store, key) {\n  var _state$nodeCleanupFun;\n\n  var state = store.getState();\n  (_state$nodeCleanupFun = state.nodeCleanupFunctions.get(key)) === null || _state$nodeCleanupFun === void 0 ? void 0 : _state$nodeCleanupFun();\n  state.nodeCleanupFunctions.delete(key);\n} // Get the current value loadable of a node and update the state.\n// Update dependencies and subscriptions for selectors.\n// Update saved value validation for atoms.\n\n\nfunction getNodeLoadable(store, state, key) {\n  initializeNodeIfNewToStore(store, state, key, 'get');\n  return getNode$1(key).get(store, state);\n} // Peek at the current value loadable for a node without any evaluation or state change\n\n\nfunction peekNodeLoadable(store, state, key) {\n  return getNode$1(key).peek(store, state);\n} // Write value directly to state bypassing the Node interface as the node\n// definitions may not have been loaded yet when processing the initial snapshot.\n\n\nfunction setUnvalidatedAtomValue_DEPRECATED(state, key, newValue) {\n  var _node$invalidate;\n\n  var node = getNodeMaybe$1(key);\n  node === null || node === void 0 ? void 0 : (_node$invalidate = node.invalidate) === null || _node$invalidate === void 0 ? void 0 : _node$invalidate.call(node, state);\n  return _objectSpread(_objectSpread({}, state), {}, {\n    atomValues: state.atomValues.clone().delete(key),\n    nonvalidatedAtoms: state.nonvalidatedAtoms.clone().set(key, newValue),\n    dirtyAtoms: setByAddingToSet$1(state.dirtyAtoms, key)\n  });\n} // Return the discovered dependencies and values to be written by setting\n// a node value. (Multiple values may be written due to selectors getting to\n// set upstreams; deps may be discovered because of reads in updater functions.)\n\n\nfunction setNodeValue(store, state, key, newValue) {\n  var node = getNode$1(key);\n\n  if (node.set == null) {\n    throw new ReadOnlyRecoilValueError(\"Attempt to set read-only RecoilValue: \".concat(key));\n  }\n\n  var set = node.set; // so flow doesn't lose the above refinement.\n\n  initializeNodeIfNewToStore(store, state, key, 'set');\n  return set(store, state, newValue);\n}\n\nfunction peekNodeInfo(store, state, key) {\n  var _graph$nodeDeps$get, _storeState$nodeToCom, _storeState$nodeToCom2;\n\n  var storeState = store.getState();\n  var graph = store.getGraph(state.version);\n  var type = storeState.knownAtoms.has(key) ? 'atom' : storeState.knownSelectors.has(key) ? 'selector' : undefined;\n  var downstreamNodes = Recoil_filterIterable(getDownstreamNodes(store, state, new Set([key])), function (nodeKey) {\n    return nodeKey !== key;\n  });\n  return {\n    loadable: peekNodeLoadable(store, state, key),\n    isActive: storeState.knownAtoms.has(key) || storeState.knownSelectors.has(key),\n    isSet: type === 'selector' ? false : state.atomValues.has(key),\n    isModified: state.dirtyAtoms.has(key),\n    type: type,\n    // Report current dependencies.  If the node hasn't been evaluated, then\n    // dependencies may be missing based on the current state.\n    deps: recoilValuesForKeys$1((_graph$nodeDeps$get = graph.nodeDeps.get(key)) !== null && _graph$nodeDeps$get !== void 0 ? _graph$nodeDeps$get : []),\n    // Reportsall \"current\" subscribers.  Evaluating other nodes or\n    // previous in-progress async evaluations may introduce new subscribers.\n    subscribers: {\n      nodes: recoilValuesForKeys$1(downstreamNodes),\n      components: Recoil_mapIterable((_storeState$nodeToCom = (_storeState$nodeToCom2 = storeState.nodeToComponentSubscriptions.get(key)) === null || _storeState$nodeToCom2 === void 0 ? void 0 : _storeState$nodeToCom2.values()) !== null && _storeState$nodeToCom !== void 0 ? _storeState$nodeToCom : [], function (_ref7) {\n        var _ref8 = _slicedToArray(_ref7, 1),\n            name = _ref8[0];\n\n        return {\n          name: name\n        };\n      })\n    }\n  };\n} // Find all of the recursively dependent nodes\n\n\nfunction getDownstreamNodes(store, state, keys) {\n  var visitedNodes = new Set();\n  var visitingNodes = Array.from(keys);\n  var graph = store.getGraph(state.version);\n\n  for (var key = visitingNodes.pop(); key; key = visitingNodes.pop()) {\n    var _graph$nodeToNodeSubs;\n\n    visitedNodes.add(key);\n    var subscribedNodes = (_graph$nodeToNodeSubs = graph.nodeToNodeSubscriptions.get(key)) !== null && _graph$nodeToNodeSubs !== void 0 ? _graph$nodeToNodeSubs : emptySet;\n\n    var _iterator5 = _createForOfIteratorHelper(subscribedNodes),\n        _step5;\n\n    try {\n      for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n        var downstreamNode = _step5.value;\n\n        if (!visitedNodes.has(downstreamNode)) {\n          visitingNodes.push(downstreamNode);\n        }\n      }\n    } catch (err) {\n      _iterator5.e(err);\n    } finally {\n      _iterator5.f();\n    }\n  }\n\n  return visitedNodes;\n}\n\nvar Recoil_FunctionalCore = {\n  getNodeLoadable: getNodeLoadable,\n  peekNodeLoadable: peekNodeLoadable,\n  setNodeValue: setNodeValue,\n  cleanUpNode: cleanUpNode,\n  setUnvalidatedAtomValue_DEPRECATED: setUnvalidatedAtomValue_DEPRECATED,\n  peekNodeInfo: peekNodeInfo,\n  getDownstreamNodes: getDownstreamNodes,\n  initializeNodeIfNewToStore: initializeNodeIfNewToStore\n};\nvar CANCELED$1 = Recoil_Loadable.CANCELED;\nvar getDownstreamNodes$1 = Recoil_FunctionalCore.getDownstreamNodes,\n    getNodeLoadable$1 = Recoil_FunctionalCore.getNodeLoadable,\n    setNodeValue$1 = Recoil_FunctionalCore.setNodeValue;\nvar getNodeMaybe$2 = Recoil_Node.getNodeMaybe;\nvar DefaultValue$1 = Recoil_Node.DefaultValue,\n    RecoilValueNotReady$1 = Recoil_Node.RecoilValueNotReady;\nvar AbstractRecoilValue$1 = Recoil_RecoilValue$1.AbstractRecoilValue,\n    RecoilState$1 = Recoil_RecoilValue$1.RecoilState,\n    RecoilValueReadOnly$1 = Recoil_RecoilValue$1.RecoilValueReadOnly,\n    isRecoilValue$1 = Recoil_RecoilValue$1.isRecoilValue;\n\nfunction getRecoilValueAsLoadable(store, _ref9) {\n  var key = _ref9.key;\n  var treeState = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : store.getState().currentTree;\n\n  var _storeState$nextTree, _storeState$previousT; // Reading from an older tree can cause bugs because the dependencies that we\n  // discover during the read are lost.\n\n\n  var storeState = store.getState();\n\n  if (!(treeState.version === storeState.currentTree.version || treeState.version === ((_storeState$nextTree = storeState.nextTree) === null || _storeState$nextTree === void 0 ? void 0 : _storeState$nextTree.version) || treeState.version === ((_storeState$previousT = storeState.previousTree) === null || _storeState$previousT === void 0 ? void 0 : _storeState$previousT.version))) {\n    Recoil_recoverableViolation('Tried to read from a discarded tree');\n  }\n\n  var loadable = getNodeLoadable$1(store, treeState, key);\n\n  if (loadable.state === 'loading') {\n    loadable.contents.catch(function () {\n      /**\n       * HACK: intercept thrown error here to prevent an uncaught promise exception. Ideally this would happen closer to selector\n       * execution (perhaps introducing a new ERROR class to be resolved by async selectors that are in an error state)\n       */\n      return CANCELED$1;\n    });\n  }\n\n  return loadable;\n}\n\nfunction applyAtomValueWrites(atomValues, writes) {\n  var result = atomValues.clone();\n  writes.forEach(function (v, k) {\n    if (v.state === 'hasValue' && v.contents instanceof DefaultValue$1) {\n      result.delete(k);\n    } else {\n      result.set(k, v);\n    }\n  });\n  return result;\n}\n\nfunction valueFromValueOrUpdater(store, state, _ref10, valueOrUpdater) {\n  var key = _ref10.key;\n\n  if (typeof valueOrUpdater === 'function') {\n    // Updater form: pass in the current value. Throw if the current value\n    // is unavailable (namely when updating an async selector that's\n    // pending or errored):\n    var current = getNodeLoadable$1(store, state, key);\n\n    if (current.state === 'loading') {\n      throw new RecoilValueNotReady$1(key);\n    } else if (current.state === 'hasError') {\n      throw current.contents;\n    } // T itself may be a function, so our refinement is not sufficient:\n\n\n    return valueOrUpdater(current.contents); // flowlint-line unclear-type:off\n  } else {\n    return valueOrUpdater;\n  }\n}\n\nfunction applyAction(store, state, action) {\n  if (action.type === 'set') {\n    var recoilValue = action.recoilValue,\n        valueOrUpdater = action.valueOrUpdater;\n    var newValue = valueFromValueOrUpdater(store, state, recoilValue, valueOrUpdater);\n    var writes = setNodeValue$1(store, state, recoilValue.key, newValue);\n\n    var _iterator6 = _createForOfIteratorHelper(writes.entries()),\n        _step6;\n\n    try {\n      for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n        var _step6$value = _slicedToArray(_step6.value, 2),\n            key = _step6$value[0],\n            loadable = _step6$value[1];\n\n        writeLoadableToTreeState(state, key, loadable);\n      }\n    } catch (err) {\n      _iterator6.e(err);\n    } finally {\n      _iterator6.f();\n    }\n  } else if (action.type === 'setLoadable') {\n    var _key3 = action.recoilValue.key,\n        _loadable = action.loadable;\n    writeLoadableToTreeState(state, _key3, _loadable);\n  } else if (action.type === 'markModified') {\n    var _key4 = action.recoilValue.key;\n    state.dirtyAtoms.add(_key4);\n  } else if (action.type === 'setUnvalidated') {\n    var _node$invalidate; // Write value directly to state bypassing the Node interface as the node\n    // definitions may not have been loaded yet when processing the initial snapshot.\n\n\n    var _key5 = action.recoilValue.key,\n        unvalidatedValue = action.unvalidatedValue;\n    var node = getNodeMaybe$2(_key5);\n    node === null || node === void 0 ? void 0 : (_node$invalidate = node.invalidate) === null || _node$invalidate === void 0 ? void 0 : _node$invalidate.call(node, state);\n    state.atomValues.delete(_key5);\n    state.nonvalidatedAtoms.set(_key5, unvalidatedValue);\n    state.dirtyAtoms.add(_key5);\n  } else {\n    Recoil_recoverableViolation(\"Unknown action \".concat(action.type));\n  }\n}\n\nfunction writeLoadableToTreeState(state, key, loadable) {\n  if (loadable.state === 'hasValue' && loadable.contents instanceof DefaultValue$1) {\n    state.atomValues.delete(key);\n  } else {\n    state.atomValues.set(key, loadable);\n  }\n\n  state.dirtyAtoms.add(key);\n  state.nonvalidatedAtoms.delete(key);\n}\n\nfunction applyActionsToStore(store, actions) {\n  store.replaceState(function (state) {\n    var newState = copyTreeState(state);\n\n    var _iterator7 = _createForOfIteratorHelper(actions),\n        _step7;\n\n    try {\n      for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n        var action = _step7.value;\n        applyAction(store, newState, action);\n      }\n    } catch (err) {\n      _iterator7.e(err);\n    } finally {\n      _iterator7.f();\n    }\n\n    invalidateDownstreams(store, newState);\n    return newState;\n  });\n}\n\nfunction queueOrPerformStateUpdate(store, action) {\n  if (batchStack.length) {\n    var actionsByStore = batchStack[batchStack.length - 1];\n    var actions = actionsByStore.get(store);\n\n    if (!actions) {\n      actionsByStore.set(store, actions = []);\n    }\n\n    actions.push(action);\n  } else {\n    applyActionsToStore(store, [action]);\n  }\n}\n\nvar batchStack = [];\n\nfunction batchStart() {\n  var actionsByStore = new Map();\n  batchStack.push(actionsByStore);\n  return function () {\n    var _iterator8 = _createForOfIteratorHelper(actionsByStore),\n        _step8;\n\n    try {\n      for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n        var _step8$value = _slicedToArray(_step8.value, 2),\n            store = _step8$value[0],\n            actions = _step8$value[1];\n\n        applyActionsToStore(store, actions);\n      }\n    } catch (err) {\n      _iterator8.e(err);\n    } finally {\n      _iterator8.f();\n    }\n\n    var popped = batchStack.pop();\n\n    if (popped !== actionsByStore) {\n      Recoil_recoverableViolation('Incorrect order of batch popping');\n    }\n  };\n}\n\nfunction copyTreeState(state) {\n  return _objectSpread(_objectSpread({}, state), {}, {\n    atomValues: state.atomValues.clone(),\n    nonvalidatedAtoms: state.nonvalidatedAtoms.clone(),\n    dirtyAtoms: new Set(state.dirtyAtoms)\n  });\n}\n\nfunction invalidateDownstreams(store, state) {\n  // Inform any nodes that were changed or downstream of changes so that they\n  // can clear out any caches as needed due to the update:\n  var downstreams = getDownstreamNodes$1(store, state, state.dirtyAtoms);\n\n  var _iterator9 = _createForOfIteratorHelper(downstreams),\n      _step9;\n\n  try {\n    for (_iterator9.s(); !(_step9 = _iterator9.n()).done;) {\n      var key = _step9.value;\n\n      var _getNodeMaybe, _getNodeMaybe$invalid;\n\n      (_getNodeMaybe = getNodeMaybe$2(key)) === null || _getNodeMaybe === void 0 ? void 0 : (_getNodeMaybe$invalid = _getNodeMaybe.invalidate) === null || _getNodeMaybe$invalid === void 0 ? void 0 : _getNodeMaybe$invalid.call(_getNodeMaybe, state);\n    }\n  } catch (err) {\n    _iterator9.e(err);\n  } finally {\n    _iterator9.f();\n  }\n}\n\nfunction setRecoilValue(store, recoilValue, valueOrUpdater) {\n  queueOrPerformStateUpdate(store, {\n    type: 'set',\n    recoilValue: recoilValue,\n    valueOrUpdater: valueOrUpdater\n  });\n}\n\nfunction setRecoilValueLoadable(store, recoilValue, loadable) {\n  if (loadable instanceof DefaultValue$1) {\n    return setRecoilValue(store, recoilValue, loadable);\n  }\n\n  queueOrPerformStateUpdate(store, {\n    type: 'setLoadable',\n    recoilValue: recoilValue,\n    loadable: loadable\n  });\n}\n\nfunction markRecoilValueModified(store, recoilValue) {\n  queueOrPerformStateUpdate(store, {\n    type: 'markModified',\n    recoilValue: recoilValue\n  });\n}\n\nfunction setUnvalidatedRecoilValue(store, recoilValue, unvalidatedValue) {\n  queueOrPerformStateUpdate(store, {\n    type: 'setUnvalidated',\n    recoilValue: recoilValue,\n    unvalidatedValue: unvalidatedValue\n  });\n}\n\nvar subscriptionID = 0;\n\nfunction subscribeToRecoilValue(store, _ref11, callback) {\n  var key = _ref11.key;\n  var componentDebugName = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n  var subID = subscriptionID++;\n  var storeState = store.getState();\n\n  if (!storeState.nodeToComponentSubscriptions.has(key)) {\n    storeState.nodeToComponentSubscriptions.set(key, new Map());\n  }\n\n  Recoil_nullthrows(storeState.nodeToComponentSubscriptions.get(key)).set(subID, [componentDebugName !== null && componentDebugName !== void 0 ? componentDebugName : '<not captured>', callback]);\n  return {\n    release: function release() {\n      var storeState = store.getState();\n      var subs = storeState.nodeToComponentSubscriptions.get(key);\n\n      if (subs === undefined || !subs.has(subID)) {\n        Recoil_recoverableViolation(\"Subscription missing at release time for atom \".concat(key, \". This is a bug in Recoil.\"));\n        return;\n      }\n\n      subs.delete(subID);\n\n      if (subs.size === 0) {\n        storeState.nodeToComponentSubscriptions.delete(key);\n      }\n    }\n  };\n}\n\nvar Recoil_RecoilValueInterface = {\n  RecoilValueReadOnly: RecoilValueReadOnly$1,\n  AbstractRecoilValue: AbstractRecoilValue$1,\n  RecoilState: RecoilState$1,\n  getRecoilValueAsLoadable: getRecoilValueAsLoadable,\n  setRecoilValue: setRecoilValue,\n  setRecoilValueLoadable: setRecoilValueLoadable,\n  markRecoilValueModified: markRecoilValueModified,\n  setUnvalidatedRecoilValue: setUnvalidatedRecoilValue,\n  subscribeToRecoilValue: subscribeToRecoilValue,\n  isRecoilValue: isRecoilValue$1,\n  applyAtomValueWrites: applyAtomValueWrites,\n  // TODO Remove export when deprecating initialStoreState_DEPRECATED in RecoilRoot\n  batchStart: batchStart,\n  invalidateDownstreams_FOR_TESTING: invalidateDownstreams\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n *\n * This is to export esstiential functions from react-dom\n * for our web build\n */\n\nvar unstable_batchedUpdates = reactDom.unstable_batchedUpdates;\nvar ReactBatchedUpdates = {\n  unstable_batchedUpdates: unstable_batchedUpdates\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n *\n * This is to export esstiential functions from react-dom\n * for our web build\n */\n// @fb-only: const {unstable_batchedUpdates} = require('ReactDOMComet');\n\nvar unstable_batchedUpdates$1 = ReactBatchedUpdates.unstable_batchedUpdates; // @oss-only\n\nvar Recoil_ReactBatchedUpdates = {\n  unstable_batchedUpdates: unstable_batchedUpdates$1\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nvar batchStart$1 = Recoil_RecoilValueInterface.batchStart;\nvar unstable_batchedUpdates$2 = Recoil_ReactBatchedUpdates.unstable_batchedUpdates;\nvar batcher = unstable_batchedUpdates$2; // flowlint-next-line unclear-type:off\n\n/**\n * Sets the provided batcher function as the batcher function used by Recoil.\n *\n * Set the batcher to a custom batcher for your renderer,\n * if you use a renderer other than React DOM or React Native.\n */\n\nvar setBatcher = function setBatcher(newBatcher) {\n  batcher = newBatcher;\n};\n/**\n * Returns the current batcher function.\n */\n\n\nvar getBatcher = function getBatcher() {\n  return batcher;\n};\n/**\n * Calls the current batcher function and passes the\n * provided callback function.\n */\n\n\nvar batchUpdates = function batchUpdates(callback) {\n  batcher(function () {\n    var batchEnd = function batchEnd() {\n      return undefined;\n    };\n\n    try {\n      batchEnd = batchStart$1();\n      callback();\n    } finally {\n      batchEnd();\n    }\n  });\n};\n\nvar Recoil_Batching = {\n  getBatcher: getBatcher,\n  setBatcher: setBatcher,\n  batchUpdates: batchUpdates\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction enqueueExecution(s, f) {\n  f();\n}\n\nvar Recoil_Queue = {\n  enqueueExecution: enqueueExecution\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\n/**\n * Returns a set containing all of the values from the first set that are not\n * present in any of the subsequent sets.\n *\n * Note: this is written procedurally (i.e., without filterSet) for performant\n * use in tight loops.\n */\n\nfunction differenceSets(set) {\n  var ret = new Set();\n\n  for (var _len3 = arguments.length, setsWithValuesToRemove = new Array(_len3 > 1 ? _len3 - 1 : 0), _key6 = 1; _key6 < _len3; _key6++) {\n    setsWithValuesToRemove[_key6 - 1] = arguments[_key6];\n  }\n\n  var _iterator10 = _createForOfIteratorHelper(set),\n      _step10;\n\n  try {\n    FIRST: for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n      var value = _step10.value;\n\n      var _iterator11 = _createForOfIteratorHelper(setsWithValuesToRemove),\n          _step11;\n\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var otherSet = _step11.value;\n\n          if (otherSet.has(value)) {\n            continue FIRST;\n          }\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n\n      ret.add(value);\n    }\n  } catch (err) {\n    _iterator10.e(err);\n  } finally {\n    _iterator10.f();\n  }\n\n  return ret;\n}\n\nvar Recoil_differenceSets = differenceSets;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\n/**\n * Returns a new Map object with the same keys as the original, but with the\n * values replaced with the output of the given callback function.\n */\n\nfunction mapMap(map, callback) {\n  var result = new Map();\n  map.forEach(function (value, key) {\n    result.set(key, callback(value, key));\n  });\n  return result;\n}\n\nvar Recoil_mapMap = mapMap;\n\nfunction graph() {\n  return {\n    nodeDeps: new Map(),\n    nodeToNodeSubscriptions: new Map()\n  };\n}\n\nfunction cloneGraph(graph) {\n  return {\n    nodeDeps: Recoil_mapMap(graph.nodeDeps, function (s) {\n      return new Set(s);\n    }),\n    nodeToNodeSubscriptions: Recoil_mapMap(graph.nodeToNodeSubscriptions, function (s) {\n      return new Set(s);\n    })\n  };\n} // Note that this overwrites the deps of existing nodes, rather than unioning\n// the new deps with the old deps.\n\n\nfunction mergeDependencyMapIntoGraph(deps, graph, // If olderGraph is given then we will not overwrite changes made to the given\n// graph compared with olderGraph:\nolderGraph) {\n  var nodeDeps = graph.nodeDeps,\n      nodeToNodeSubscriptions = graph.nodeToNodeSubscriptions;\n  deps.forEach(function (upstreams, downstream) {\n    var existingUpstreams = nodeDeps.get(downstream);\n\n    if (existingUpstreams && olderGraph && existingUpstreams !== olderGraph.nodeDeps.get(downstream)) {\n      return;\n    } // Update nodeDeps:\n\n\n    nodeDeps.set(downstream, new Set(upstreams)); // Add new deps to nodeToNodeSubscriptions:\n\n    var addedUpstreams = existingUpstreams == null ? upstreams : Recoil_differenceSets(upstreams, existingUpstreams);\n    addedUpstreams.forEach(function (upstream) {\n      if (!nodeToNodeSubscriptions.has(upstream)) {\n        nodeToNodeSubscriptions.set(upstream, new Set());\n      }\n\n      var existing = Recoil_nullthrows(nodeToNodeSubscriptions.get(upstream));\n      existing.add(downstream);\n    }); // Remove removed deps from nodeToNodeSubscriptions:\n\n    if (existingUpstreams) {\n      var removedUpstreams = Recoil_differenceSets(existingUpstreams, upstreams);\n      removedUpstreams.forEach(function (upstream) {\n        if (!nodeToNodeSubscriptions.has(upstream)) {\n          return;\n        }\n\n        var existing = Recoil_nullthrows(nodeToNodeSubscriptions.get(upstream));\n        existing.delete(downstream);\n\n        if (existing.size === 0) {\n          nodeToNodeSubscriptions.delete(upstream);\n        }\n      });\n    }\n  });\n}\n\nfunction saveDependencyMapToStore(dependencyMap, store, version) {\n  var _storeState$nextTree, _storeState$previousT, _storeState$previousT2, _storeState$previousT3;\n\n  var storeState = store.getState();\n\n  if (!(version === storeState.currentTree.version || version === ((_storeState$nextTree = storeState.nextTree) === null || _storeState$nextTree === void 0 ? void 0 : _storeState$nextTree.version) || version === ((_storeState$previousT = storeState.previousTree) === null || _storeState$previousT === void 0 ? void 0 : _storeState$previousT.version))) {\n    Recoil_recoverableViolation('Tried to save dependencies to a discarded tree');\n  } // Merge the dependencies discovered into the store's dependency map\n  // for the version that was read:\n\n\n  var graph = store.getGraph(version);\n  mergeDependencyMapIntoGraph(dependencyMap, graph); // If this version is not the latest version, also write these dependencies\n  // into later versions if they don't already have their own:\n\n  if (version === ((_storeState$previousT2 = storeState.previousTree) === null || _storeState$previousT2 === void 0 ? void 0 : _storeState$previousT2.version)) {\n    var currentGraph = store.getGraph(storeState.currentTree.version);\n    mergeDependencyMapIntoGraph(dependencyMap, currentGraph, graph);\n  }\n\n  if (version === ((_storeState$previousT3 = storeState.previousTree) === null || _storeState$previousT3 === void 0 ? void 0 : _storeState$previousT3.version) || version === storeState.currentTree.version) {\n    var _storeState$nextTree2;\n\n    var nextVersion = (_storeState$nextTree2 = storeState.nextTree) === null || _storeState$nextTree2 === void 0 ? void 0 : _storeState$nextTree2.version;\n\n    if (nextVersion !== undefined) {\n      var nextGraph = store.getGraph(nextVersion);\n      mergeDependencyMapIntoGraph(dependencyMap, nextGraph, graph);\n    }\n  }\n}\n\nfunction mergeDepsIntoDependencyMap(from, into) {\n  from.forEach(function (upstreamDeps, downstreamNode) {\n    if (!into.has(downstreamNode)) {\n      into.set(downstreamNode, new Set());\n    }\n\n    var deps = Recoil_nullthrows(into.get(downstreamNode));\n    upstreamDeps.forEach(function (dep) {\n      return deps.add(dep);\n    });\n  });\n}\n\nfunction addToDependencyMap(downstream, upstream, dependencyMap) {\n  if (!dependencyMap.has(downstream)) {\n    dependencyMap.set(downstream, new Set());\n  }\n\n  Recoil_nullthrows(dependencyMap.get(downstream)).add(upstream);\n}\n\nvar Recoil_Graph = {\n  addToDependencyMap: addToDependencyMap,\n  cloneGraph: cloneGraph,\n  graph: graph,\n  mergeDepsIntoDependencyMap: mergeDepsIntoDependencyMap,\n  saveDependencyMapToStore: saveDependencyMapToStore\n};\n\nfunction createCommonjsModule(fn, module) {\n  return module = {\n    exports: {}\n  }, fn(module, module.exports), module.exports;\n}\n\nvar hamt_1 = createCommonjsModule(function (module) {\n  var _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n    return typeof obj;\n  } : function (obj) {\n    return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n  };\n  /**\n      @fileOverview Hash Array Mapped Trie.\n  \n      Code based on: https://github.com/exclipy/pdata\n  */\n\n\n  var hamt = {}; // export\n\n  /* Configuration\n   ******************************************************************************/\n\n  var SIZE = 5;\n  var BUCKET_SIZE = Math.pow(2, SIZE);\n  var MASK = BUCKET_SIZE - 1;\n  var MAX_INDEX_NODE = BUCKET_SIZE / 2;\n  var MIN_ARRAY_NODE = BUCKET_SIZE / 4;\n  /*\n   ******************************************************************************/\n\n  var nothing = {};\n\n  var constant = function constant(x) {\n    return function () {\n      return x;\n    };\n  };\n  /**\n      Get 32 bit hash of string.\n  \n      Based on:\n      http://stackoverflow.com/questions/7616461/generate-a-hash-from-string-in-javascript-jquery\n  */\n\n\n  var hash = hamt.hash = function (str) {\n    var type = typeof str === 'undefined' ? 'undefined' : _typeof(str);\n    if (type === 'number') return str;\n    if (type !== 'string') str += '';\n    var hash = 0;\n\n    for (var i = 0, len = str.length; i < len; ++i) {\n      var c = str.charCodeAt(i);\n      hash = (hash << 5) - hash + c | 0;\n    }\n\n    return hash;\n  };\n  /* Bit Ops\n   ******************************************************************************/\n\n  /**\n      Hamming weight.\n  \n      Taken from: http://jsperf.com/hamming-weight\n  */\n\n\n  var popcount = function popcount(x) {\n    x -= x >> 1 & 0x55555555;\n    x = (x & 0x33333333) + (x >> 2 & 0x33333333);\n    x = x + (x >> 4) & 0x0f0f0f0f;\n    x += x >> 8;\n    x += x >> 16;\n    return x & 0x7f;\n  };\n\n  var hashFragment = function hashFragment(shift, h) {\n    return h >>> shift & MASK;\n  };\n\n  var toBitmap = function toBitmap(x) {\n    return 1 << x;\n  };\n\n  var fromBitmap = function fromBitmap(bitmap, bit) {\n    return popcount(bitmap & bit - 1);\n  };\n  /* Array Ops\n   ******************************************************************************/\n\n  /**\n      Set a value in an array.\n  \n      @param mutate Should the input array be mutated?\n      @param at Index to change.\n      @param v New value\n      @param arr Array.\n  */\n\n\n  var arrayUpdate = function arrayUpdate(mutate, at, v, arr) {\n    var out = arr;\n\n    if (!mutate) {\n      var len = arr.length;\n      out = new Array(len);\n\n      for (var i = 0; i < len; ++i) {\n        out[i] = arr[i];\n      }\n    }\n\n    out[at] = v;\n    return out;\n  };\n  /**\n      Remove a value from an array.\n  \n      @param mutate Should the input array be mutated?\n      @param at Index to remove.\n      @param arr Array.\n  */\n\n\n  var arraySpliceOut = function arraySpliceOut(mutate, at, arr) {\n    var newLen = arr.length - 1;\n    var i = 0;\n    var g = 0;\n    var out = arr;\n\n    if (mutate) {\n      i = g = at;\n    } else {\n      out = new Array(newLen);\n\n      while (i < at) {\n        out[g++] = arr[i++];\n      }\n    }\n\n    ++i;\n\n    while (i <= newLen) {\n      out[g++] = arr[i++];\n    }\n\n    if (mutate) {\n      out.length = newLen;\n    }\n\n    return out;\n  };\n  /**\n      Insert a value into an array.\n  \n      @param mutate Should the input array be mutated?\n      @param at Index to insert at.\n      @param v Value to insert,\n      @param arr Array.\n  */\n\n\n  var arraySpliceIn = function arraySpliceIn(mutate, at, v, arr) {\n    var len = arr.length;\n\n    if (mutate) {\n      var _i = len;\n\n      while (_i >= at) {\n        arr[_i--] = arr[_i];\n      }\n\n      arr[at] = v;\n      return arr;\n    }\n\n    var i = 0,\n        g = 0;\n    var out = new Array(len + 1);\n\n    while (i < at) {\n      out[g++] = arr[i++];\n    }\n\n    out[at] = v;\n\n    while (i < len) {\n      out[++g] = arr[i++];\n    }\n\n    return out;\n  };\n  /* Node Structures\n   ******************************************************************************/\n\n\n  var LEAF = 1;\n  var COLLISION = 2;\n  var INDEX = 3;\n  var ARRAY = 4;\n  /**\n      Empty node.\n  */\n\n  var empty = {\n    __hamt_isEmpty: true\n  };\n\n  var isEmptyNode = function isEmptyNode(x) {\n    return x === empty || x && x.__hamt_isEmpty;\n  };\n  /**\n      Leaf holding a value.\n  \n      @member edit Edit of the node.\n      @member hash Hash of key.\n      @member key Key.\n      @member value Value stored.\n  */\n\n\n  var Leaf = function Leaf(edit, hash, key, value) {\n    return {\n      type: LEAF,\n      edit: edit,\n      hash: hash,\n      key: key,\n      value: value,\n      _modify: Leaf__modify\n    };\n  };\n  /**\n      Leaf holding multiple values with the same hash but different keys.\n  \n      @member edit Edit of the node.\n      @member hash Hash of key.\n      @member children Array of collision children node.\n  */\n\n\n  var Collision = function Collision(edit, hash, children) {\n    return {\n      type: COLLISION,\n      edit: edit,\n      hash: hash,\n      children: children,\n      _modify: Collision__modify\n    };\n  };\n  /**\n      Internal node with a sparse set of children.\n  \n      Uses a bitmap and array to pack children.\n  \n    @member edit Edit of the node.\n      @member mask Bitmap that encode the positions of children in the array.\n      @member children Array of child nodes.\n  */\n\n\n  var IndexedNode = function IndexedNode(edit, mask, children) {\n    return {\n      type: INDEX,\n      edit: edit,\n      mask: mask,\n      children: children,\n      _modify: IndexedNode__modify\n    };\n  };\n  /**\n      Internal node with many children.\n  \n      @member edit Edit of the node.\n      @member size Number of children.\n      @member children Array of child nodes.\n  */\n\n\n  var ArrayNode = function ArrayNode(edit, size, children) {\n    return {\n      type: ARRAY,\n      edit: edit,\n      size: size,\n      children: children,\n      _modify: ArrayNode__modify\n    };\n  };\n  /**\n      Is `node` a leaf node?\n  */\n\n\n  var isLeaf = function isLeaf(node) {\n    return node === empty || node.type === LEAF || node.type === COLLISION;\n  };\n  /* Internal node operations.\n   ******************************************************************************/\n\n  /**\n      Expand an indexed node into an array node.\n  \n    @param edit Current edit.\n      @param frag Index of added child.\n      @param child Added child.\n      @param mask Index node mask before child added.\n      @param subNodes Index node children before child added.\n  */\n\n\n  var expand = function expand(edit, frag, child, bitmap, subNodes) {\n    var arr = [];\n    var bit = bitmap;\n    var count = 0;\n\n    for (var i = 0; bit; ++i) {\n      if (bit & 1) arr[i] = subNodes[count++];\n      bit >>>= 1;\n    }\n\n    arr[frag] = child;\n    return ArrayNode(edit, count + 1, arr);\n  };\n  /**\n      Collapse an array node into a indexed node.\n  \n    @param edit Current edit.\n      @param count Number of elements in new array.\n      @param removed Index of removed element.\n      @param elements Array node children before remove.\n  */\n\n\n  var pack = function pack(edit, count, removed, elements) {\n    var children = new Array(count - 1);\n    var g = 0;\n    var bitmap = 0;\n\n    for (var i = 0, len = elements.length; i < len; ++i) {\n      if (i !== removed) {\n        var elem = elements[i];\n\n        if (elem && !isEmptyNode(elem)) {\n          children[g++] = elem;\n          bitmap |= 1 << i;\n        }\n      }\n    }\n\n    return IndexedNode(edit, bitmap, children);\n  };\n  /**\n      Merge two leaf nodes.\n  \n      @param shift Current shift.\n      @param h1 Node 1 hash.\n      @param n1 Node 1.\n      @param h2 Node 2 hash.\n      @param n2 Node 2.\n  */\n\n\n  var mergeLeaves = function mergeLeaves(edit, shift, h1, n1, h2, n2) {\n    if (h1 === h2) return Collision(edit, h1, [n2, n1]);\n    var subH1 = hashFragment(shift, h1);\n    var subH2 = hashFragment(shift, h2);\n    return IndexedNode(edit, toBitmap(subH1) | toBitmap(subH2), subH1 === subH2 ? [mergeLeaves(edit, shift + SIZE, h1, n1, h2, n2)] : subH1 < subH2 ? [n1, n2] : [n2, n1]);\n  };\n  /**\n      Update an entry in a collision list.\n  \n      @param mutate Should mutation be used?\n      @param edit Current edit.\n      @param keyEq Key compare function.\n      @param hash Hash of collision.\n      @param list Collision list.\n      @param f Update function.\n      @param k Key to update.\n      @param size Size ref.\n  */\n\n\n  var updateCollisionList = function updateCollisionList(mutate, edit, keyEq, h, list, f, k, size) {\n    var len = list.length;\n\n    for (var i = 0; i < len; ++i) {\n      var child = list[i];\n\n      if (keyEq(k, child.key)) {\n        var value = child.value;\n\n        var _newValue = f(value);\n\n        if (_newValue === value) return list;\n\n        if (_newValue === nothing) {\n          --size.value;\n          return arraySpliceOut(mutate, i, list);\n        }\n\n        return arrayUpdate(mutate, i, Leaf(edit, h, k, _newValue), list);\n      }\n    }\n\n    var newValue = f();\n    if (newValue === nothing) return list;\n    ++size.value;\n    return arrayUpdate(mutate, len, Leaf(edit, h, k, newValue), list);\n  };\n\n  var canEditNode = function canEditNode(edit, node) {\n    return edit === node.edit;\n  };\n  /* Editing\n   ******************************************************************************/\n\n\n  var Leaf__modify = function Leaf__modify(edit, keyEq, shift, f, h, k, size) {\n    if (keyEq(k, this.key)) {\n      var _v = f(this.value);\n\n      if (_v === this.value) return this;else if (_v === nothing) {\n        --size.value;\n        return empty;\n      }\n\n      if (canEditNode(edit, this)) {\n        this.value = _v;\n        return this;\n      }\n\n      return Leaf(edit, h, k, _v);\n    }\n\n    var v = f();\n    if (v === nothing) return this;\n    ++size.value;\n    return mergeLeaves(edit, shift, this.hash, this, h, Leaf(edit, h, k, v));\n  };\n\n  var Collision__modify = function Collision__modify(edit, keyEq, shift, f, h, k, size) {\n    if (h === this.hash) {\n      var canEdit = canEditNode(edit, this);\n      var list = updateCollisionList(canEdit, edit, keyEq, this.hash, this.children, f, k, size);\n      if (list === this.children) return this;\n      return list.length > 1 ? Collision(edit, this.hash, list) : list[0]; // collapse single element collision list\n    }\n\n    var v = f();\n    if (v === nothing) return this;\n    ++size.value;\n    return mergeLeaves(edit, shift, this.hash, this, h, Leaf(edit, h, k, v));\n  };\n\n  var IndexedNode__modify = function IndexedNode__modify(edit, keyEq, shift, f, h, k, size) {\n    var mask = this.mask;\n    var children = this.children;\n    var frag = hashFragment(shift, h);\n    var bit = toBitmap(frag);\n    var indx = fromBitmap(mask, bit);\n    var exists = mask & bit;\n    var current = exists ? children[indx] : empty;\n\n    var child = current._modify(edit, keyEq, shift + SIZE, f, h, k, size);\n\n    if (current === child) return this;\n    var canEdit = canEditNode(edit, this);\n    var bitmap = mask;\n    var newChildren = void 0;\n\n    if (exists && isEmptyNode(child)) {\n      // remove\n      bitmap &= ~bit;\n      if (!bitmap) return empty;\n      if (children.length <= 2 && isLeaf(children[indx ^ 1])) return children[indx ^ 1]; // collapse\n\n      newChildren = arraySpliceOut(canEdit, indx, children);\n    } else if (!exists && !isEmptyNode(child)) {\n      // add\n      if (children.length >= MAX_INDEX_NODE) return expand(edit, frag, child, mask, children);\n      bitmap |= bit;\n      newChildren = arraySpliceIn(canEdit, indx, child, children);\n    } else {\n      // modify\n      newChildren = arrayUpdate(canEdit, indx, child, children);\n    }\n\n    if (canEdit) {\n      this.mask = bitmap;\n      this.children = newChildren;\n      return this;\n    }\n\n    return IndexedNode(edit, bitmap, newChildren);\n  };\n\n  var ArrayNode__modify = function ArrayNode__modify(edit, keyEq, shift, f, h, k, size) {\n    var count = this.size;\n    var children = this.children;\n    var frag = hashFragment(shift, h);\n    var child = children[frag];\n\n    var newChild = (child || empty)._modify(edit, keyEq, shift + SIZE, f, h, k, size);\n\n    if (child === newChild) return this;\n    var canEdit = canEditNode(edit, this);\n    var newChildren = void 0;\n\n    if (isEmptyNode(child) && !isEmptyNode(newChild)) {\n      // add\n      ++count;\n      newChildren = arrayUpdate(canEdit, frag, newChild, children);\n    } else if (!isEmptyNode(child) && isEmptyNode(newChild)) {\n      // remove\n      --count;\n      if (count <= MIN_ARRAY_NODE) return pack(edit, count, frag, children);\n      newChildren = arrayUpdate(canEdit, frag, empty, children);\n    } else {\n      // modify\n      newChildren = arrayUpdate(canEdit, frag, newChild, children);\n    }\n\n    if (canEdit) {\n      this.size = count;\n      this.children = newChildren;\n      return this;\n    }\n\n    return ArrayNode(edit, count, newChildren);\n  };\n\n  empty._modify = function (edit, keyEq, shift, f, h, k, size) {\n    var v = f();\n    if (v === nothing) return empty;\n    ++size.value;\n    return Leaf(edit, h, k, v);\n  };\n  /*\n   ******************************************************************************/\n\n\n  function Map(editable, edit, config, root, size) {\n    this._editable = editable;\n    this._edit = edit;\n    this._config = config;\n    this._root = root;\n    this._size = size;\n  }\n\n  Map.prototype.setTree = function (newRoot, newSize) {\n    if (this._editable) {\n      this._root = newRoot;\n      this._size = newSize;\n      return this;\n    }\n\n    return newRoot === this._root ? this : new Map(this._editable, this._edit, this._config, newRoot, newSize);\n  };\n  /* Queries\n   ******************************************************************************/\n\n  /**\n      Lookup the value for `key` in `map` using a custom `hash`.\n  \n      Returns the value or `alt` if none.\n  */\n\n\n  var tryGetHash = hamt.tryGetHash = function (alt, hash, key, map) {\n    var node = map._root;\n    var shift = 0;\n    var keyEq = map._config.keyEq;\n\n    while (true) {\n      switch (node.type) {\n        case LEAF:\n          {\n            return keyEq(key, node.key) ? node.value : alt;\n          }\n\n        case COLLISION:\n          {\n            if (hash === node.hash) {\n              var children = node.children;\n\n              for (var i = 0, len = children.length; i < len; ++i) {\n                var child = children[i];\n                if (keyEq(key, child.key)) return child.value;\n              }\n            }\n\n            return alt;\n          }\n\n        case INDEX:\n          {\n            var frag = hashFragment(shift, hash);\n            var bit = toBitmap(frag);\n\n            if (node.mask & bit) {\n              node = node.children[fromBitmap(node.mask, bit)];\n              shift += SIZE;\n              break;\n            }\n\n            return alt;\n          }\n\n        case ARRAY:\n          {\n            node = node.children[hashFragment(shift, hash)];\n\n            if (node) {\n              shift += SIZE;\n              break;\n            }\n\n            return alt;\n          }\n\n        default:\n          return alt;\n      }\n    }\n  };\n\n  Map.prototype.tryGetHash = function (alt, hash, key) {\n    return tryGetHash(alt, hash, key, this);\n  };\n  /**\n      Lookup the value for `key` in `map` using internal hash function.\n  \n      @see `tryGetHash`\n  */\n\n\n  var tryGet = hamt.tryGet = function (alt, key, map) {\n    return tryGetHash(alt, map._config.hash(key), key, map);\n  };\n\n  Map.prototype.tryGet = function (alt, key) {\n    return tryGet(alt, key, this);\n  };\n  /**\n      Lookup the value for `key` in `map` using a custom `hash`.\n  \n      Returns the value or `undefined` if none.\n  */\n\n\n  var getHash = hamt.getHash = function (hash, key, map) {\n    return tryGetHash(undefined, hash, key, map);\n  };\n\n  Map.prototype.getHash = function (hash, key) {\n    return getHash(hash, key, this);\n  };\n  /**\n      Lookup the value for `key` in `map` using internal hash function.\n  \n      @see `get`\n  */\n\n\n  var get = hamt.get = function (key, map) {\n    return tryGetHash(undefined, map._config.hash(key), key, map);\n  };\n\n  Map.prototype.get = function (key, alt) {\n    return tryGet(alt, key, this);\n  };\n  /**\n      Does an entry exist for `key` in `map`? Uses custom `hash`.\n  */\n\n\n  var hasHash = hamt.has = function (hash, key, map) {\n    return tryGetHash(nothing, hash, key, map) !== nothing;\n  };\n\n  Map.prototype.hasHash = function (hash, key) {\n    return hasHash(hash, key, this);\n  };\n  /**\n      Does an entry exist for `key` in `map`? Uses internal hash function.\n  */\n\n\n  var has = hamt.has = function (key, map) {\n    return hasHash(map._config.hash(key), key, map);\n  };\n\n  Map.prototype.has = function (key) {\n    return has(key, this);\n  };\n\n  var defKeyCompare = function defKeyCompare(x, y) {\n    return x === y;\n  };\n  /**\n      Create an empty map.\n  \n      @param config Configuration.\n  */\n\n\n  hamt.make = function (config) {\n    return new Map(0, 0, {\n      keyEq: config && config.keyEq || defKeyCompare,\n      hash: config && config.hash || hash\n    }, empty, 0);\n  };\n  /**\n      Empty map.\n  */\n\n\n  hamt.empty = hamt.make();\n  /**\n      Does `map` contain any elements?\n  */\n\n  var isEmpty = hamt.isEmpty = function (map) {\n    return map && !!isEmptyNode(map._root);\n  };\n\n  Map.prototype.isEmpty = function () {\n    return isEmpty(this);\n  };\n  /* Updates\n   ******************************************************************************/\n\n  /**\n      Alter the value stored for `key` in `map` using function `f` using\n      custom hash.\n  \n      `f` is invoked with the current value for `k` if it exists,\n      or no arguments if no such value exists. `modify` will always either\n      update or insert a value into the map.\n  \n      Returns a map with the modified value. Does not alter `map`.\n  */\n\n\n  var modifyHash = hamt.modifyHash = function (f, hash, key, map) {\n    var size = {\n      value: map._size\n    };\n\n    var newRoot = map._root._modify(map._editable ? map._edit : NaN, map._config.keyEq, 0, f, hash, key, size);\n\n    return map.setTree(newRoot, size.value);\n  };\n\n  Map.prototype.modifyHash = function (hash, key, f) {\n    return modifyHash(f, hash, key, this);\n  };\n  /**\n      Alter the value stored for `key` in `map` using function `f` using\n      internal hash function.\n  \n      @see `modifyHash`\n  */\n\n\n  var modify = hamt.modify = function (f, key, map) {\n    return modifyHash(f, map._config.hash(key), key, map);\n  };\n\n  Map.prototype.modify = function (key, f) {\n    return modify(f, key, this);\n  };\n  /**\n      Store `value` for `key` in `map` using custom `hash`.\n  \n      Returns a map with the modified value. Does not alter `map`.\n  */\n\n\n  var setHash = hamt.setHash = function (hash, key, value, map) {\n    return modifyHash(constant(value), hash, key, map);\n  };\n\n  Map.prototype.setHash = function (hash, key, value) {\n    return setHash(hash, key, value, this);\n  };\n  /**\n      Store `value` for `key` in `map` using internal hash function.\n  \n      @see `setHash`\n  */\n\n\n  var set = hamt.set = function (key, value, map) {\n    return setHash(map._config.hash(key), key, value, map);\n  };\n\n  Map.prototype.set = function (key, value) {\n    return set(key, value, this);\n  };\n  /**\n      Remove the entry for `key` in `map`.\n  \n      Returns a map with the value removed. Does not alter `map`.\n  */\n\n\n  var del = constant(nothing);\n\n  var removeHash = hamt.removeHash = function (hash, key, map) {\n    return modifyHash(del, hash, key, map);\n  };\n\n  Map.prototype.removeHash = Map.prototype.deleteHash = function (hash, key) {\n    return removeHash(hash, key, this);\n  };\n  /**\n      Remove the entry for `key` in `map` using internal hash function.\n  \n      @see `removeHash`\n  */\n\n\n  var remove = hamt.remove = function (key, map) {\n    return removeHash(map._config.hash(key), key, map);\n  };\n\n  Map.prototype.remove = Map.prototype.delete = function (key) {\n    return remove(key, this);\n  };\n  /* Mutation\n   ******************************************************************************/\n\n  /**\n      Mark `map` as mutable.\n   */\n\n\n  var beginMutation = hamt.beginMutation = function (map) {\n    return new Map(map._editable + 1, map._edit + 1, map._config, map._root, map._size);\n  };\n\n  Map.prototype.beginMutation = function () {\n    return beginMutation(this);\n  };\n  /**\n      Mark `map` as immutable.\n   */\n\n\n  var endMutation = hamt.endMutation = function (map) {\n    map._editable = map._editable && map._editable - 1;\n    return map;\n  };\n\n  Map.prototype.endMutation = function () {\n    return endMutation(this);\n  };\n  /**\n      Mutate `map` within the context of `f`.\n      @param f\n      @param map HAMT\n  */\n\n\n  var mutate = hamt.mutate = function (f, map) {\n    var transient = beginMutation(map);\n    f(transient);\n    return endMutation(transient);\n  };\n\n  Map.prototype.mutate = function (f) {\n    return mutate(f, this);\n  };\n  /* Traversal\n   ******************************************************************************/\n\n  /**\n      Apply a continuation.\n  */\n\n\n  var appk = function appk(k) {\n    return k && lazyVisitChildren(k[0], k[1], k[2], k[3], k[4]);\n  };\n  /**\n      Recursively visit all values stored in an array of nodes lazily.\n  */\n\n\n  var lazyVisitChildren = function lazyVisitChildren(len, children, i, f, k) {\n    while (i < len) {\n      var child = children[i++];\n      if (child && !isEmptyNode(child)) return lazyVisit(child, f, [len, children, i, f, k]);\n    }\n\n    return appk(k);\n  };\n  /**\n      Recursively visit all values stored in `node` lazily.\n  */\n\n\n  var lazyVisit = function lazyVisit(node, f, k) {\n    switch (node.type) {\n      case LEAF:\n        return {\n          value: f(node),\n          rest: k\n        };\n\n      case COLLISION:\n      case ARRAY:\n      case INDEX:\n        var children = node.children;\n        return lazyVisitChildren(children.length, children, 0, f, k);\n\n      default:\n        return appk(k);\n    }\n  };\n\n  var DONE = {\n    done: true\n  };\n  /**\n      Javascript iterator over a map.\n  */\n\n  function MapIterator(v) {\n    this.v = v;\n  }\n\n  MapIterator.prototype.next = function () {\n    if (!this.v) return DONE;\n    var v0 = this.v;\n    this.v = appk(v0.rest);\n    return v0;\n  };\n\n  MapIterator.prototype[Symbol.iterator] = function () {\n    return this;\n  };\n  /**\n      Lazily visit each value in map with function `f`.\n  */\n\n\n  var visit = function visit(map, f) {\n    return new MapIterator(lazyVisit(map._root, f));\n  };\n  /**\n      Get a Javascsript iterator of `map`.\n  \n      Iterates over `[key, value]` arrays.\n  */\n\n\n  var buildPairs = function buildPairs(x) {\n    return [x.key, x.value];\n  };\n\n  var entries = hamt.entries = function (map) {\n    return visit(map, buildPairs);\n  };\n\n  Map.prototype.entries = Map.prototype[Symbol.iterator] = function () {\n    return entries(this);\n  };\n  /**\n      Get array of all keys in `map`.\n  \n      Order is not guaranteed.\n  */\n\n\n  var buildKeys = function buildKeys(x) {\n    return x.key;\n  };\n\n  var keys = hamt.keys = function (map) {\n    return visit(map, buildKeys);\n  };\n\n  Map.prototype.keys = function () {\n    return keys(this);\n  };\n  /**\n      Get array of all values in `map`.\n  \n      Order is not guaranteed, duplicates are preserved.\n  */\n\n\n  var buildValues = function buildValues(x) {\n    return x.value;\n  };\n\n  var values = hamt.values = Map.prototype.values = function (map) {\n    return visit(map, buildValues);\n  };\n\n  Map.prototype.values = function () {\n    return values(this);\n  };\n  /* Fold\n   ******************************************************************************/\n\n  /**\n      Visit every entry in the map, aggregating data.\n  \n      Order of nodes is not guaranteed.\n  \n      @param f Function mapping accumulated value, value, and key to new value.\n      @param z Starting value.\n      @param m HAMT\n  */\n\n\n  var fold = hamt.fold = function (f, z, m) {\n    var root = m._root;\n    if (root.type === LEAF) return f(z, root.value, root.key);\n    var toVisit = [root.children];\n    var children = void 0;\n\n    while (children = toVisit.pop()) {\n      for (var i = 0, len = children.length; i < len;) {\n        var child = children[i++];\n\n        if (child && child.type) {\n          if (child.type === LEAF) z = f(z, child.value, child.key);else toVisit.push(child.children);\n        }\n      }\n    }\n\n    return z;\n  };\n\n  Map.prototype.fold = function (f, z) {\n    return fold(f, z, this);\n  };\n  /**\n      Visit every entry in the map, aggregating data.\n  \n      Order of nodes is not guaranteed.\n  \n      @param f Function invoked with value and key\n      @param map HAMT\n  */\n\n\n  var forEach = hamt.forEach = function (f, map) {\n    return fold(function (_, value, key) {\n      return f(value, key, map);\n    }, null, map);\n  };\n\n  Map.prototype.forEach = function (f) {\n    return forEach(f, this);\n  };\n  /* Aggregate\n   ******************************************************************************/\n\n  /**\n      Get the number of entries in `map`.\n  */\n\n\n  var count = hamt.count = function (map) {\n    return map._size;\n  };\n\n  Map.prototype.count = function () {\n    return count(this);\n  };\n\n  Object.defineProperty(Map.prototype, 'size', {\n    get: Map.prototype.count\n  });\n  /* Export\n   ******************************************************************************/\n\n  if (module.exports) {\n    module.exports = hamt;\n  } else {\n    undefined.hamt = hamt;\n  }\n});\n\nvar BuiltInMap = /*#__PURE__*/function () {\n  function BuiltInMap(existing) {\n    _classCallCheck(this, BuiltInMap);\n\n    _defineProperty(this, \"_map\", void 0);\n\n    this._map = new Map(existing === null || existing === void 0 ? void 0 : existing.entries());\n  }\n\n  _createClass(BuiltInMap, [{\n    key: \"keys\",\n    value: function keys() {\n      return this._map.keys();\n    }\n  }, {\n    key: \"entries\",\n    value: function entries() {\n      return this._map.entries();\n    }\n  }, {\n    key: \"get\",\n    value: function get(k) {\n      return this._map.get(k);\n    }\n  }, {\n    key: \"has\",\n    value: function has(k) {\n      return this._map.has(k);\n    }\n  }, {\n    key: \"set\",\n    value: function set(k, v) {\n      this._map.set(k, v);\n\n      return this;\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(k) {\n      this._map.delete(k);\n\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return persistentMap(this);\n    }\n  }, {\n    key: \"toMap\",\n    value: function toMap() {\n      return new Map(this._map);\n    }\n  }]);\n\n  return BuiltInMap;\n}();\n\nvar HashArrayMappedTrieMap = /*#__PURE__*/function () {\n  // Because hamt.empty is not a function there is no way to introduce type\n  // parameters on it, so empty is typed as HAMTPlusMap<string, mixed>.\n  // flowlint-next-line unclear-type:off\n  function HashArrayMappedTrieMap(existing) {\n    _classCallCheck(this, HashArrayMappedTrieMap);\n\n    _defineProperty(this, \"_hamt\", hamt_1.empty.beginMutation());\n\n    if (existing instanceof HashArrayMappedTrieMap) {\n      var h = existing._hamt.endMutation();\n\n      existing._hamt = h.beginMutation();\n      this._hamt = h.beginMutation();\n    } else if (existing) {\n      var _iterator12 = _createForOfIteratorHelper(existing.entries()),\n          _step12;\n\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var _step12$value = _slicedToArray(_step12.value, 2),\n              k = _step12$value[0],\n              v = _step12$value[1];\n\n          this._hamt.set(k, v);\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n    }\n  }\n\n  _createClass(HashArrayMappedTrieMap, [{\n    key: \"keys\",\n    value: function keys() {\n      return this._hamt.keys();\n    }\n  }, {\n    key: \"entries\",\n    value: function entries() {\n      return this._hamt.entries();\n    }\n  }, {\n    key: \"get\",\n    value: function get(k) {\n      return this._hamt.get(k);\n    }\n  }, {\n    key: \"has\",\n    value: function has(k) {\n      return this._hamt.has(k);\n    }\n  }, {\n    key: \"set\",\n    value: function set(k, v) {\n      this._hamt.set(k, v);\n\n      return this;\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(k) {\n      this._hamt.delete(k);\n\n      return this;\n    }\n  }, {\n    key: \"clone\",\n    value: function clone() {\n      return persistentMap(this);\n    }\n  }, {\n    key: \"toMap\",\n    value: function toMap() {\n      return new Map(this._hamt);\n    }\n  }]);\n\n  return HashArrayMappedTrieMap;\n}();\n\nfunction persistentMap(existing) {\n  if (Recoil_gkx_1('recoil_hamt_2020')) {\n    return new HashArrayMappedTrieMap(existing);\n  } else {\n    return new BuiltInMap(existing);\n  }\n}\n\nvar Recoil_PersistentMap = {\n  persistentMap: persistentMap\n};\nvar Recoil_PersistentMap_1 = Recoil_PersistentMap.persistentMap;\nvar Recoil_PersistentMap$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  persistentMap: Recoil_PersistentMap_1\n});\nvar graph$1 = Recoil_Graph.graph;\nvar persistentMap$1 = Recoil_PersistentMap$1.persistentMap; // flowlint-next-line unclear-type:off\n\nvar nextTreeStateVersion = 0;\n\nvar getNextTreeStateVersion = function getNextTreeStateVersion() {\n  return nextTreeStateVersion++;\n};\n\nfunction makeEmptyTreeState() {\n  var version = getNextTreeStateVersion();\n  return {\n    version: version,\n    stateID: version,\n    transactionMetadata: {},\n    dirtyAtoms: new Set(),\n    atomValues: persistentMap$1(),\n    nonvalidatedAtoms: persistentMap$1()\n  };\n}\n\nfunction makeEmptyStoreState() {\n  var currentTree = makeEmptyTreeState();\n  return {\n    currentTree: currentTree,\n    nextTree: null,\n    previousTree: null,\n    commitDepth: 0,\n    knownAtoms: new Set(),\n    knownSelectors: new Set(),\n    transactionSubscriptions: new Map(),\n    nodeTransactionSubscriptions: new Map(),\n    nodeToComponentSubscriptions: new Map(),\n    queuedComponentCallbacks_DEPRECATED: [],\n    suspendedComponentResolvers: new Set(),\n    graphsByVersion: new Map().set(currentTree.version, graph$1()),\n    versionsUsedByComponent: new Map(),\n    retention: {\n      referenceCounts: new Map(),\n      nodesRetainedByZone: new Map(),\n      retainablesToCheckForRelease: new Set()\n    },\n    nodeCleanupFunctions: new Map()\n  };\n}\n\nvar Recoil_State = {\n  makeEmptyTreeState: makeEmptyTreeState,\n  makeEmptyStoreState: makeEmptyStoreState,\n  getNextTreeStateVersion: getNextTreeStateVersion\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction unionSets() {\n  var result = new Set();\n\n  for (var _len4 = arguments.length, sets = new Array(_len4), _key7 = 0; _key7 < _len4; _key7++) {\n    sets[_key7] = arguments[_key7];\n  }\n\n  for (var _i2 = 0, _sets = sets; _i2 < _sets.length; _i2++) {\n    var set = _sets[_i2];\n\n    var _iterator13 = _createForOfIteratorHelper(set),\n        _step13;\n\n    try {\n      for (_iterator13.s(); !(_step13 = _iterator13.n()).done;) {\n        var value = _step13.value;\n        result.add(value);\n      }\n    } catch (err) {\n      _iterator13.e(err);\n    } finally {\n      _iterator13.f();\n    }\n  }\n\n  return result;\n}\n\nvar Recoil_unionSets = unionSets;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\n/**\n * The someSet() method tests whether some elements in the given Set pass the\n * test implemented by the provided function.\n */\n\nfunction someSet(set, callback, context) {\n  var iterator = set.entries();\n  var current = iterator.next();\n\n  while (!current.done) {\n    var entry = current.value;\n\n    if (callback.call(context, entry[1], entry[0], set)) {\n      return true;\n    }\n\n    current = iterator.next();\n  }\n\n  return false;\n}\n\nvar Recoil_someSet = someSet;\nvar cleanUpNode$1 = Recoil_FunctionalCore.cleanUpNode;\nvar deleteNodeConfigIfPossible$1 = Recoil_Node.deleteNodeConfigIfPossible,\n    getNode$2 = Recoil_Node.getNode;\nvar RetentionZone$2 = Recoil_RetentionZone.RetentionZone;\nvar emptySet$1 = new Set();\n\nfunction releaseRetainablesNowOnCurrentTree(store, retainables) {\n  var storeState = store.getState();\n  var treeState = storeState.currentTree;\n\n  if (storeState.nextTree) {\n    Recoil_recoverableViolation('releaseNodesNowOnCurrentTree should only be called at the end of a batch');\n    return; // leak memory rather than erase something that's about to be used.\n  }\n\n  var nodes = new Set();\n\n  var _iterator14 = _createForOfIteratorHelper(retainables),\n      _step14;\n\n  try {\n    for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n      var r = _step14.value;\n\n      if (r instanceof RetentionZone$2) {\n        var _iterator16 = _createForOfIteratorHelper(nodesRetainedByZone(storeState, r)),\n            _step16;\n\n        try {\n          for (_iterator16.s(); !(_step16 = _iterator16.n()).done;) {\n            var n = _step16.value;\n            nodes.add(n);\n          }\n        } catch (err) {\n          _iterator16.e(err);\n        } finally {\n          _iterator16.f();\n        }\n      } else {\n        nodes.add(r);\n      }\n    }\n  } catch (err) {\n    _iterator14.e(err);\n  } finally {\n    _iterator14.f();\n  }\n\n  var releasableNodes = findReleasableNodes(store, nodes);\n\n  var _iterator15 = _createForOfIteratorHelper(releasableNodes),\n      _step15;\n\n  try {\n    for (_iterator15.s(); !(_step15 = _iterator15.n()).done;) {\n      var node = _step15.value;\n      releaseNode(store, treeState, node);\n    }\n  } catch (err) {\n    _iterator15.e(err);\n  } finally {\n    _iterator15.f();\n  }\n}\n\nfunction findReleasableNodes(store, searchFromNodes) {\n  var storeState = store.getState();\n  var treeState = storeState.currentTree;\n  var graph = store.getGraph(treeState.version);\n  var releasableNodes = new Set(); // mutated to collect answer\n\n  var nonReleasableNodes = new Set();\n  findReleasableNodesInner(searchFromNodes);\n  return releasableNodes;\n\n  function findReleasableNodesInner(searchFromNodes) {\n    var releasableNodesFoundThisIteration = new Set();\n    var downstreams = getDownstreamNodesInTopologicalOrder(store, treeState, searchFromNodes, releasableNodes, // don't descend into these\n    nonReleasableNodes // don't descend into these\n    ); // Find which of the downstream nodes are releasable and which are not:\n\n    var _iterator17 = _createForOfIteratorHelper(downstreams),\n        _step17;\n\n    try {\n      for (_iterator17.s(); !(_step17 = _iterator17.n()).done;) {\n        var node = _step17.value;\n\n        var _storeState$retention; // Not releasable if configured to be retained forever:\n\n\n        if (getNode$2(node).retainedBy === 'recoilRoot') {\n          nonReleasableNodes.add(node);\n          continue;\n        } // Not releasable if retained directly by a component:\n\n\n        if (((_storeState$retention = storeState.retention.referenceCounts.get(node)) !== null && _storeState$retention !== void 0 ? _storeState$retention : 0) > 0) {\n          nonReleasableNodes.add(node);\n          continue;\n        } // Not releasable if retained by a zone:\n\n\n        if (zonesThatCouldRetainNode(node).some(function (z) {\n          return storeState.retention.referenceCounts.get(z);\n        })) {\n          nonReleasableNodes.add(node);\n          continue;\n        } // Not releasable if it has a non-releasable child (which will already be in\n        // nonReleasableNodes because we are going in topological order):\n\n\n        var nodeChildren = graph.nodeToNodeSubscriptions.get(node);\n\n        if (nodeChildren && Recoil_someSet(nodeChildren, function (child) {\n          return nonReleasableNodes.has(child);\n        })) {\n          nonReleasableNodes.add(node);\n          continue;\n        }\n\n        releasableNodes.add(node);\n        releasableNodesFoundThisIteration.add(node);\n      } // If we found any releasable nodes, we need to walk UP from those nodes to\n      // find whether their parents can now be released as well:\n\n    } catch (err) {\n      _iterator17.e(err);\n    } finally {\n      _iterator17.f();\n    }\n\n    var parents = new Set();\n\n    var _iterator18 = _createForOfIteratorHelper(releasableNodesFoundThisIteration),\n        _step18;\n\n    try {\n      for (_iterator18.s(); !(_step18 = _iterator18.n()).done;) {\n        var _node = _step18.value;\n\n        var _iterator19 = _createForOfIteratorHelper((_graph$nodeDeps$get = graph.nodeDeps.get(_node)) !== null && _graph$nodeDeps$get !== void 0 ? _graph$nodeDeps$get : emptySet$1),\n            _step19;\n\n        try {\n          for (_iterator19.s(); !(_step19 = _iterator19.n()).done;) {\n            var parent = _step19.value;\n\n            var _graph$nodeDeps$get;\n\n            if (!releasableNodes.has(parent)) {\n              parents.add(parent);\n            }\n          }\n        } catch (err) {\n          _iterator19.e(err);\n        } finally {\n          _iterator19.f();\n        }\n      }\n    } catch (err) {\n      _iterator18.e(err);\n    } finally {\n      _iterator18.f();\n    }\n\n    if (parents.size) {\n      findReleasableNodesInner(parents);\n    }\n  }\n} // Children before parents\n\n\nfunction getDownstreamNodesInTopologicalOrder(store, treeState, nodes, // Mutable set is destroyed in place\ndoNotDescendInto1, doNotDescendInto2) {\n  var graph = store.getGraph(treeState.version);\n  var answer = [];\n  var visited = new Set();\n\n  while (nodes.size > 0) {\n    visit(Recoil_nullthrows(nodes.values().next().value));\n  }\n\n  return answer;\n\n  function visit(node) {\n    if (doNotDescendInto1.has(node) || doNotDescendInto2.has(node)) {\n      nodes.delete(node);\n      return;\n    }\n\n    if (visited.has(node)) {\n      return;\n    }\n\n    var children = graph.nodeToNodeSubscriptions.get(node);\n\n    if (children) {\n      var _iterator20 = _createForOfIteratorHelper(children),\n          _step20;\n\n      try {\n        for (_iterator20.s(); !(_step20 = _iterator20.n()).done;) {\n          var child = _step20.value;\n          visit(child);\n        }\n      } catch (err) {\n        _iterator20.e(err);\n      } finally {\n        _iterator20.f();\n      }\n    }\n\n    visited.add(node);\n    nodes.delete(node);\n    answer.push(node);\n  }\n}\n\nfunction releaseNode(store, treeState, node) {\n  if (!Recoil_gkx_1('recoil_memory_managament_2020')) {\n    return;\n  } // Atom effects, in-closure caches, etc.:\n\n\n  cleanUpNode$1(store, node); // Delete from store state:\n\n  var storeState = store.getState();\n  storeState.knownAtoms.delete(node);\n  storeState.knownSelectors.delete(node);\n  storeState.nodeTransactionSubscriptions.delete(node);\n  storeState.retention.referenceCounts.delete(node);\n  var zones = zonesThatCouldRetainNode(node);\n\n  var _iterator21 = _createForOfIteratorHelper(zones),\n      _step21;\n\n  try {\n    for (_iterator21.s(); !(_step21 = _iterator21.n()).done;) {\n      var zone = _step21.value;\n\n      var _storeState$retention2;\n\n      (_storeState$retention2 = storeState.retention.nodesRetainedByZone.get(zone)) === null || _storeState$retention2 === void 0 ? void 0 : _storeState$retention2.delete(node);\n    } // Note that we DO NOT delete from nodeToComponentSubscriptions because this\n    // already happens when the last component that was retaining the node unmounts,\n    // and this could happen either before or after that.\n    // Delete from TreeState and dep graph:\n\n  } catch (err) {\n    _iterator21.e(err);\n  } finally {\n    _iterator21.f();\n  }\n\n  treeState.atomValues.delete(node);\n  treeState.dirtyAtoms.delete(node);\n  treeState.nonvalidatedAtoms.delete(node);\n  var graph = storeState.graphsByVersion.get(treeState.version);\n\n  if (graph) {\n    var deps = graph.nodeDeps.get(node);\n\n    if (deps !== undefined) {\n      graph.nodeDeps.delete(node);\n\n      var _iterator22 = _createForOfIteratorHelper(deps),\n          _step22;\n\n      try {\n        for (_iterator22.s(); !(_step22 = _iterator22.n()).done;) {\n          var dep = _step22.value;\n\n          var _graph$nodeToNodeSubs;\n\n          (_graph$nodeToNodeSubs = graph.nodeToNodeSubscriptions.get(dep)) === null || _graph$nodeToNodeSubs === void 0 ? void 0 : _graph$nodeToNodeSubs.delete(node);\n        }\n      } catch (err) {\n        _iterator22.e(err);\n      } finally {\n        _iterator22.f();\n      }\n    } // No need to delete sub's deps as there should be no subs at this point.\n    // But an invariant would require deleting nodes in topological order.\n\n\n    graph.nodeToNodeSubscriptions.delete(node);\n  } // Node config (for family members only as their configs can be recreated, and\n  // only if they are not retained within any other Stores):\n\n\n  deleteNodeConfigIfPossible$1(node);\n}\n\nfunction nodesRetainedByZone(storeState, zone) {\n  var _storeState$retention3;\n\n  return (_storeState$retention3 = storeState.retention.nodesRetainedByZone.get(zone)) !== null && _storeState$retention3 !== void 0 ? _storeState$retention3 : emptySet$1;\n}\n\nfunction zonesThatCouldRetainNode(node) {\n  var retainedBy = getNode$2(node).retainedBy;\n\n  if (retainedBy === undefined || retainedBy === 'components' || retainedBy === 'recoilRoot') {\n    return [];\n  } else if (retainedBy instanceof RetentionZone$2) {\n    return [retainedBy];\n  } else {\n    return retainedBy; // it's an array of zones\n  }\n}\n\nfunction scheduleOrPerformPossibleReleaseOfRetainable(store, retainable) {\n  var state = store.getState();\n\n  if (state.nextTree) {\n    state.retention.retainablesToCheckForRelease.add(retainable);\n  } else {\n    releaseRetainablesNowOnCurrentTree(store, new Set([retainable]));\n  }\n}\n\nfunction updateRetainCount(store, retainable, delta) {\n  var _map$get;\n\n  if (!Recoil_gkx_1('recoil_memory_managament_2020')) {\n    return;\n  }\n\n  var map = store.getState().retention.referenceCounts;\n  var newCount = ((_map$get = map.get(retainable)) !== null && _map$get !== void 0 ? _map$get : 0) + delta;\n\n  if (newCount === 0) {\n    updateRetainCountToZero(store, retainable);\n  } else {\n    map.set(retainable, newCount);\n  }\n}\n\nfunction updateRetainCountToZero(store, retainable) {\n  if (!Recoil_gkx_1('recoil_memory_managament_2020')) {\n    return;\n  }\n\n  var map = store.getState().retention.referenceCounts;\n  map.delete(retainable);\n  scheduleOrPerformPossibleReleaseOfRetainable(store, retainable);\n}\n\nfunction releaseScheduledRetainablesNow(store) {\n  if (!Recoil_gkx_1('recoil_memory_managament_2020')) {\n    return;\n  }\n\n  var state = store.getState();\n  releaseRetainablesNowOnCurrentTree(store, state.retention.retainablesToCheckForRelease);\n  state.retention.retainablesToCheckForRelease.clear();\n}\n\nfunction retainedByOptionWithDefault(r) {\n  // The default will change from 'recoilRoot' to 'components' in the future.\n  return r === undefined ? 'recoilRoot' : r;\n}\n\nvar Recoil_Retention = {\n  updateRetainCount: updateRetainCount,\n  updateRetainCountToZero: updateRetainCountToZero,\n  releaseScheduledRetainablesNow: releaseScheduledRetainablesNow,\n  retainedByOptionWithDefault: retainedByOptionWithDefault\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\n/**\n * Combines multiple Iterables into a single Iterable.\n * Traverses the input Iterables in the order provided and maintains the order\n * of their elements.\n *\n * Example:\n * ```\n * const r = Array.from(concatIterables(['a', 'b'], ['c'], ['d', 'e', 'f']));\n * r == ['a', 'b', 'c', 'd', 'e', 'f'];\n * ```\n */\n\nfunction concatIterables(iters) {\n  var _iterator23, _step23, iter, _iterator24, _step24, val;\n\n  return _regeneratorRuntime.wrap(function concatIterables$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _iterator23 = _createForOfIteratorHelper(iters);\n          _context3.prev = 1;\n\n          _iterator23.s();\n\n        case 3:\n          if ((_step23 = _iterator23.n()).done) {\n            _context3.next = 24;\n            break;\n          }\n\n          iter = _step23.value;\n          _iterator24 = _createForOfIteratorHelper(iter);\n          _context3.prev = 6;\n\n          _iterator24.s();\n\n        case 8:\n          if ((_step24 = _iterator24.n()).done) {\n            _context3.next = 14;\n            break;\n          }\n\n          val = _step24.value;\n          _context3.next = 12;\n          return val;\n\n        case 12:\n          _context3.next = 8;\n          break;\n\n        case 14:\n          _context3.next = 19;\n          break;\n\n        case 16:\n          _context3.prev = 16;\n          _context3.t0 = _context3[\"catch\"](6);\n\n          _iterator24.e(_context3.t0);\n\n        case 19:\n          _context3.prev = 19;\n\n          _iterator24.f();\n\n          return _context3.finish(19);\n\n        case 22:\n          _context3.next = 3;\n          break;\n\n        case 24:\n          _context3.next = 29;\n          break;\n\n        case 26:\n          _context3.prev = 26;\n          _context3.t1 = _context3[\"catch\"](1);\n\n          _iterator23.e(_context3.t1);\n\n        case 29:\n          _context3.prev = 29;\n\n          _iterator23.f();\n\n          return _context3.finish(29);\n\n        case 32:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked2, null, [[1, 26, 29, 32], [6, 16, 19, 22]]);\n}\n\nvar Recoil_concatIterables = concatIterables;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nvar isSSR = typeof window === 'undefined';\nvar isReactNative = typeof navigator !== 'undefined' && navigator.product === 'ReactNative'; // eslint-disable-line fb-www/typeof-undefined\n\nvar Recoil_Environment = {\n  isSSR: isSSR,\n  isReactNative: isReactNative\n};\nvar isSSR$1 = Recoil_Environment.isSSR;\nvar batchUpdates$1 = Recoil_Batching.batchUpdates;\nvar initializeNodeIfNewToStore$1 = Recoil_FunctionalCore.initializeNodeIfNewToStore,\n    peekNodeInfo$1 = Recoil_FunctionalCore.peekNodeInfo;\nvar graph$2 = Recoil_Graph.graph;\nvar DEFAULT_VALUE$1 = Recoil_Node.DEFAULT_VALUE,\n    recoilValues$1 = Recoil_Node.recoilValues,\n    recoilValuesForKeys$2 = Recoil_Node.recoilValuesForKeys;\nvar AbstractRecoilValue$2 = Recoil_RecoilValueInterface.AbstractRecoilValue,\n    getRecoilValueAsLoadable$1 = Recoil_RecoilValueInterface.getRecoilValueAsLoadable,\n    setRecoilValue$1 = Recoil_RecoilValueInterface.setRecoilValue,\n    setUnvalidatedRecoilValue$1 = Recoil_RecoilValueInterface.setUnvalidatedRecoilValue;\nvar updateRetainCount$1 = Recoil_Retention.updateRetainCount,\n    updateRetainCountToZero$1 = Recoil_Retention.updateRetainCountToZero;\nvar getNextTreeStateVersion$1 = Recoil_State.getNextTreeStateVersion,\n    makeEmptyStoreState$1 = Recoil_State.makeEmptyStoreState; // Opaque at this surface because it's part of the public API from here.\n\nvar retainWarning = \"\\nRecoil Snapshots only last for the duration of the callback they are provided to. To keep a Snapshot longer, do this:\\n\\n  const release = snapshot.retain();\\n  try {\\n    await useTheSnapshotAsynchronously(snapshot);\\n  } finally {\\n    release();\\n  }\\n\\nThis is currently a DEV-only warning but will become a thrown exception in the next release of Recoil.\\n\"; // A \"Snapshot\" is \"read-only\" and captures a specific set of values of atoms.\n// However, the data-flow-graph and selector values may evolve as selector\n// evaluation functions are executed and async selectors resolve.\n\nvar Snapshot = /*#__PURE__*/function () {\n  function Snapshot(storeState) {\n    var _this2 = this;\n\n    _classCallCheck(this, Snapshot);\n\n    _defineProperty(this, \"_store\", void 0);\n\n    _defineProperty(this, \"_refCount\", 0);\n\n    _defineProperty(this, \"getLoadable\", function (recoilValue) {\n      _this2.checkRefCount_INTERNAL();\n\n      return getRecoilValueAsLoadable$1(_this2._store, recoilValue);\n    });\n\n    _defineProperty(this, \"getPromise\", function (recoilValue) {\n      _this2.checkRefCount_INTERNAL();\n\n      return _this2.getLoadable(recoilValue).toPromise();\n    });\n\n    _defineProperty(this, \"getNodes_UNSTABLE\", function (opt) {\n      _this2.checkRefCount_INTERNAL(); // TODO Deal with modified selectors\n\n\n      if ((opt === null || opt === void 0 ? void 0 : opt.isModified) === true) {\n        if ((opt === null || opt === void 0 ? void 0 : opt.isInitialized) === false) {\n          return [];\n        }\n\n        var state = _this2._store.getState().currentTree;\n\n        return recoilValuesForKeys$2(state.dirtyAtoms);\n      }\n\n      var knownAtoms = _this2._store.getState().knownAtoms;\n\n      var knownSelectors = _this2._store.getState().knownSelectors;\n\n      return (opt === null || opt === void 0 ? void 0 : opt.isInitialized) == null ? recoilValues$1.values() : opt.isInitialized === true ? recoilValuesForKeys$2(Recoil_concatIterables([_this2._store.getState().knownAtoms, _this2._store.getState().knownSelectors])) : Recoil_filterIterable(recoilValues$1.values(), function (_ref12) {\n        var key = _ref12.key;\n        return !knownAtoms.has(key) && !knownSelectors.has(key);\n      });\n    });\n\n    _defineProperty(this, \"getInfo_UNSTABLE\", function (_ref13) {\n      var key = _ref13.key;\n\n      _this2.checkRefCount_INTERNAL();\n\n      return peekNodeInfo$1(_this2._store, _this2._store.getState().currentTree, key);\n    });\n\n    _defineProperty(this, \"map\", function (mapper) {\n      _this2.checkRefCount_INTERNAL();\n\n      var mutableSnapshot = new MutableSnapshot(_this2);\n      mapper(mutableSnapshot); // if removing batchUpdates from `set` add it here\n\n      return cloneSnapshot(mutableSnapshot.getStore_INTERNAL());\n    });\n\n    _defineProperty(this, \"asyncMap\", /*#__PURE__*/function () {\n      var _ref14 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(mapper) {\n        var mutableSnapshot;\n        return _regeneratorRuntime.wrap(function _callee2$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _this2.checkRefCount_INTERNAL();\n\n                mutableSnapshot = new MutableSnapshot(_this2);\n                _context4.next = 4;\n                return mapper(mutableSnapshot);\n\n              case 4:\n                return _context4.abrupt(\"return\", cloneSnapshot(mutableSnapshot.getStore_INTERNAL()));\n\n              case 5:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x) {\n        return _ref14.apply(this, arguments);\n      };\n    }());\n\n    this._store = {\n      getState: function getState() {\n        return storeState;\n      },\n      replaceState: function replaceState(replacer) {\n        storeState.currentTree = replacer(storeState.currentTree); // no batching so nextTree is never active\n      },\n      getGraph: function getGraph(version) {\n        var graphs = storeState.graphsByVersion;\n\n        if (graphs.has(version)) {\n          return Recoil_nullthrows(graphs.get(version));\n        }\n\n        var newGraph = graph$2();\n        graphs.set(version, newGraph);\n        return newGraph;\n      },\n      subscribeToTransactions: function subscribeToTransactions() {\n        return {\n          release: function release() {}\n        };\n      },\n      addTransactionMetadata: function addTransactionMetadata() {\n        throw new Error('Cannot subscribe to Snapshots');\n      }\n    }; // Initialize any nodes that are live in the parent store (primarily so that this\n    // snapshot gets counted towards the node's live stores count).\n\n    var _iterator25 = _createForOfIteratorHelper(this._store.getState().nodeCleanupFunctions.keys()),\n        _step25;\n\n    try {\n      for (_iterator25.s(); !(_step25 = _iterator25.n()).done;) {\n        var nodeKey = _step25.value;\n        initializeNodeIfNewToStore$1(this._store, storeState.currentTree, nodeKey, 'get');\n        updateRetainCount$1(this._store, nodeKey, 1);\n      }\n    } catch (err) {\n      _iterator25.e(err);\n    } finally {\n      _iterator25.f();\n    }\n\n    this.retain();\n    this.autorelease_INTERNAL();\n  }\n\n  _createClass(Snapshot, [{\n    key: \"retain\",\n    value: function retain() {\n      var _this3 = this;\n\n      if (!Recoil_gkx_1('recoil_memory_managament_2020')) {\n        return function () {\n          return undefined;\n        };\n      }\n\n      this._refCount++;\n      var released = false;\n      return function () {\n        if (!released) {\n          released = true;\n\n          _this3.release_INTERNAL();\n        }\n      };\n    }\n  }, {\n    key: \"autorelease_INTERNAL\",\n    value: function autorelease_INTERNAL() {\n      var _this4 = this;\n\n      if (!Recoil_gkx_1('recoil_memory_managament_2020')) {\n        return;\n      }\n\n      if (!isSSR$1) {\n        window.setTimeout(function () {\n          return _this4.release_INTERNAL();\n        }, 0);\n      }\n    }\n  }, {\n    key: \"release_INTERNAL\",\n    value: function release_INTERNAL() {\n      if (!Recoil_gkx_1('recoil_memory_managament_2020')) {\n        return;\n      }\n\n      this._refCount--;\n      if (this._refCount === 0) ;\n    }\n  }, {\n    key: \"checkRefCount_INTERNAL\",\n    value: function checkRefCount_INTERNAL() {\n      if (Recoil_gkx_1('recoil_memory_managament_2020') && this._refCount <= 0) {\n        if (process.env.NODE_ENV !== \"production\") {\n          Recoil_recoverableViolation(retainWarning);\n        } // What we will ship later:\n        // throw new Error(retainWarning);\n\n      }\n    }\n  }, {\n    key: \"getStore_INTERNAL\",\n    value: function getStore_INTERNAL() {\n      this.checkRefCount_INTERNAL();\n      return this._store;\n    }\n  }, {\n    key: \"getID\",\n    value: function getID() {\n      this.checkRefCount_INTERNAL();\n      return this.getID_INTERNAL();\n    }\n  }, {\n    key: \"getID_INTERNAL\",\n    value: function getID_INTERNAL() {\n      this.checkRefCount_INTERNAL();\n      return this._store.getState().currentTree.stateID;\n    } // We want to allow the methods to be destructured and used as accessors\n    // eslint-disable-next-line fb-www/extra-arrow-initializer\n\n  }]);\n\n  return Snapshot;\n}();\n\nfunction cloneStoreState(store, treeState) {\n  var bumpVersion = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var storeState = store.getState();\n  var version = bumpVersion ? getNextTreeStateVersion$1() : treeState.version;\n  return {\n    currentTree: bumpVersion ? {\n      // TODO snapshots shouldn't really have versions because a new version number\n      // is always assigned when the snapshot is gone to.\n      version: version,\n      stateID: version,\n      transactionMetadata: _objectSpread({}, treeState.transactionMetadata),\n      dirtyAtoms: new Set(treeState.dirtyAtoms),\n      atomValues: treeState.atomValues.clone(),\n      nonvalidatedAtoms: treeState.nonvalidatedAtoms.clone()\n    } : treeState,\n    commitDepth: 0,\n    nextTree: null,\n    previousTree: null,\n    knownAtoms: new Set(storeState.knownAtoms),\n    // FIXME here's a copy\n    knownSelectors: new Set(storeState.knownSelectors),\n    // FIXME here's a copy\n    transactionSubscriptions: new Map(),\n    nodeTransactionSubscriptions: new Map(),\n    nodeToComponentSubscriptions: new Map(),\n    queuedComponentCallbacks_DEPRECATED: [],\n    suspendedComponentResolvers: new Set(),\n    graphsByVersion: new Map().set(version, store.getGraph(treeState.version)),\n    versionsUsedByComponent: new Map(),\n    retention: {\n      referenceCounts: new Map(),\n      nodesRetainedByZone: new Map(),\n      retainablesToCheckForRelease: new Set()\n    },\n    nodeCleanupFunctions: new Map()\n  };\n} // Factory to build a fresh snapshot\n\n\nfunction freshSnapshot(initializeState) {\n  var snapshot = new Snapshot(makeEmptyStoreState$1());\n  return initializeState != null ? snapshot.map(initializeState) : snapshot;\n} // Factory to clone a snapahot state\n\n\nfunction cloneSnapshot(store) {\n  var version = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'current';\n  var storeState = store.getState();\n  var treeState = version === 'current' ? storeState.currentTree : Recoil_nullthrows(storeState.previousTree);\n  return new Snapshot(cloneStoreState(store, treeState));\n}\n\nvar MutableSnapshot = /*#__PURE__*/function (_Snapshot) {\n  _inherits(MutableSnapshot, _Snapshot);\n\n  var _super6 = _createSuper(MutableSnapshot);\n\n  function MutableSnapshot(snapshot) {\n    var _this5;\n\n    _classCallCheck(this, MutableSnapshot);\n\n    _this5 = _super6.call(this, cloneStoreState(snapshot.getStore_INTERNAL(), snapshot.getStore_INTERNAL().getState().currentTree, true));\n\n    _defineProperty(_assertThisInitialized(_this5), \"set\", function (recoilState, newValueOrUpdater) {\n      _this5.checkRefCount_INTERNAL();\n\n      var store = _this5.getStore_INTERNAL(); // This batchUpdates ensures this `set` is applied immediately and you can\n      // read the written value after calling `set`. I would like to remove this\n      // behavior and only batch in `Snapshot.map`, but this would be a breaking\n      // change potentially.\n\n\n      batchUpdates$1(function () {\n        updateRetainCount$1(store, recoilState.key, 1);\n        setRecoilValue$1(_this5.getStore_INTERNAL(), recoilState, newValueOrUpdater);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this5), \"reset\", function (recoilState) {\n      _this5.checkRefCount_INTERNAL();\n\n      var store = _this5.getStore_INTERNAL(); // See note at `set` about batched updates.\n\n\n      batchUpdates$1(function () {\n        updateRetainCount$1(store, recoilState.key, 1);\n        setRecoilValue$1(_this5.getStore_INTERNAL(), recoilState, DEFAULT_VALUE$1);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this5), \"setUnvalidatedAtomValues_DEPRECATED\", function (values) {\n      _this5.checkRefCount_INTERNAL();\n\n      var store = _this5.getStore_INTERNAL(); // See note at `set` about batched updates.\n\n\n      batchUpdates$1(function () {\n        var _iterator26 = _createForOfIteratorHelper(values.entries()),\n            _step26;\n\n        try {\n          for (_iterator26.s(); !(_step26 = _iterator26.n()).done;) {\n            var _step26$value = _slicedToArray(_step26.value, 2),\n                k = _step26$value[0],\n                v = _step26$value[1];\n\n            updateRetainCount$1(store, k, 1);\n            setUnvalidatedRecoilValue$1(store, new AbstractRecoilValue$2(k), v);\n          }\n        } catch (err) {\n          _iterator26.e(err);\n        } finally {\n          _iterator26.f();\n        }\n      });\n    });\n\n    return _this5;\n  } // We want to allow the methods to be destructured and used as accessors\n  // eslint-disable-next-line fb-www/extra-arrow-initializer\n\n\n  return MutableSnapshot;\n}(Snapshot);\n\nvar Recoil_Snapshot = {\n  Snapshot: Snapshot,\n  MutableSnapshot: MutableSnapshot,\n  freshSnapshot: freshSnapshot,\n  cloneSnapshot: cloneSnapshot\n};\nvar Recoil_Snapshot_1 = Recoil_Snapshot.Snapshot;\nvar Recoil_Snapshot_2 = Recoil_Snapshot.MutableSnapshot;\nvar Recoil_Snapshot_3 = Recoil_Snapshot.freshSnapshot;\nvar Recoil_Snapshot_4 = Recoil_Snapshot.cloneSnapshot;\nvar Recoil_Snapshot$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  Snapshot: Recoil_Snapshot_1,\n  MutableSnapshot: Recoil_Snapshot_2,\n  freshSnapshot: Recoil_Snapshot_3,\n  cloneSnapshot: Recoil_Snapshot_4\n}); // @fb-only: const RecoilusagelogEvent = require('RecoilusagelogEvent');\n// @fb-only: const RecoilUsageLogFalcoEvent = require('RecoilUsageLogFalcoEvent');\n// @fb-only: const URI = require('URI');\n\nvar getNextTreeStateVersion$2 = Recoil_State.getNextTreeStateVersion,\n    makeEmptyStoreState$2 = Recoil_State.makeEmptyStoreState; // @fb-only: const recoverableViolation = require('../util/Recoil_recoverableViolation');\n\nvar cleanUpNode$2 = Recoil_FunctionalCore.cleanUpNode,\n    getDownstreamNodes$2 = Recoil_FunctionalCore.getDownstreamNodes,\n    setNodeValue$2 = Recoil_FunctionalCore.setNodeValue,\n    setUnvalidatedAtomValue_DEPRECATED$1 = Recoil_FunctionalCore.setUnvalidatedAtomValue_DEPRECATED;\nvar graph$3 = Recoil_Graph.graph;\nvar cloneGraph$1 = Recoil_Graph.cloneGraph;\nvar applyAtomValueWrites$1 = Recoil_RecoilValueInterface.applyAtomValueWrites;\nvar releaseScheduledRetainablesNow$1 = Recoil_Retention.releaseScheduledRetainablesNow;\nvar freshSnapshot$1 = Recoil_Snapshot$1.freshSnapshot;\nvar useCallback = react.useCallback,\n    useContext = react.useContext,\n    useEffect = react.useEffect,\n    useMemo = react.useMemo,\n    useRef = react.useRef,\n    useState = react.useState;\n\nfunction notInAContext() {\n  throw new Error('This component must be used inside a <RecoilRoot> component.');\n}\n\nvar defaultStore = Object.freeze({\n  getState: notInAContext,\n  replaceState: notInAContext,\n  getGraph: notInAContext,\n  subscribeToTransactions: notInAContext,\n  addTransactionMetadata: notInAContext\n});\nvar stateReplacerIsBeingExecuted = false;\n\nfunction startNextTreeIfNeeded(store) {\n  if (stateReplacerIsBeingExecuted) {\n    throw new Error('An atom update was triggered within the execution of a state updater function. State updater functions provided to Recoil must be pure functions.');\n  }\n\n  var storeState = store.getState();\n\n  if (storeState.nextTree === null) {\n    if (Recoil_gkx_1('recoil_memory_managament_2020') && Recoil_gkx_1('recoil_release_on_cascading_update_killswitch_2021')) {\n      // If this is a cascading update (that is, rendering due to one state change\n      // invokes a second state change), we won't have cleaned up retainables yet\n      // because this normally happens after notifying components. Do it before\n      // proceeding with the cascading update so that it remains predictable:\n      if (storeState.commitDepth > 0) {\n        releaseScheduledRetainablesNow$1(store);\n      }\n    }\n\n    var version = storeState.currentTree.version;\n    var nextVersion = getNextTreeStateVersion$2();\n    storeState.nextTree = _objectSpread(_objectSpread({}, storeState.currentTree), {}, {\n      version: nextVersion,\n      stateID: nextVersion,\n      dirtyAtoms: new Set(),\n      transactionMetadata: {}\n    });\n    storeState.graphsByVersion.set(nextVersion, cloneGraph$1(Recoil_nullthrows(storeState.graphsByVersion.get(version))));\n  }\n}\n\nvar AppContext = react.createContext({\n  current: defaultStore\n});\n\nvar useStoreRef = function useStoreRef() {\n  return useContext(AppContext);\n};\n\nvar MutableSourceContext = react.createContext(null); // TODO T2710559282599660\n\nfunction useRecoilMutableSource() {\n  var mutableSource = useContext(MutableSourceContext);\n\n  if (mutableSource == null) {\n    Recoil_expectationViolation('Attempted to use a Recoil hook outside of a <RecoilRoot>. ' + '<RecoilRoot> must be an ancestor of any component that uses ' + 'Recoil hooks.');\n  }\n\n  return mutableSource;\n}\n\nfunction sendEndOfBatchNotifications(store) {\n  var storeState = store.getState();\n  var treeState = storeState.currentTree; // Inform transaction subscribers of the transaction:\n\n  var dirtyAtoms = treeState.dirtyAtoms;\n\n  if (dirtyAtoms.size) {\n    // Execute Node-specific subscribers before global subscribers\n    var _iterator27 = _createForOfIteratorHelper(storeState.nodeTransactionSubscriptions),\n        _step27;\n\n    try {\n      for (_iterator27.s(); !(_step27 = _iterator27.n()).done;) {\n        var _step27$value = _slicedToArray(_step27.value, 2),\n            key = _step27$value[0],\n            subscriptions = _step27$value[1];\n\n        if (dirtyAtoms.has(key)) {\n          var _iterator30 = _createForOfIteratorHelper(subscriptions),\n              _step30;\n\n          try {\n            for (_iterator30.s(); !(_step30 = _iterator30.n()).done;) {\n              var _step30$value = _slicedToArray(_step30.value, 2),\n                  _ = _step30$value[0],\n                  subscription = _step30$value[1];\n\n              subscription(store);\n            }\n          } catch (err) {\n            _iterator30.e(err);\n          } finally {\n            _iterator30.f();\n          }\n        }\n      }\n    } catch (err) {\n      _iterator27.e(err);\n    } finally {\n      _iterator27.f();\n    }\n\n    var _iterator28 = _createForOfIteratorHelper(storeState.transactionSubscriptions),\n        _step28;\n\n    try {\n      for (_iterator28.s(); !(_step28 = _iterator28.n()).done;) {\n        var _step28$value = _slicedToArray(_step28.value, 2),\n            _2 = _step28$value[0],\n            _subscription = _step28$value[1];\n\n        _subscription(store);\n      } // Components that are subscribed to the dirty atom:\n\n    } catch (err) {\n      _iterator28.e(err);\n    } finally {\n      _iterator28.f();\n    }\n\n    var dependentNodes = getDownstreamNodes$2(store, treeState, dirtyAtoms);\n\n    var _iterator29 = _createForOfIteratorHelper(dependentNodes),\n        _step29;\n\n    try {\n      for (_iterator29.s(); !(_step29 = _iterator29.n()).done;) {\n        var _key8 = _step29.value;\n        var comps = storeState.nodeToComponentSubscriptions.get(_key8);\n\n        if (comps) {\n          var _iterator31 = _createForOfIteratorHelper(comps),\n              _step31;\n\n          try {\n            for (_iterator31.s(); !(_step31 = _iterator31.n()).done;) {\n              var _step31$value = _slicedToArray(_step31.value, 2),\n                  _subID = _step31$value[0],\n                  _step31$value$ = _slicedToArray(_step31$value[1], 2),\n                  _debugName = _step31$value$[0],\n                  callback = _step31$value$[1];\n\n              callback(treeState);\n            }\n          } catch (err) {\n            _iterator31.e(err);\n          } finally {\n            _iterator31.f();\n          }\n        }\n      } // Wake all suspended components so the right one(s) can try to re-render.\n      // We need to wake up components not just when some asynchronous selector\n      // resolved, but also when changing synchronous values because this may cause\n      // a selector to change from asynchronous to synchronous, in which case there\n      // would be no follow-up asynchronous resolution to wake us up.\n      // TODO OPTIMIZATION Only wake up related downstream components\n\n    } catch (err) {\n      _iterator29.e(err);\n    } finally {\n      _iterator29.f();\n    }\n\n    storeState.suspendedComponentResolvers.forEach(function (cb) {\n      return cb();\n    });\n  } // Special behavior ONLY invoked by useInterface.\n  // FIXME delete queuedComponentCallbacks_DEPRECATED when deleting useInterface.\n\n\n  storeState.queuedComponentCallbacks_DEPRECATED.forEach(function (cb) {\n    return cb(treeState);\n  });\n  storeState.queuedComponentCallbacks_DEPRECATED.splice(0, storeState.queuedComponentCallbacks_DEPRECATED.length);\n}\n/*\n * The purpose of the Batcher is to observe when React batches end so that\n * Recoil state changes can be batched. Whenever Recoil state changes, we call\n * setState on the batcher. Then we wait for that change to be committed, which\n * signifies the end of the batch. That's when we respond to the Recoil change.\n */\n\n\nfunction Batcher(_ref15) {\n  var setNotifyBatcherOfChange = _ref15.setNotifyBatcherOfChange;\n  var storeRef = useStoreRef();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      _ = _useState2[0],\n      setState = _useState2[1];\n\n  setNotifyBatcherOfChange(function () {\n    return setState({});\n  });\n  useEffect(function () {\n    // enqueueExecution runs this function immediately; it is only used to\n    // manipulate the order of useEffects during tests, since React seems to\n    // call useEffect in an unpredictable order sometimes.\n    Recoil_Queue.enqueueExecution('Batcher', function () {\n      var storeState = storeRef.current.getState();\n      storeState.commitDepth++;\n\n      try {\n        var nextTree = storeState.nextTree; // Ignore commits that are not because of Recoil transactions -- namely,\n        // because something above RecoilRoot re-rendered:\n\n        if (nextTree === null) {\n          return;\n        } // nextTree is now committed -- note that copying and reset occurs when\n        // a transaction begins, in startNextTreeIfNeeded:\n\n\n        storeState.previousTree = storeState.currentTree;\n        storeState.currentTree = nextTree;\n        storeState.nextTree = null;\n        sendEndOfBatchNotifications(storeRef.current);\n        var discardedVersion = Recoil_nullthrows(storeState.previousTree).version;\n        storeState.graphsByVersion.delete(discardedVersion);\n        storeState.previousTree = null;\n\n        if (Recoil_gkx_1('recoil_memory_managament_2020')) {\n          releaseScheduledRetainablesNow$1(storeRef.current);\n        }\n      } finally {\n        storeState.commitDepth--;\n      }\n    });\n  }); // If an asynchronous selector resolves after the Batcher is unmounted,\n  // notifyBatcherOfChange will still be called. An error gets thrown whenever\n  // setState is called after a component is already unmounted, so this sets\n  // notifyBatcherOfChange to be a no-op.\n\n  useEffect(function () {\n    return function () {\n      setNotifyBatcherOfChange(function () {});\n    };\n  }, [setNotifyBatcherOfChange]);\n  return null;\n}\n\nif (process.env.NODE_ENV !== \"production\") {\n  if (typeof window !== 'undefined' && !window.$recoilDebugStates) {\n    window.$recoilDebugStates = [];\n  }\n} // When removing this deprecated function, remove stateBySettingRecoilValue\n// which will no longer be needed.\n\n\nfunction initialStoreState_DEPRECATED(store, initializeState) {\n  var initial = makeEmptyStoreState$2();\n  initializeState({\n    // $FlowFixMe[escaped-generic]\n    set: function set(atom, value) {\n      var state = initial.currentTree;\n      var writes = setNodeValue$2(store, state, atom.key, value);\n      var writtenNodes = new Set(writes.keys());\n      var nonvalidatedAtoms = state.nonvalidatedAtoms.clone();\n\n      var _iterator32 = _createForOfIteratorHelper(writtenNodes),\n          _step32;\n\n      try {\n        for (_iterator32.s(); !(_step32 = _iterator32.n()).done;) {\n          var n = _step32.value;\n          nonvalidatedAtoms.delete(n);\n        }\n      } catch (err) {\n        _iterator32.e(err);\n      } finally {\n        _iterator32.f();\n      }\n\n      initial.currentTree = _objectSpread(_objectSpread({}, state), {}, {\n        dirtyAtoms: Recoil_unionSets(state.dirtyAtoms, writtenNodes),\n        atomValues: applyAtomValueWrites$1(state.atomValues, writes),\n        // NB: PLEASE un-export applyAtomValueWrites when deleting this code\n        nonvalidatedAtoms: nonvalidatedAtoms\n      });\n    },\n    setUnvalidatedAtomValues: function setUnvalidatedAtomValues(atomValues) {\n      // FIXME replace this with a mutative loop\n      atomValues.forEach(function (v, k) {\n        initial.currentTree = setUnvalidatedAtomValue_DEPRECATED$1(initial.currentTree, k, v);\n      });\n    }\n  });\n  return initial;\n}\n\nfunction initialStoreState(initializeState) {\n  var snapshot = freshSnapshot$1().map(initializeState);\n  return snapshot.getStore_INTERNAL().getState();\n}\n\nvar nextID = 0;\n\nfunction RecoilRoot_INTERNAL(_ref16) {\n  var initializeState_DEPRECATED = _ref16.initializeState_DEPRECATED,\n      initializeState = _ref16.initializeState,\n      storeProp = _ref16.store_INTERNAL,\n      children = _ref16.children;\n\n  var _createMutableSource; // prettier-ignore\n  // @fb-only: useEffect(() => {\n  // @fb-only: if (gkx('recoil_usage_logging')) {\n  // @fb-only: try {\n  // @fb-only: RecoilUsageLogFalcoEvent.log(() => ({\n  // @fb-only: type: RecoilusagelogEvent.RECOIL_ROOT_MOUNTED,\n  // @fb-only: path: URI.getRequestURI().getPath(),\n  // @fb-only: }));\n  // @fb-only: } catch {\n  // @fb-only: recoverableViolation(\n  // @fb-only: 'Error when logging Recoil Usage event',\n  // @fb-only: 'recoil',\n  // @fb-only: );\n  // @fb-only: }\n  // @fb-only: }\n  // @fb-only: }, []);\n\n\n  var storeState; // eslint-disable-line prefer-const\n\n  var getGraph = function getGraph(version) {\n    var graphs = storeState.current.graphsByVersion;\n\n    if (graphs.has(version)) {\n      return Recoil_nullthrows(graphs.get(version));\n    }\n\n    var newGraph = graph$3();\n    graphs.set(version, newGraph);\n    return newGraph;\n  };\n\n  var subscribeToTransactions = function subscribeToTransactions(callback, key) {\n    if (key == null) {\n      // Global transaction subscriptions\n      var _storeRef$current$get = storeRef.current.getState(),\n          transactionSubscriptions = _storeRef$current$get.transactionSubscriptions;\n\n      var id = nextID++;\n      transactionSubscriptions.set(id, callback);\n      return {\n        release: function release() {\n          transactionSubscriptions.delete(id);\n        }\n      };\n    } else {\n      // Node-specific transaction subscriptions:\n      var _storeRef$current$get2 = storeRef.current.getState(),\n          nodeTransactionSubscriptions = _storeRef$current$get2.nodeTransactionSubscriptions;\n\n      if (!nodeTransactionSubscriptions.has(key)) {\n        nodeTransactionSubscriptions.set(key, new Map());\n      }\n\n      var _id2 = nextID++;\n\n      Recoil_nullthrows(nodeTransactionSubscriptions.get(key)).set(_id2, callback);\n      return {\n        release: function release() {\n          var subs = nodeTransactionSubscriptions.get(key);\n\n          if (subs) {\n            subs.delete(_id2);\n\n            if (subs.size === 0) {\n              nodeTransactionSubscriptions.delete(key);\n            }\n          }\n        }\n      };\n    }\n  };\n\n  var addTransactionMetadata = function addTransactionMetadata(metadata) {\n    startNextTreeIfNeeded(storeRef.current);\n\n    for (var _i3 = 0, _Object$keys = Object.keys(metadata); _i3 < _Object$keys.length; _i3++) {\n      var k = _Object$keys[_i3];\n      Recoil_nullthrows(storeRef.current.getState().nextTree).transactionMetadata[k] = metadata[k];\n    }\n  };\n\n  var replaceState = function replaceState(replacer) {\n    var storeState = storeRef.current.getState();\n    startNextTreeIfNeeded(storeRef.current); // Use replacer to get the next state:\n\n    var nextTree = Recoil_nullthrows(storeState.nextTree);\n    var replaced;\n\n    try {\n      stateReplacerIsBeingExecuted = true;\n      replaced = replacer(nextTree);\n    } finally {\n      stateReplacerIsBeingExecuted = false;\n    }\n\n    if (replaced === nextTree) {\n      return;\n    }\n\n    if (process.env.NODE_ENV !== \"production\") {\n      if (typeof window !== 'undefined') {\n        window.$recoilDebugStates.push(replaced); // TODO this shouldn't happen here because it's not batched\n      }\n    } // Save changes to nextTree and schedule a React update:\n\n\n    storeState.nextTree = replaced;\n    Recoil_nullthrows(notifyBatcherOfChange.current)();\n  };\n\n  var notifyBatcherOfChange = useRef(null);\n  var setNotifyBatcherOfChange = useCallback(function (x) {\n    notifyBatcherOfChange.current = x;\n  }, [notifyBatcherOfChange]); // FIXME T2710559282599660\n\n  var createMutableSource = (_createMutableSource = react.createMutableSource) !== null && _createMutableSource !== void 0 ? _createMutableSource : // flowlint-line unclear-type:off\n  react.unstable_createMutableSource; // flowlint-line unclear-type:off\n\n  var store = storeProp !== null && storeProp !== void 0 ? storeProp : {\n    getState: function getState() {\n      return storeState.current;\n    },\n    replaceState: replaceState,\n    getGraph: getGraph,\n    subscribeToTransactions: subscribeToTransactions,\n    addTransactionMetadata: addTransactionMetadata\n  };\n  var storeRef = useRef(store);\n  storeState = useRef(initializeState_DEPRECATED != null ? initialStoreState_DEPRECATED(store, initializeState_DEPRECATED) : initializeState != null ? initialStoreState(initializeState) : makeEmptyStoreState$2());\n  var mutableSource = useMemo(function () {\n    return createMutableSource ? createMutableSource(storeState, function () {\n      return storeState.current.currentTree.version;\n    }) : null;\n  }, [createMutableSource, storeState]); // Cleanup when the <RecoilRoot> is unmounted\n\n  useEffect(function () {\n    return function () {\n      var _iterator33 = _createForOfIteratorHelper(storeRef.current.getState().knownAtoms),\n          _step33;\n\n      try {\n        for (_iterator33.s(); !(_step33 = _iterator33.n()).done;) {\n          var atomKey = _step33.value;\n          cleanUpNode$2(storeRef.current, atomKey);\n        }\n      } catch (err) {\n        _iterator33.e(err);\n      } finally {\n        _iterator33.f();\n      }\n    };\n  }, []);\n  return /*#__PURE__*/react.createElement(AppContext.Provider, {\n    value: storeRef\n  }, /*#__PURE__*/react.createElement(MutableSourceContext.Provider, {\n    value: mutableSource\n  }, /*#__PURE__*/react.createElement(Batcher, {\n    setNotifyBatcherOfChange: setNotifyBatcherOfChange\n  }), children));\n}\n\nfunction RecoilRoot(props) {\n  var override = props.override,\n      propsExceptOverride = _objectWithoutProperties(props, _excluded);\n\n  var ancestorStoreRef = useStoreRef();\n\n  if (override === false && ancestorStoreRef.current !== defaultStore) {\n    // If ancestorStoreRef.current !== defaultStore, it means that this\n    // RecoilRoot is not nested within another.\n    return /*#__PURE__*/react.createElement(react.Fragment, null, props.children);\n  }\n\n  return /*#__PURE__*/react.createElement(RecoilRoot_INTERNAL, propsExceptOverride);\n}\n\nvar Recoil_RecoilRoot_react = {\n  useStoreRef: useStoreRef,\n  useRecoilMutableSource: useRecoilMutableSource,\n  RecoilRoot: RecoilRoot,\n  sendEndOfBatchNotifications_FOR_TESTING: sendEndOfBatchNotifications\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\n/**\n * Returns a map containing all of the keys + values from the original map where\n * the given callback returned true.\n */\n\nfunction filterMap(map, callback) {\n  var result = new Map();\n\n  var _iterator34 = _createForOfIteratorHelper(map),\n      _step34;\n\n  try {\n    for (_iterator34.s(); !(_step34 = _iterator34.n()).done;) {\n      var _step34$value = _slicedToArray(_step34.value, 2),\n          key = _step34$value[0],\n          value = _step34$value[1];\n\n      if (callback(value, key)) {\n        result.set(key, value);\n      }\n    }\n  } catch (err) {\n    _iterator34.e(err);\n  } finally {\n    _iterator34.f();\n  }\n\n  return result;\n}\n\nvar Recoil_filterMap = filterMap;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\n/**\n * Returns a set containing all of the values from the original set where\n * the given callback returned true.\n */\n\nfunction filterSet(set, callback) {\n  var result = new Set();\n\n  var _iterator35 = _createForOfIteratorHelper(set),\n      _step35;\n\n  try {\n    for (_iterator35.s(); !(_step35 = _iterator35.n()).done;) {\n      var value = _step35.value;\n\n      if (callback(value)) {\n        result.add(value);\n      }\n    }\n  } catch (err) {\n    _iterator35.e(err);\n  } finally {\n    _iterator35.f();\n  }\n\n  return result;\n}\n\nvar Recoil_filterSet = filterSet;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction invariant(condition, message) {\n  if (!condition) {\n    throw new Error(message);\n  }\n}\n\nvar invariant_1 = invariant; // @oss-only\n\nvar Recoil_invariant = invariant_1;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction mergeMaps() {\n  var result = new Map();\n\n  for (var _len5 = arguments.length, maps = new Array(_len5), _key9 = 0; _key9 < _len5; _key9++) {\n    maps[_key9] = arguments[_key9];\n  }\n\n  for (var i = 0; i < maps.length; i++) {\n    var iterator = maps[i].keys();\n    var nextKey = void 0;\n\n    while (!(nextKey = iterator.next()).done) {\n      // $FlowFixMe[incompatible-call] - map/iterator knows nothing about flow types\n      result.set(nextKey.value, maps[i].get(nextKey.value));\n    }\n  }\n  /* $FlowFixMe[incompatible-return] (>=0.66.0 site=www,mobile) This comment\n   * suppresses an error found when Flow v0.66 was deployed. To see the error\n   * delete this comment and run Flow. */\n\n\n  return result;\n}\n\nvar Recoil_mergeMaps = mergeMaps;\n\nvar _useMutableSource; // FIXME T2710559282599660\n\n\nvar useMutableSource = // flowlint-line unclear-type:off\n(_useMutableSource = react.useMutableSource) !== null && _useMutableSource !== void 0 ? _useMutableSource : react.unstable_useMutableSource; // flowlint-line unclear-type:off\n\nfunction mutableSourceExists() {\n  return useMutableSource && !(typeof window !== 'undefined' && window.$disableRecoilValueMutableSource_TEMP_HACK_DO_NOT_USE);\n}\n\nvar Recoil_mutableSource = {\n  mutableSourceExists: mutableSourceExists,\n  useMutableSource: useMutableSource\n};\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction shallowArrayEqual(a, b) {\n  if (a === b) {\n    return true;\n  }\n\n  if (a.length !== b.length) {\n    return false;\n  }\n\n  for (var i = 0, l = a.length; i < l; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nvar Recoil_shallowArrayEqual = shallowArrayEqual;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * MIT License\n *\n * Copyright (c) 2014-2019 Georg Tavonius\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in all\n * copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n * SOFTWARE.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nvar UNKNOWN_FUNCTION = '<unknown>';\n/**\n * This parses the different stack traces and puts them into one format\n * This borrows heavily from TraceKit (https://github.com/csnover/TraceKit)\n */\n\nfunction stackTraceParser(stackString) {\n  var lines = stackString.split('\\n');\n  return lines.reduce(function (stack, line) {\n    var parseResult = parseChrome(line) || parseWinjs(line) || parseGecko(line) || parseNode(line) || parseJSC(line);\n\n    if (parseResult) {\n      stack.push(parseResult);\n    }\n\n    return stack;\n  }, []);\n}\n\nvar chromeRe = /^\\s*at (.*?) ?\\(((?:file|https?|blob|chrome-extension|native|eval|webpack|<anonymous>|\\/|[a-z]:\\\\|\\\\\\\\).*?)(?::(\\d+))?(?::(\\d+))?\\)?\\s*$/i;\nvar chromeEvalRe = /\\((\\S*)(?::(\\d+))(?::(\\d+))\\)/;\n\nfunction parseChrome(line) {\n  var parts = chromeRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  var isNative = parts[2] && parts[2].indexOf('native') === 0; // start of line\n\n  var isEval = parts[2] && parts[2].indexOf('eval') === 0; // start of line\n\n  var submatch = chromeEvalRe.exec(parts[2]);\n\n  if (isEval && submatch != null) {\n    // throw out eval line/column and use top-most line/column number\n    parts[2] = submatch[1]; // url\n\n    parts[3] = submatch[2]; // line\n\n    parts[4] = submatch[3]; // column\n  }\n\n  return {\n    file: !isNative ? parts[2] : null,\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: isNative ? [parts[2]] : [],\n    lineNumber: parts[3] ? +parts[3] : null,\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nvar winjsRe = /^\\s*at (?:((?:\\[object object\\])?.+) )?\\(?((?:file|ms-appx|https?|webpack|blob):.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nfunction parseWinjs(line) {\n  var parts = winjsRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[2],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[3],\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nvar geckoRe = /^\\s*(.*?)(?:\\((.*?)\\))?(?:^|@)((?:file|https?|blob|chrome|webpack|resource|\\[native).*?|[^@]*bundle)(?::(\\d+))?(?::(\\d+))?\\s*$/i;\nvar geckoEvalRe = /(\\S+) line (\\d+)(?: > eval line \\d+)* > eval/i;\n\nfunction parseGecko(line) {\n  var parts = geckoRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  var isEval = parts[3] && parts[3].indexOf(' > eval') > -1;\n  var submatch = geckoEvalRe.exec(parts[3]);\n\n  if (isEval && submatch != null) {\n    // throw out eval line/column and use top-most line number\n    parts[3] = submatch[1];\n    parts[4] = submatch[2];\n    parts[5] = null; // no column when eval\n  }\n\n  return {\n    file: parts[3],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: parts[2] ? parts[2].split(',') : [],\n    lineNumber: parts[4] ? +parts[4] : null,\n    column: parts[5] ? +parts[5] : null\n  };\n}\n\nvar javaScriptCoreRe = /^\\s*(?:([^@]*)(?:\\((.*?)\\))?@)?(\\S.*?):(\\d+)(?::(\\d+))?\\s*$/i;\n\nfunction parseJSC(line) {\n  var parts = javaScriptCoreRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[3],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[4],\n    column: parts[5] ? +parts[5] : null\n  };\n}\n\nvar nodeRe = /^\\s*at (?:((?:\\[object object\\])?[^\\\\/]+(?: \\[as \\S+\\])?) )?\\(?(.*?):(\\d+)(?::(\\d+))?\\)?\\s*$/i;\n\nfunction parseNode(line) {\n  var parts = nodeRe.exec(line);\n\n  if (!parts) {\n    return null;\n  }\n\n  return {\n    file: parts[2],\n    methodName: parts[1] || UNKNOWN_FUNCTION,\n    arguments: [],\n    lineNumber: +parts[3],\n    column: parts[4] ? +parts[4] : null\n  };\n}\n\nvar Recoil_stackTraceParser = stackTraceParser;\nvar useRef$1 = react.useRef;\n\nfunction useComponentName() {\n  var nameRef = useRef$1();\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (Recoil_gkx_1('recoil_infer_component_names')) {\n      var _nameRef$current;\n\n      if (nameRef.current === undefined) {\n        // There is no blessed way to determine the calling React component from\n        // within a hook. This hack uses the fact that hooks must start with 'use'\n        // and that hooks are either called by React Components or other hooks. It\n        // follows therefore, that to find the calling component, you simply need\n        // to look down the stack and find the first function which doesn't start\n        // with 'use'. We are only enabling this in dev for now, since once the\n        // codebase is minified, the naming assumptions no longer hold true.\n        var frames = Recoil_stackTraceParser(new Error().stack);\n\n        var _iterator36 = _createForOfIteratorHelper(frames),\n            _step36;\n\n        try {\n          for (_iterator36.s(); !(_step36 = _iterator36.n()).done;) {\n            var methodName = _step36.value.methodName;\n\n            // I observed cases where the frame was of the form 'Object.useXXX'\n            // hence why I'm searching for hooks following a word boundary\n            if (!methodName.match(/\\buse[^\\b]+$/)) {\n              return nameRef.current = methodName;\n            }\n          }\n        } catch (err) {\n          _iterator36.e(err);\n        } finally {\n          _iterator36.f();\n        }\n\n        nameRef.current = null;\n      }\n\n      return (_nameRef$current = nameRef.current) !== null && _nameRef$current !== void 0 ? _nameRef$current : '<unable to determine component name>';\n    }\n  } // @fb-only: return \"<component name only available when both in dev mode and when passing GK 'recoil_infer_component_names'>\";\n\n\n  return '<component name not available>'; // @oss-only\n}\n\nvar Recoil_useComponentName = useComponentName;\nvar batchUpdates$2 = Recoil_Batching.batchUpdates;\nvar DEFAULT_VALUE$2 = Recoil_Node.DEFAULT_VALUE,\n    getNode$3 = Recoil_Node.getNode,\n    nodes$1 = Recoil_Node.nodes;\nvar useRecoilMutableSource$1 = Recoil_RecoilRoot_react.useRecoilMutableSource,\n    useStoreRef$1 = Recoil_RecoilRoot_react.useStoreRef;\nvar isRecoilValue$2 = Recoil_RecoilValue$1.isRecoilValue;\nvar AbstractRecoilValue$3 = Recoil_RecoilValueInterface.AbstractRecoilValue,\n    getRecoilValueAsLoadable$2 = Recoil_RecoilValueInterface.getRecoilValueAsLoadable,\n    setRecoilValue$2 = Recoil_RecoilValueInterface.setRecoilValue,\n    setRecoilValueLoadable$1 = Recoil_RecoilValueInterface.setRecoilValueLoadable,\n    setUnvalidatedRecoilValue$2 = Recoil_RecoilValueInterface.setUnvalidatedRecoilValue,\n    subscribeToRecoilValue$1 = Recoil_RecoilValueInterface.subscribeToRecoilValue;\nvar updateRetainCount$2 = Recoil_Retention.updateRetainCount;\nvar RetentionZone$3 = Recoil_RetentionZone.RetentionZone;\nvar Snapshot$1 = Recoil_Snapshot$1.Snapshot,\n    cloneSnapshot$1 = Recoil_Snapshot$1.cloneSnapshot;\nvar setByAddingToSet$2 = Recoil_CopyOnWrite.setByAddingToSet;\nvar isSSR$2 = Recoil_Environment.isSSR;\nvar mutableSourceExists$1 = Recoil_mutableSource.mutableSourceExists,\n    useMutableSource$1 = Recoil_mutableSource.useMutableSource;\nvar useCallback$1 = react.useCallback,\n    useEffect$1 = react.useEffect,\n    useMemo$1 = react.useMemo,\n    useRef$2 = react.useRef,\n    useState$1 = react.useState; // Components that aren't mounted after suspending for this long will be assumed\n// to be discarded and their resources released.\n\nvar SUSPENSE_TIMEOUT_MS = 120000;\n\nfunction handleLoadable(loadable, atom, storeRef) {\n  // We can't just throw the promise we are waiting on to Suspense.  If the\n  // upstream dependencies change it may produce a state in which the component\n  // can render, but it would still be suspended on a Promise that may never resolve.\n  if (loadable.state === 'hasValue') {\n    return loadable.contents;\n  } else if (loadable.state === 'loading') {\n    var promise = new Promise(function (resolve) {\n      storeRef.current.getState().suspendedComponentResolvers.add(resolve);\n    });\n    throw promise;\n  } else if (loadable.state === 'hasError') {\n    throw loadable.contents;\n  } else {\n    throw new Error(\"Invalid value of loadable atom \\\"\".concat(atom.key, \"\\\"\"));\n  }\n}\n\nfunction validateRecoilValue(recoilValue, hookName) {\n  if (!isRecoilValue$2(recoilValue)) {\n    throw new Error(\"Invalid argument to \".concat(hookName, \": expected an atom or selector but got \").concat(String(recoilValue)));\n  }\n}\n/**\n * Various things are broken with useRecoilInterface, particularly concurrent mode\n * and memory management. They will not be fixed.\n * */\n\n\nfunction useRecoilInterface_DEPRECATED() {\n  var storeRef = useStoreRef$1();\n\n  var _useState$ = useState$1([]),\n      _useState$2 = _slicedToArray(_useState$, 2),\n      _ = _useState$2[0],\n      forceUpdate = _useState$2[1];\n\n  var recoilValuesUsed = useRef$2(new Set());\n  recoilValuesUsed.current = new Set(); // Track the RecoilValues used just during this render\n\n  var previousSubscriptions = useRef$2(new Set());\n  var subscriptions = useRef$2(new Map());\n  var unsubscribeFrom = useCallback$1(function (key) {\n    var sub = subscriptions.current.get(key);\n\n    if (sub) {\n      sub.release();\n      subscriptions.current.delete(key);\n    }\n  }, [subscriptions]);\n  var componentName = Recoil_useComponentName();\n  useEffect$1(function () {\n    var store = storeRef.current;\n\n    function updateState(_state, key) {\n      if (!subscriptions.current.has(key)) {\n        return;\n      }\n\n      forceUpdate([]);\n    }\n\n    Recoil_differenceSets(recoilValuesUsed.current, previousSubscriptions.current).forEach(function (key) {\n      if (subscriptions.current.has(key)) {\n        Recoil_expectationViolation(\"Double subscription to RecoilValue \\\"\".concat(key, \"\\\"\"));\n        return;\n      }\n\n      var sub = subscribeToRecoilValue$1(store, new AbstractRecoilValue$3(key), function (state) {\n        updateState(state, key);\n      }, componentName);\n      subscriptions.current.set(key, sub);\n      /**\n       * Since we're subscribing in an effect we need to update to the latest\n       * value of the atom since it may have changed since we rendered. We can\n       * go ahead and do that now, unless we're in the middle of a batch --\n       * in which case we should do it at the end of the batch, due to the\n       * following edge case: Suppose an atom is updated in another useEffect\n       * of this same component. Then the following sequence of events occur:\n       * 1. Atom is updated and subs fired (but we may not be subscribed\n       *    yet depending on order of effects, so we miss this) Updated value\n       *    is now in nextTree, but not currentTree.\n       * 2. This effect happens. We subscribe and update.\n       * 3. From the update we re-render and read currentTree, with old value.\n       * 4. Batcher's effect sets currentTree to nextTree.\n       * In this sequence we miss the update. To avoid that, add the update\n       * to queuedComponentCallback if a batch is in progress.\n       */\n      // FIXME delete queuedComponentCallbacks_DEPRECATED when deleting useInterface.\n\n      var state = store.getState();\n\n      if (state.nextTree) {\n        store.getState().queuedComponentCallbacks_DEPRECATED.push(function () {\n          updateState(store.getState(), key);\n        });\n      } else {\n        updateState(store.getState(), key);\n      }\n    });\n    Recoil_differenceSets(previousSubscriptions.current, recoilValuesUsed.current).forEach(function (key) {\n      unsubscribeFrom(key);\n    });\n    previousSubscriptions.current = recoilValuesUsed.current;\n  });\n  useEffect$1(function () {\n    var subs = subscriptions.current;\n    return function () {\n      return subs.forEach(function (_, key) {\n        return unsubscribeFrom(key);\n      });\n    };\n  }, [unsubscribeFrom]);\n  return useMemo$1(function () {\n    function useSetRecoilState(recoilState) {\n      if (process.env.NODE_ENV !== \"production\") {\n        // $FlowFixMe[escaped-generic]\n        validateRecoilValue(recoilState, 'useSetRecoilState');\n      }\n\n      return function (newValueOrUpdater) {\n        setRecoilValue$2(storeRef.current, recoilState, newValueOrUpdater);\n      };\n    }\n\n    function useResetRecoilState(recoilState) {\n      if (process.env.NODE_ENV !== \"production\") {\n        // $FlowFixMe[escaped-generic]\n        validateRecoilValue(recoilState, 'useResetRecoilState');\n      }\n\n      return function () {\n        return setRecoilValue$2(storeRef.current, recoilState, DEFAULT_VALUE$2);\n      };\n    }\n\n    function useRecoilValueLoadable(recoilValue) {\n      if (process.env.NODE_ENV !== \"production\") {\n        // $FlowFixMe[escaped-generic]\n        validateRecoilValue(recoilValue, 'useRecoilValueLoadable');\n      }\n\n      if (!recoilValuesUsed.current.has(recoilValue.key)) {\n        recoilValuesUsed.current = setByAddingToSet$2(recoilValuesUsed.current, recoilValue.key);\n      } // TODO Restore optimization to memoize lookup\n\n\n      return getRecoilValueAsLoadable$2(storeRef.current, recoilValue);\n    }\n\n    function useRecoilValue(recoilValue) {\n      if (process.env.NODE_ENV !== \"production\") {\n        // $FlowFixMe[escaped-generic]\n        validateRecoilValue(recoilValue, 'useRecoilValue');\n      }\n\n      var loadable = useRecoilValueLoadable(recoilValue); // $FlowFixMe[escaped-generic]\n\n      return handleLoadable(loadable, recoilValue, storeRef);\n    }\n\n    function useRecoilState(recoilState) {\n      if (process.env.NODE_ENV !== \"production\") {\n        // $FlowFixMe[escaped-generic]\n        validateRecoilValue(recoilState, 'useRecoilState');\n      }\n\n      return [useRecoilValue(recoilState), useSetRecoilState(recoilState)];\n    }\n\n    function useRecoilStateLoadable(recoilState) {\n      if (process.env.NODE_ENV !== \"production\") {\n        // $FlowFixMe[escaped-generic]\n        validateRecoilValue(recoilState, 'useRecoilStateLoadable');\n      }\n\n      return [useRecoilValueLoadable(recoilState), useSetRecoilState(recoilState)];\n    }\n\n    return {\n      getRecoilValue: useRecoilValue,\n      getRecoilValueLoadable: useRecoilValueLoadable,\n      getRecoilState: useRecoilState,\n      getRecoilStateLoadable: useRecoilStateLoadable,\n      getSetRecoilState: useSetRecoilState,\n      getResetRecoilState: useResetRecoilState\n    };\n  }, [recoilValuesUsed, storeRef]);\n}\n\nvar recoilComponentGetRecoilValueCount_FOR_TESTING = {\n  current: 0\n};\n\nfunction useRecoilValueLoadable_MUTABLESOURCE(recoilValue) {\n  if (process.env.NODE_ENV !== \"production\") {\n    // $FlowFixMe[escaped-generic]\n    validateRecoilValue(recoilValue, 'useRecoilValueLoadable');\n  }\n\n  var storeRef = useStoreRef$1();\n  var getLoadable = useCallback$1(function () {\n    var store = storeRef.current;\n    var treeState = store.getState().currentTree;\n    return getRecoilValueAsLoadable$2(store, recoilValue, treeState);\n  }, [storeRef, recoilValue]);\n  var getLoadableWithTesting = useCallback$1(function () {\n    if (process.env.NODE_ENV !== \"production\") {\n      recoilComponentGetRecoilValueCount_FOR_TESTING.current++;\n    }\n\n    return getLoadable();\n  }, [getLoadable]);\n  var componentName = Recoil_useComponentName();\n  var subscribe = useCallback$1(function (_storeState, callback) {\n    var store = storeRef.current;\n    var subscription = subscribeToRecoilValue$1(store, recoilValue, function () {\n      if (!Recoil_gkx_1('recoil_suppress_rerender_in_callback')) {\n        return callback();\n      } // Only re-render if the value has changed.\n      // This will evaluate the atom/selector now as well as when the\n      // component renders, but that may help with prefetching.\n\n\n      var newLoadable = getLoadable();\n\n      if (!prevLoadableRef.current.is(newLoadable)) {\n        callback();\n      } // If the component is suspended then the effect setting prevLoadableRef\n      // will not run.  So, set the previous value here when its subscription\n      // is fired to wake it up.  We can't just rely on this, though, because\n      // this only executes when an atom/selector is dirty and the atom/selector\n      // passed to the hook can dynamically change.\n\n\n      prevLoadableRef.current = newLoadable;\n    }, componentName);\n    return subscription.release;\n  }, [storeRef, recoilValue, componentName, getLoadable]);\n  var source = useRecoilMutableSource$1();\n  var loadable = useMutableSource$1(source, getLoadableWithTesting, subscribe);\n  var prevLoadableRef = useRef$2(loadable);\n  useEffect$1(function () {\n    prevLoadableRef.current = loadable;\n  });\n  return loadable;\n}\n\nfunction useRecoilValueLoadable_LEGACY(recoilValue) {\n  if (process.env.NODE_ENV !== \"production\") {\n    // $FlowFixMe[escaped-generic]\n    validateRecoilValue(recoilValue, 'useRecoilValueLoadable');\n  }\n\n  var storeRef = useStoreRef$1();\n\n  var _useState$3 = useState$1([]),\n      _useState$4 = _slicedToArray(_useState$3, 2),\n      _ = _useState$4[0],\n      forceUpdate = _useState$4[1];\n\n  var componentName = Recoil_useComponentName();\n  useEffect$1(function () {\n    var store = storeRef.current;\n    var storeState = store.getState();\n    var subscription = subscribeToRecoilValue$1(store, recoilValue, function (_state) {\n      var _prevLoadableRef$curr;\n\n      if (!Recoil_gkx_1('recoil_suppress_rerender_in_callback')) {\n        return forceUpdate([]);\n      }\n\n      var newLoadable = getRecoilValueAsLoadable$2(store, recoilValue, store.getState().currentTree);\n\n      if (!((_prevLoadableRef$curr = prevLoadableRef.current) === null || _prevLoadableRef$curr === void 0 ? void 0 : _prevLoadableRef$curr.is(newLoadable))) {\n        forceUpdate(newLoadable);\n      }\n\n      prevLoadableRef.current = newLoadable;\n    }, componentName);\n    /**\n     * Since we're subscribing in an effect we need to update to the latest\n     * value of the atom since it may have changed since we rendered. We can\n     * go ahead and do that now, unless we're in the middle of a batch --\n     * in which case we should do it at the end of the batch, due to the\n     * following edge case: Suppose an atom is updated in another useEffect\n     * of this same component. Then the following sequence of events occur:\n     * 1. Atom is updated and subs fired (but we may not be subscribed\n     *    yet depending on order of effects, so we miss this) Updated value\n     *    is now in nextTree, but not currentTree.\n     * 2. This effect happens. We subscribe and update.\n     * 3. From the update we re-render and read currentTree, with old value.\n     * 4. Batcher's effect sets currentTree to nextTree.\n     * In this sequence we miss the update. To avoid that, add the update\n     * to queuedComponentCallback if a batch is in progress.\n     */\n\n    if (storeState.nextTree) {\n      store.getState().queuedComponentCallbacks_DEPRECATED.push(function () {\n        prevLoadableRef.current = null;\n        forceUpdate([]);\n      });\n    } else {\n      var _prevLoadableRef$curr2;\n\n      if (!Recoil_gkx_1('recoil_suppress_rerender_in_callback')) {\n        return forceUpdate([]);\n      }\n\n      var newLoadable = getRecoilValueAsLoadable$2(store, recoilValue, store.getState().currentTree);\n\n      if (!((_prevLoadableRef$curr2 = prevLoadableRef.current) === null || _prevLoadableRef$curr2 === void 0 ? void 0 : _prevLoadableRef$curr2.is(newLoadable))) {\n        forceUpdate(newLoadable);\n      }\n\n      prevLoadableRef.current = newLoadable;\n    }\n\n    return subscription.release;\n  }, [componentName, recoilValue, storeRef]);\n  var loadable = getRecoilValueAsLoadable$2(storeRef.current, recoilValue);\n  var prevLoadableRef = useRef$2(loadable);\n  useEffect$1(function () {\n    prevLoadableRef.current = loadable;\n  });\n  return loadable;\n}\n/**\n  Like useRecoilValue(), but either returns the value if available or\n  just undefined if not available for any reason, such as pending or error.\n*/\n\n\nfunction useRecoilValueLoadable(recoilValue) {\n  if (Recoil_gkx_1('recoil_memory_managament_2020')) {\n    // eslint-disable-next-line fb-www/react-hooks\n    useRetain(recoilValue);\n  }\n\n  if (mutableSourceExists$1()) {\n    // eslint-disable-next-line fb-www/react-hooks\n    return useRecoilValueLoadable_MUTABLESOURCE(recoilValue);\n  } else {\n    // eslint-disable-next-line fb-www/react-hooks\n    return useRecoilValueLoadable_LEGACY(recoilValue);\n  }\n}\n/**\n  Returns the value represented by the RecoilValue.\n  If the value is pending, it will throw a Promise to suspend the component,\n  if the value is an error it will throw it for the nearest React error boundary.\n  This will also subscribe the component for any updates in the value.\n  */\n\n\nfunction useRecoilValue(recoilValue) {\n  if (process.env.NODE_ENV !== \"production\") {\n    // $FlowFixMe[escaped-generic]\n    validateRecoilValue(recoilValue, 'useRecoilValue');\n  }\n\n  var storeRef = useStoreRef$1();\n  var loadable = useRecoilValueLoadable(recoilValue); // $FlowFixMe[escaped-generic]\n\n  return handleLoadable(loadable, recoilValue, storeRef);\n}\n/**\n  Returns a function that allows the value of a RecoilState to be updated, but does\n  not subscribe the component to changes to that RecoilState.\n*/\n\n\nfunction useSetRecoilState(recoilState) {\n  if (process.env.NODE_ENV !== \"production\") {\n    // $FlowFixMe[escaped-generic]\n    validateRecoilValue(recoilState, 'useSetRecoilState');\n  }\n\n  var storeRef = useStoreRef$1();\n  return useCallback$1(function (newValueOrUpdater) {\n    setRecoilValue$2(storeRef.current, recoilState, newValueOrUpdater);\n  }, [storeRef, recoilState]);\n}\n/**\n  Returns a function that will reset the value of a RecoilState to its default\n*/\n\n\nfunction useResetRecoilState(recoilState) {\n  if (process.env.NODE_ENV !== \"production\") {\n    // $FlowFixMe[escaped-generic]\n    validateRecoilValue(recoilState, 'useResetRecoilState');\n  }\n\n  var storeRef = useStoreRef$1();\n  return useCallback$1(function () {\n    setRecoilValue$2(storeRef.current, recoilState, DEFAULT_VALUE$2);\n  }, [storeRef, recoilState]);\n}\n/**\n  Equivalent to useState(). Allows the value of the RecoilState to be read and written.\n  Subsequent updates to the RecoilState will cause the component to re-render. If the\n  RecoilState is pending, this will suspend the component and initiate the\n  retrieval of the value. If evaluating the RecoilState resulted in an error, this will\n  throw the error so that the nearest React error boundary can catch it.\n*/\n\n\nfunction useRecoilState(recoilState) {\n  if (process.env.NODE_ENV !== \"production\") {\n    // $FlowFixMe[escaped-generic]\n    validateRecoilValue(recoilState, 'useRecoilState');\n  }\n\n  return [useRecoilValue(recoilState), useSetRecoilState(recoilState)];\n}\n/**\n  Like useRecoilState(), but does not cause Suspense or React error handling. Returns\n  an object that indicates whether the RecoilState is available, pending, or\n  unavailable due to an error.\n*/\n\n\nfunction useRecoilStateLoadable(recoilState) {\n  if (process.env.NODE_ENV !== \"production\") {\n    // $FlowFixMe[escaped-generic]\n    validateRecoilValue(recoilState, 'useRecoilStateLoadable');\n  }\n\n  return [useRecoilValueLoadable(recoilState), useSetRecoilState(recoilState)];\n}\n\nfunction useTransactionSubscription(callback) {\n  var storeRef = useStoreRef$1();\n  useEffect$1(function () {\n    var sub = storeRef.current.subscribeToTransactions(callback);\n    return sub.release;\n  }, [callback, storeRef]);\n}\n\nfunction externallyVisibleAtomValuesInState(state) {\n  var atomValues = state.atomValues.toMap();\n  var persistedAtomContentsValues = Recoil_mapMap(Recoil_filterMap(atomValues, function (v, k) {\n    var node = getNode$3(k);\n    var persistence = node.persistence_UNSTABLE;\n    return persistence != null && persistence.type !== 'none' && v.state === 'hasValue';\n  }), function (v) {\n    return v.contents;\n  }); // Merge in nonvalidated atoms; we may not have defs for them but they will\n  // all have persistence on or they wouldn't be there in the first place.\n\n  return Recoil_mergeMaps(state.nonvalidatedAtoms.toMap(), persistedAtomContentsValues);\n}\n/**\n  Calls the given callback after any atoms have been modified and the consequent\n  component re-renders have been committed. This is intended for persisting\n  the values of the atoms to storage. The stored values can then be restored\n  using the useSetUnvalidatedAtomValues hook.\n\n  The callback receives the following info:\n\n  atomValues: The current value of every atom that is both persistable (persistence\n              type not set to 'none') and whose value is available (not in an\n              error or loading state).\n\n  previousAtomValues: The value of every persistable and available atom before\n               the transaction began.\n\n  atomInfo: A map containing the persistence settings for each atom. Every key\n            that exists in atomValues will also exist in atomInfo.\n\n  modifiedAtoms: The set of atoms that were written to during the transaction.\n\n  transactionMetadata: Arbitrary information that was added via the\n          useSetUnvalidatedAtomValues hook. Useful for ignoring the useSetUnvalidatedAtomValues\n          transaction, to avoid loops.\n*/\n\n\nfunction useTransactionObservation_DEPRECATED(callback) {\n  useTransactionSubscription(useCallback$1(function (store) {\n    var previousTree = store.getState().previousTree;\n    var currentTree = store.getState().currentTree;\n\n    if (!previousTree) {\n      Recoil_recoverableViolation('Transaction subscribers notified without a previous tree being present -- this is a bug in Recoil');\n      previousTree = store.getState().currentTree; // attempt to trundle on\n    }\n\n    var atomValues = externallyVisibleAtomValuesInState(currentTree);\n    var previousAtomValues = externallyVisibleAtomValuesInState(previousTree);\n    var atomInfo = Recoil_mapMap(nodes$1, function (node) {\n      var _node$persistence_UNS, _node$persistence_UNS2, _node$persistence_UNS3, _node$persistence_UNS4;\n\n      return {\n        persistence_UNSTABLE: {\n          type: (_node$persistence_UNS = (_node$persistence_UNS2 = node.persistence_UNSTABLE) === null || _node$persistence_UNS2 === void 0 ? void 0 : _node$persistence_UNS2.type) !== null && _node$persistence_UNS !== void 0 ? _node$persistence_UNS : 'none',\n          backButton: (_node$persistence_UNS3 = (_node$persistence_UNS4 = node.persistence_UNSTABLE) === null || _node$persistence_UNS4 === void 0 ? void 0 : _node$persistence_UNS4.backButton) !== null && _node$persistence_UNS3 !== void 0 ? _node$persistence_UNS3 : false\n        }\n      };\n    }); // Filter on existance in atomValues so that externally-visible rules\n    // are also applied to modified atoms (specifically exclude selectors):\n\n    var modifiedAtoms = Recoil_filterSet(currentTree.dirtyAtoms, function (k) {\n      return atomValues.has(k) || previousAtomValues.has(k);\n    });\n    callback({\n      atomValues: atomValues,\n      previousAtomValues: previousAtomValues,\n      atomInfo: atomInfo,\n      modifiedAtoms: modifiedAtoms,\n      transactionMetadata: _objectSpread({}, currentTree.transactionMetadata)\n    });\n  }, [callback]));\n}\n\nfunction useRecoilTransactionObserver(callback) {\n  useTransactionSubscription(useCallback$1(function (store) {\n    var snapshot = cloneSnapshot$1(store, 'current');\n    var previousSnapshot = cloneSnapshot$1(store, 'previous');\n    callback({\n      snapshot: snapshot,\n      previousSnapshot: previousSnapshot\n    });\n  }, [callback]));\n}\n\nfunction usePrevious(value) {\n  var ref = useRef$2();\n  useEffect$1(function () {\n    ref.current = value;\n  });\n  return ref.current;\n} // Return a snapshot of the current state and subscribe to all state changes\n\n\nfunction useRecoilSnapshot() {\n  var storeRef = useStoreRef$1();\n\n  var _useState$5 = useState$1(function () {\n    return cloneSnapshot$1(storeRef.current);\n  }),\n      _useState$6 = _slicedToArray(_useState$5, 2),\n      snapshot = _useState$6[0],\n      setSnapshot = _useState$6[1];\n\n  var previousSnapshot = usePrevious(snapshot);\n  var timeoutID = useRef$2();\n  useEffect$1(function () {\n    if (timeoutID.current && !isSSR$2) {\n      window.clearTimeout(timeoutID.current);\n    }\n\n    return snapshot.retain();\n  }, [snapshot]);\n  useTransactionSubscription(useCallback$1(function (store) {\n    return setSnapshot(cloneSnapshot$1(store));\n  }, []));\n\n  if (previousSnapshot !== snapshot && !isSSR$2) {\n    if (timeoutID.current) {\n      previousSnapshot === null || previousSnapshot === void 0 ? void 0 : previousSnapshot.release_INTERNAL();\n      window.clearTimeout(timeoutID.current);\n    }\n\n    snapshot.retain();\n    timeoutID.current = window.setTimeout(function () {\n      snapshot.release_INTERNAL();\n      timeoutID.current = null;\n    }, SUSPENSE_TIMEOUT_MS);\n  }\n\n  return snapshot;\n}\n\nfunction useGotoRecoilSnapshot() {\n  var storeRef = useStoreRef$1();\n  return useCallback$1(function (snapshot) {\n    var _storeState$nextTree;\n\n    var storeState = storeRef.current.getState();\n    var prev = (_storeState$nextTree = storeState.nextTree) !== null && _storeState$nextTree !== void 0 ? _storeState$nextTree : storeState.currentTree;\n    var next = snapshot.getStore_INTERNAL().getState().currentTree;\n    batchUpdates$2(function () {\n      var keysToUpdate = new Set();\n\n      for (var _i4 = 0, _arr = [prev.atomValues.keys(), next.atomValues.keys()]; _i4 < _arr.length; _i4++) {\n        var keys = _arr[_i4];\n\n        var _iterator37 = _createForOfIteratorHelper(keys),\n            _step37;\n\n        try {\n          for (_iterator37.s(); !(_step37 = _iterator37.n()).done;) {\n            var key = _step37.value;\n\n            var _prev$atomValues$get, _next$atomValues$get;\n\n            if (((_prev$atomValues$get = prev.atomValues.get(key)) === null || _prev$atomValues$get === void 0 ? void 0 : _prev$atomValues$get.contents) !== ((_next$atomValues$get = next.atomValues.get(key)) === null || _next$atomValues$get === void 0 ? void 0 : _next$atomValues$get.contents) && getNode$3(key).shouldRestoreFromSnapshots) {\n              keysToUpdate.add(key);\n            }\n          }\n        } catch (err) {\n          _iterator37.e(err);\n        } finally {\n          _iterator37.f();\n        }\n      }\n\n      keysToUpdate.forEach(function (key) {\n        setRecoilValueLoadable$1(storeRef.current, new AbstractRecoilValue$3(key), next.atomValues.has(key) ? Recoil_nullthrows(next.atomValues.get(key)) : DEFAULT_VALUE$2);\n      });\n      storeRef.current.replaceState(function (state) {\n        return _objectSpread(_objectSpread({}, state), {}, {\n          stateID: snapshot.getID_INTERNAL()\n        });\n      });\n    });\n  }, [storeRef]);\n}\n\nfunction useSetUnvalidatedAtomValues() {\n  var storeRef = useStoreRef$1();\n  return function (values) {\n    var transactionMetadata = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    batchUpdates$2(function () {\n      storeRef.current.addTransactionMetadata(transactionMetadata);\n      values.forEach(function (value, key) {\n        return setUnvalidatedRecoilValue$2(storeRef.current, new AbstractRecoilValue$3(key), value);\n      });\n    });\n  };\n}\n\nvar Sentinel = function Sentinel() {\n  _classCallCheck(this, Sentinel);\n};\n\nvar SENTINEL = new Sentinel();\n\nfunction useRecoilCallback(fn, deps) {\n  var storeRef = useStoreRef$1();\n  var gotoSnapshot = useGotoRecoilSnapshot();\n  return useCallback$1(function () {\n    for (var _len6 = arguments.length, args = new Array(_len6), _key10 = 0; _key10 < _len6; _key10++) {\n      args[_key10] = arguments[_key10];\n    }\n\n    function set(recoilState, newValueOrUpdater) {\n      setRecoilValue$2(storeRef.current, recoilState, newValueOrUpdater);\n    }\n\n    function reset(recoilState) {\n      setRecoilValue$2(storeRef.current, recoilState, DEFAULT_VALUE$2);\n    } // Use currentTree for the snapshot to show the currently committed state\n\n\n    var snapshot = cloneSnapshot$1(storeRef.current);\n    var ret = SENTINEL;\n    batchUpdates$2(function () {\n      var errMsg = 'useRecoilCallback expects a function that returns a function: ' + 'it accepts a function of the type (RecoilInterface) => T = R ' + 'and returns a callback function T => R, where RecoilInterface is an ' + 'object {snapshot, set, ...} and T and R are the argument and return ' + 'types of the callback you want to create.  Please see the docs ' + 'at recoiljs.org for details.';\n\n      if (typeof fn !== 'function') {\n        throw new Error(errMsg);\n      } // flowlint-next-line unclear-type:off\n\n\n      var cb = fn({\n        set: set,\n        reset: reset,\n        snapshot: snapshot,\n        gotoSnapshot: gotoSnapshot\n      });\n\n      if (typeof cb !== 'function') {\n        throw new Error(errMsg);\n      }\n\n      ret = cb.apply(void 0, args);\n    });\n    !!(ret instanceof Sentinel) ? process.env.NODE_ENV !== \"production\" ? Recoil_invariant(false, 'batchUpdates should return immediately') : Recoil_invariant(false) : void 0;\n    return ret;\n  }, deps != null ? [].concat(_toConsumableArray(deps), [storeRef]) : undefined // eslint-disable-line fb-www/react-hooks-deps\n  );\n} // I don't see a way to avoid the any type here because we want to accept readable\n// and writable values with any type parameter, but normally with writable ones\n// RecoilState<SomeT> is not a subtype of RecoilState<mixed>.\n// flowlint-line unclear-type:off\n\n\nfunction useRetain(toRetain) {\n  if (!Recoil_gkx_1('recoil_memory_managament_2020')) {\n    return;\n  } // eslint-disable-next-line fb-www/react-hooks\n\n\n  return useRetain_ACTUAL(toRetain);\n}\n\nfunction useRetain_ACTUAL(toRetain) {\n  var array = Array.isArray(toRetain) ? toRetain : [toRetain];\n  var retainables = array.map(function (a) {\n    return a instanceof RetentionZone$3 ? a : a.key;\n  });\n  var storeRef = useStoreRef$1();\n  useEffect$1(function () {\n    if (!Recoil_gkx_1('recoil_memory_managament_2020')) {\n      return;\n    }\n\n    var store = storeRef.current;\n\n    if (timeoutID.current && !isSSR$2) {\n      // Already performed a temporary retain on render, simply cancel the release\n      // of that temporary retain.\n      window.clearTimeout(timeoutID.current);\n      timeoutID.current = null;\n    } else {\n      // Log this since it's not clear that there's any scenario where it should happen.\n      Recoil_recoverableViolation('Did not retain recoil value on render, or committed after timeout elapsed. This is fine, but odd.');\n\n      var _iterator38 = _createForOfIteratorHelper(retainables),\n          _step38;\n\n      try {\n        for (_iterator38.s(); !(_step38 = _iterator38.n()).done;) {\n          var r = _step38.value;\n          updateRetainCount$2(store, r, 1);\n        }\n      } catch (err) {\n        _iterator38.e(err);\n      } finally {\n        _iterator38.f();\n      }\n    }\n\n    return function () {\n      var _iterator39 = _createForOfIteratorHelper(retainables),\n          _step39;\n\n      try {\n        for (_iterator39.s(); !(_step39 = _iterator39.n()).done;) {\n          var _r = _step39.value;\n          updateRetainCount$2(store, _r, -1);\n        }\n      } catch (err) {\n        _iterator39.e(err);\n      } finally {\n        _iterator39.f();\n      }\n    }; // eslint-disable-next-line fb-www/react-hooks-deps\n  }, [storeRef].concat(_toConsumableArray(retainables))); // We want to retain if the component suspends. This is terrible but the Suspense\n  // API affords us no better option. If we suspend and never commit after some\n  // seconds, then release. The 'actual' retain/release in the effect above\n  // cancels this.\n\n  var timeoutID = useRef$2();\n  var previousRetainables = usePrevious(retainables);\n\n  if (!isSSR$2 && (previousRetainables === undefined || !Recoil_shallowArrayEqual(previousRetainables, retainables))) {\n    var store = storeRef.current;\n\n    var _iterator40 = _createForOfIteratorHelper(retainables),\n        _step40;\n\n    try {\n      for (_iterator40.s(); !(_step40 = _iterator40.n()).done;) {\n        var _r3 = _step40.value;\n        updateRetainCount$2(store, _r3, 1);\n      }\n    } catch (err) {\n      _iterator40.e(err);\n    } finally {\n      _iterator40.f();\n    }\n\n    if (previousRetainables) {\n      var _iterator41 = _createForOfIteratorHelper(previousRetainables),\n          _step41;\n\n      try {\n        for (_iterator41.s(); !(_step41 = _iterator41.n()).done;) {\n          var r = _step41.value;\n          updateRetainCount$2(store, r, -1);\n        }\n      } catch (err) {\n        _iterator41.e(err);\n      } finally {\n        _iterator41.f();\n      }\n    }\n\n    if (timeoutID.current) {\n      window.clearTimeout(timeoutID.current);\n    }\n\n    timeoutID.current = window.setTimeout(function () {\n      timeoutID.current = null;\n\n      var _iterator42 = _createForOfIteratorHelper(retainables),\n          _step42;\n\n      try {\n        for (_iterator42.s(); !(_step42 = _iterator42.n()).done;) {\n          var _r2 = _step42.value;\n          updateRetainCount$2(store, _r2, -1);\n        }\n      } catch (err) {\n        _iterator42.e(err);\n      } finally {\n        _iterator42.f();\n      }\n    }, SUSPENSE_TIMEOUT_MS);\n  }\n}\n\nvar Recoil_Hooks = {\n  recoilComponentGetRecoilValueCount_FOR_TESTING: recoilComponentGetRecoilValueCount_FOR_TESTING,\n  useGotoRecoilSnapshot: useGotoRecoilSnapshot,\n  useRecoilCallback: useRecoilCallback,\n  useRecoilInterface: useRecoilInterface_DEPRECATED,\n  useRecoilSnapshot: useRecoilSnapshot,\n  useRecoilState: useRecoilState,\n  useRecoilStateLoadable: useRecoilStateLoadable,\n  useRecoilTransactionObserver: useRecoilTransactionObserver,\n  useRecoilValue: useRecoilValue,\n  useRecoilValueLoadable: useRecoilValueLoadable,\n  useRetain: useRetain,\n  useResetRecoilState: useResetRecoilState,\n  useSetRecoilState: useSetRecoilState,\n  useSetUnvalidatedAtomValues: useSetUnvalidatedAtomValues,\n  useTransactionObservation_DEPRECATED: useTransactionObservation_DEPRECATED,\n  useTransactionSubscription_DEPRECATED: useTransactionSubscription\n};\nvar peekNodeInfo$2 = Recoil_FunctionalCore.peekNodeInfo;\nvar useStoreRef$2 = Recoil_RecoilRoot_react.useStoreRef;\n\nfunction useGetRecoilValueInfo() {\n  var storeRef = useStoreRef$2();\n  return function (_ref17) {\n    var key = _ref17.key;\n    return peekNodeInfo$2(storeRef.current, storeRef.current.getState().currentTree, key);\n  };\n}\n\nvar Recoil_useGetRecoilValueInfo = useGetRecoilValueInfo;\nvar RecoilRoot$1 = Recoil_RecoilRoot_react.RecoilRoot,\n    useStoreRef$3 = Recoil_RecoilRoot_react.useStoreRef;\nvar useMemo$2 = react.useMemo;\n\nfunction useRecoilBridgeAcrossReactRoots() {\n  var store = useStoreRef$3().current;\n  return useMemo$2(function () {\n    function RecoilBridge(_ref18) {\n      var children = _ref18.children;\n      return /*#__PURE__*/react.createElement(RecoilRoot$1, {\n        store_INTERNAL: store\n      }, children);\n    }\n\n    return RecoilBridge;\n  }, [store]);\n}\n\nvar Recoil_useRecoilBridgeAcrossReactRoots = useRecoilBridgeAcrossReactRoots;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction isNode(object) {\n  var _ownerDocument, _doc$defaultView;\n\n  if (typeof window === 'undefined') {\n    return false;\n  }\n\n  var doc = object != null ? (_ownerDocument = object.ownerDocument) !== null && _ownerDocument !== void 0 ? _ownerDocument : object : document;\n  var defaultView = (_doc$defaultView = doc.defaultView) !== null && _doc$defaultView !== void 0 ? _doc$defaultView : window;\n  return !!(object != null && (typeof defaultView.Node === 'function' ? object instanceof defaultView.Node : typeof object === 'object' && typeof object.nodeType === 'number' && typeof object.nodeName === 'string'));\n}\n\nvar Recoil_isNode = isNode;\nvar isReactNative$1 = Recoil_Environment.isReactNative,\n    isSSR$3 = Recoil_Environment.isSSR;\n\nfunction shouldNotBeFrozen(value) {\n  // Primitives and functions:\n  if (value === null || typeof value !== 'object') {\n    return true;\n  } // React elements:\n\n\n  switch (typeof value.$$typeof) {\n    case 'symbol':\n      return true;\n\n    case 'number':\n      return true;\n  } // Immutable structures:\n\n\n  if (value['@@__IMMUTABLE_ITERABLE__@@'] != null || value['@@__IMMUTABLE_KEYED__@@'] != null || value['@@__IMMUTABLE_INDEXED__@@'] != null || value['@@__IMMUTABLE_ORDERED__@@'] != null || value['@@__IMMUTABLE_RECORD__@@'] != null) {\n    return true;\n  } // DOM nodes:\n\n\n  if (Recoil_isNode(value)) {\n    return true;\n  }\n\n  if (Recoil_isPromise(value)) {\n    return true;\n  }\n\n  if (value instanceof Error) {\n    return true;\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return true;\n  } // Some environments, just as Jest, don't work with the instanceof check\n\n\n  if (!isSSR$3 && !isReactNative$1 && ( // $FlowFixMe(site=recoil) Window does not have a FlowType definition https://github.com/facebook/flow/issues/6709\n  value === window || value instanceof Window)) {\n    return true;\n  }\n\n  return false;\n} // Recursively freeze a value to enforce it is read-only.\n// This may also have minimal performance improvements for enumerating\n// objects (based on browser implementations, of course)\n\n\nfunction deepFreezeValue(value) {\n  if (typeof value !== 'object' || shouldNotBeFrozen(value)) {\n    return;\n  }\n\n  Object.freeze(value); // Make all properties read-only\n\n  for (var key in value) {\n    if (Object.prototype.hasOwnProperty.call(value, key)) {\n      var prop = value[key]; // Prevent infinite recurssion for circular references.\n\n      if (typeof prop === 'object' && prop != null && !Object.isFrozen(prop)) {\n        deepFreezeValue(prop);\n      }\n    }\n  }\n\n  Object.seal(value); // This also makes existing properties non-configurable.\n}\n\nvar Recoil_deepFreezeValue = deepFreezeValue;\nvar TIME_WARNING_THRESHOLD_MS = 15;\n\nfunction stringify(x, opt, key) {\n  // A optimization to avoid the more expensive JSON.stringify() for simple strings\n  // This may lose protection for u2028 and u2029, though.\n  if (typeof x === 'string' && !x.includes('\"') && !x.includes('\\\\')) {\n    return \"\\\"\".concat(x, \"\\\"\");\n  } // Handle primitive types\n\n\n  switch (typeof x) {\n    case 'undefined':\n      return '';\n    // JSON.stringify(undefined) returns undefined, but we always want to return a string\n\n    case 'boolean':\n      return x ? 'true' : 'false';\n\n    case 'number':\n    case 'symbol':\n      // case 'bigint': // BigInt is not supported in www\n      return String(x);\n\n    case 'string':\n      // Add surrounding quotes and escape internal quotes\n      return JSON.stringify(x);\n\n    case 'function':\n      if ((opt === null || opt === void 0 ? void 0 : opt.allowFunctions) !== true) {\n        throw new Error('Attempt to serialize function in a Recoil cache key');\n      }\n\n      return \"__FUNCTION(\".concat(x.name, \")__\");\n  }\n\n  if (x === null) {\n    return 'null';\n  } // Fallback case for unknown types\n\n\n  if (typeof x !== 'object') {\n    var _JSON$stringify;\n\n    return (_JSON$stringify = JSON.stringify(x)) !== null && _JSON$stringify !== void 0 ? _JSON$stringify : '';\n  } // Deal with all promises as equivalent for now.\n\n\n  if (Recoil_isPromise(x)) {\n    return '__PROMISE__';\n  } // Arrays handle recursive stringification\n\n\n  if (Array.isArray(x)) {\n    return \"[\".concat(x.map(function (v, i) {\n      return stringify(v, opt, i.toString());\n    }), \"]\");\n  } // If an object defines a toJSON() method, then use that to override the\n  // serialization.  This matches the behavior of JSON.stringify().\n  // Pass the key for compatibility.\n  // Immutable.js collections define this method to allow us to serialize them.\n\n\n  if (typeof x.toJSON === 'function') {\n    // flowlint-next-line unclear-type: off\n    return stringify(x.toJSON(key), opt, key);\n  } // For built-in Maps, sort the keys in a stable order instead of the\n  // default insertion order.  Support non-string keys.\n\n\n  if (x instanceof Map) {\n    var obj = {};\n\n    var _iterator43 = _createForOfIteratorHelper(x),\n        _step43;\n\n    try {\n      for (_iterator43.s(); !(_step43 = _iterator43.n()).done;) {\n        var _step43$value = _slicedToArray(_step43.value, 2),\n            k = _step43$value[0],\n            v = _step43$value[1];\n\n        // Stringify will escape any nested quotes\n        obj[typeof k === 'string' ? k : stringify(k, opt)] = v;\n      }\n    } catch (err) {\n      _iterator43.e(err);\n    } finally {\n      _iterator43.f();\n    }\n\n    return stringify(obj, opt, key);\n  } // For built-in Sets, sort the keys in a stable order instead of the\n  // default insertion order.\n\n\n  if (x instanceof Set) {\n    return stringify(Array.from(x).sort(function (a, b) {\n      return stringify(a, opt).localeCompare(stringify(b, opt));\n    }), opt, key);\n  } // Anything else that is iterable serialize as an Array.\n\n\n  if (Symbol !== undefined && x[Symbol.iterator] != null && typeof x[Symbol.iterator] === 'function') {\n    // flowlint-next-line unclear-type: off\n    return stringify(Array.from(x), opt, key);\n  } // For all other Objects, sort the keys in a stable order.\n\n\n  return \"{\".concat(Object.keys(x).filter(function (key) {\n    return x[key] !== undefined;\n  }).sort() // stringify the key to add quotes and escape any nested slashes or quotes.\n  .map(function (key) {\n    return \"\".concat(stringify(key, opt), \":\").concat(stringify(x[key], opt, key));\n  }).join(','), \"}\");\n} // Utility similar to JSON.stringify() except:\n// * Serialize built-in Sets as an Array\n// * Serialize built-in Maps as an Object.  Supports non-string keys.\n// * Serialize other iterables as arrays\n// * Sort the keys of Objects and Maps to have a stable order based on string conversion.\n//    This overrides their default insertion order.\n// * Still uses toJSON() of any object to override serialization\n// * Support Symbols (though don't guarantee uniqueness)\n// * We could support BigInt, but Flow doesn't seem to like it.\n// See Recoil_stableStringify-test.js for examples\n\n\nfunction stableStringify(x) {\n  var opt = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    allowFunctions: false\n  };\n\n  if (process.env.NODE_ENV !== \"production\") {\n    if (typeof window !== 'undefined') {\n      var startTime = window.performance ? window.performance.now() : 0;\n      var str = stringify(x, opt);\n      var endTime = window.performance ? window.performance.now() : 0;\n\n      if (endTime - startTime > TIME_WARNING_THRESHOLD_MS) {\n        /* eslint-disable fb-www/no-console */\n        console.groupCollapsed(\"Recoil: Spent \".concat(endTime - startTime, \"ms computing a cache key\"));\n        console.warn(x, str);\n        console.groupEnd();\n        /* eslint-enable fb-www/no-console */\n      }\n\n      return str;\n    }\n  }\n\n  return stringify(x, opt);\n}\n\nvar Recoil_stableStringify = stableStringify;\n\nvar TreeCache = /*#__PURE__*/function () {\n  function TreeCache(options) {\n    _classCallCheck(this, TreeCache);\n\n    var _options$onHit, _options$onSet, _options$mapNodeValue;\n\n    _defineProperty(this, \"_numLeafs\", void 0);\n\n    _defineProperty(this, \"_root\", void 0);\n\n    _defineProperty(this, \"_onHit\", void 0);\n\n    _defineProperty(this, \"_onSet\", void 0);\n\n    _defineProperty(this, \"_mapNodeValue\", void 0);\n\n    this._numLeafs = 0;\n    this._root = null;\n    this._onHit = (_options$onHit = options === null || options === void 0 ? void 0 : options.onHit) !== null && _options$onHit !== void 0 ? _options$onHit : function () {};\n    this._onSet = (_options$onSet = options === null || options === void 0 ? void 0 : options.onSet) !== null && _options$onSet !== void 0 ? _options$onSet : function () {};\n    this._mapNodeValue = (_options$mapNodeValue = options === null || options === void 0 ? void 0 : options.mapNodeValue) !== null && _options$mapNodeValue !== void 0 ? _options$mapNodeValue : function (val) {\n      return val;\n    };\n  }\n\n  _createClass(TreeCache, [{\n    key: \"size\",\n    value: function size() {\n      return this._numLeafs;\n    } // TODO: nodeCount(): number\n\n  }, {\n    key: \"root\",\n    value: function root() {\n      return this._root;\n    }\n  }, {\n    key: \"get\",\n    value: function get(getNodeValue, handlers) {\n      var _this$getLeafNode;\n\n      return (_this$getLeafNode = this.getLeafNode(getNodeValue, handlers)) === null || _this$getLeafNode === void 0 ? void 0 : _this$getLeafNode.value;\n    }\n  }, {\n    key: \"getLeafNode\",\n    value: function getLeafNode(getNodeValue, handlers) {\n      var _this6 = this;\n\n      return findLeaf(this.root(), function (nodeKey) {\n        return _this6._mapNodeValue(getNodeValue(nodeKey));\n      }, {\n        onNodeVisit: function onNodeVisit(node) {\n          handlers === null || handlers === void 0 ? void 0 : handlers.onNodeVisit(node);\n\n          if (node.type === 'leaf') {\n            _this6._onHit(node);\n          }\n        }\n      });\n    }\n  }, {\n    key: \"set\",\n    value: function set(route, value, handlers) {\n      var _this7 = this;\n\n      var leafNode;\n      var newRoot = addLeaf(this.root(), route.map(function (_ref19) {\n        var _ref20 = _slicedToArray(_ref19, 2),\n            nodeKey = _ref20[0],\n            nodeValue = _ref20[1];\n\n        return [nodeKey, _this7._mapNodeValue(nodeValue)];\n      }), null, value, null, {\n        onNodeVisit: function onNodeVisit(node) {\n          handlers === null || handlers === void 0 ? void 0 : handlers.onNodeVisit(node);\n\n          if (node.type === 'leaf') {\n            leafNode = node;\n          }\n        }\n      });\n\n      if (!this.root()) {\n        this._root = newRoot;\n      }\n\n      this._numLeafs++;\n\n      this._onSet(Recoil_nullthrows(leafNode));\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(node) {\n      if (!this.root()) {\n        return false;\n      }\n\n      var root = Recoil_nullthrows(this.root());\n      var existsInTree = pruneNodeFromTree(root, node, node.parent);\n\n      if (!existsInTree) {\n        return false;\n      }\n\n      if (node === root || root.type === 'branch' && !root.branches.size) {\n        this._root = null;\n        this._numLeafs = 0;\n        return true;\n      }\n\n      this._numLeafs -= countDownstreamLeaves(node);\n      return true;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._numLeafs = 0;\n      this._root = null;\n    }\n  }]);\n\n  return TreeCache;\n}();\n\nvar findLeaf = function findLeaf(root, getNodeValue, handlers) {\n  var _handlers$onNodeVisit;\n\n  if (root == null) {\n    return undefined;\n  }\n\n  handlers === null || handlers === void 0 ? void 0 : (_handlers$onNodeVisit = handlers.onNodeVisit) === null || _handlers$onNodeVisit === void 0 ? void 0 : _handlers$onNodeVisit.call(handlers, root);\n\n  if (root.type === 'leaf') {\n    return root;\n  }\n\n  var nodeValue = getNodeValue(root.nodeKey);\n  return findLeaf(root.branches.get(nodeValue), getNodeValue, handlers);\n};\n\nvar addLeaf = function addLeaf(root, route, parent, value, branchKey, handlers) {\n  var _handlers$onNodeVisit2;\n\n  var node;\n\n  if (root == null) {\n    if (route.length === 0) {\n      node = {\n        type: 'leaf',\n        value: value,\n        parent: parent,\n        branchKey: branchKey\n      };\n    } else {\n      var _route = _toArray(route),\n          path = _route[0],\n          rest = _route.slice(1);\n\n      var _path = _slicedToArray(path, 2),\n          nodeKey = _path[0],\n          nodeValue = _path[1];\n\n      node = {\n        type: 'branch',\n        nodeKey: nodeKey,\n        parent: parent,\n        branches: new Map(),\n        branchKey: branchKey\n      };\n      node.branches.set(nodeValue, addLeaf(null, rest, node, value, nodeValue, handlers));\n    }\n  } else {\n    node = root;\n\n    if (route.length) {\n      var _route2 = _toArray(route),\n          _path2 = _route2[0],\n          _rest = _route2.slice(1);\n\n      var _path3 = _slicedToArray(_path2, 2),\n          _nodeKey = _path3[0],\n          _nodeValue = _path3[1];\n\n      !(root.type === 'branch' && root.nodeKey === _nodeKey) ? process.env.NODE_ENV !== \"production\" ? Recoil_invariant(false, 'Existing cache must have a branch midway through the route with matching node key') : Recoil_invariant(false) : void 0;\n      root.branches.set(_nodeValue, addLeaf(root.branches.get(_nodeValue), _rest, root, value, _nodeValue, handlers));\n    }\n  }\n\n  handlers === null || handlers === void 0 ? void 0 : (_handlers$onNodeVisit2 = handlers.onNodeVisit) === null || _handlers$onNodeVisit2 === void 0 ? void 0 : _handlers$onNodeVisit2.call(handlers, node);\n  return node;\n};\n\nvar pruneNodeFromTree = function pruneNodeFromTree(root, node, parent) {\n  if (!parent) {\n    return root === node;\n  }\n\n  parent.branches.delete(node.branchKey);\n  return pruneUpstreamBranches(root, parent, parent.parent);\n};\n\nvar pruneUpstreamBranches = function pruneUpstreamBranches(root, branchNode, parent) {\n  if (!parent) {\n    return root === branchNode;\n  }\n\n  if (branchNode.branches.size === 0) {\n    parent.branches.delete(branchNode.branchKey);\n  }\n\n  return pruneUpstreamBranches(root, parent, parent.parent);\n};\n\nvar countDownstreamLeaves = function countDownstreamLeaves(node) {\n  return node.type === 'leaf' ? 1 : Array.from(node.branches.values()).reduce(function (sum, currNode) {\n    return sum + countDownstreamLeaves(currNode);\n  }, 0);\n};\n\nvar Recoil_TreeCache = {\n  TreeCache: TreeCache\n};\nvar Recoil_TreeCache_1 = Recoil_TreeCache.TreeCache;\nvar Recoil_TreeCache$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  TreeCache: Recoil_TreeCache_1\n});\n\nvar LRUCache = /*#__PURE__*/function () {\n  function LRUCache(options) {\n    _classCallCheck(this, LRUCache);\n\n    var _options$mapKey;\n\n    _defineProperty(this, \"_maxSize\", void 0);\n\n    _defineProperty(this, \"_size\", void 0);\n\n    _defineProperty(this, \"_head\", void 0);\n\n    _defineProperty(this, \"_tail\", void 0);\n\n    _defineProperty(this, \"_map\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    this._maxSize = options.maxSize;\n    this._size = 0;\n    this._head = null;\n    this._tail = null;\n    this._map = new Map();\n    this._keyMapper = (_options$mapKey = options.mapKey) !== null && _options$mapKey !== void 0 ? _options$mapKey : function (v) {\n      return v;\n    };\n  }\n\n  _createClass(LRUCache, [{\n    key: \"head\",\n    value: function head() {\n      return this._head;\n    }\n  }, {\n    key: \"tail\",\n    value: function tail() {\n      return this._tail;\n    }\n  }, {\n    key: \"size\",\n    value: function size() {\n      return this._size;\n    }\n  }, {\n    key: \"maxSize\",\n    value: function maxSize() {\n      return this._maxSize;\n    }\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return this._map.has(this._keyMapper(key));\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      var mappedKey = this._keyMapper(key);\n\n      var node = this._map.get(mappedKey);\n\n      if (!node) {\n        return undefined;\n      }\n\n      this.set(key, node.value);\n      return node.value;\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, val) {\n      var mappedKey = this._keyMapper(key);\n\n      var existingNode = this._map.get(mappedKey);\n\n      if (existingNode) {\n        this.delete(key);\n      }\n\n      var head = this.head();\n      var node = {\n        key: key,\n        right: head,\n        left: null,\n        value: val\n      };\n\n      if (head) {\n        head.left = node;\n      } else {\n        this._tail = node;\n      }\n\n      this._map.set(mappedKey, node);\n\n      this._head = node;\n      this._size++;\n\n      this._maybeDeleteLRU();\n    }\n  }, {\n    key: \"_maybeDeleteLRU\",\n    value: function _maybeDeleteLRU() {\n      if (this.size() > this.maxSize()) {\n        this.deleteLru();\n      }\n    }\n  }, {\n    key: \"deleteLru\",\n    value: function deleteLru() {\n      var tail = this.tail();\n\n      if (tail) {\n        this.delete(tail.key);\n      }\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      var mappedKey = this._keyMapper(key);\n\n      if (!this._size || !this._map.has(mappedKey)) {\n        return;\n      }\n\n      var node = Recoil_nullthrows(this._map.get(mappedKey));\n      var right = node.right;\n      var left = node.left;\n\n      if (right) {\n        right.left = node.left;\n      }\n\n      if (left) {\n        left.right = node.right;\n      }\n\n      if (node === this.head()) {\n        this._head = right;\n      }\n\n      if (node === this.tail()) {\n        this._tail = left;\n      }\n\n      this._map.delete(mappedKey);\n\n      this._size--;\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._size = 0;\n      this._head = null;\n      this._tail = null;\n      this._map = new Map();\n    }\n  }]);\n\n  return LRUCache;\n}();\n\nvar Recoil_LRUCache = {\n  LRUCache: LRUCache\n};\nvar Recoil_LRUCache_1 = Recoil_LRUCache.LRUCache;\nvar Recoil_LRUCache$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  LRUCache: Recoil_LRUCache_1\n});\nvar LRUCache$1 = Recoil_LRUCache$1.LRUCache;\nvar TreeCache$1 = Recoil_TreeCache$1.TreeCache;\n\nfunction treeCacheLRU(maxSize) {\n  var mapNodeValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : function (v) {\n    return v;\n  };\n  var lruCache = new LRUCache$1({\n    maxSize: maxSize\n  });\n  var cache = new TreeCache$1({\n    mapNodeValue: mapNodeValue,\n    onHit: function onHit(node) {\n      lruCache.set(node, true);\n    },\n    onSet: function onSet(node) {\n      var lruNode = lruCache.tail();\n      lruCache.set(node, true);\n\n      if (lruNode && cache.size() > maxSize) {\n        cache.delete(lruNode.key);\n      }\n    }\n  });\n  return cache;\n}\n\nvar Recoil_treeCacheLRU = treeCacheLRU;\nvar TreeCache$2 = Recoil_TreeCache$1.TreeCache;\nvar defaultPolicy = {\n  equality: 'reference',\n  eviction: 'none',\n  maxSize: Infinity\n};\n\nfunction treeCacheFromPolicy() {\n  var _ref21 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultPolicy,\n      _ref21$equality = _ref21.equality,\n      equality = _ref21$equality === void 0 ? defaultPolicy.equality : _ref21$equality,\n      _ref21$eviction = _ref21.eviction,\n      eviction = _ref21$eviction === void 0 ? defaultPolicy.eviction : _ref21$eviction,\n      _ref21$maxSize = _ref21.maxSize,\n      maxSize = _ref21$maxSize === void 0 ? defaultPolicy.maxSize : _ref21$maxSize;\n\n  var valueMapper = getValueMapper(equality);\n  var treeCache = getTreeCache(eviction, maxSize, valueMapper);\n  return treeCache;\n}\n\nfunction getValueMapper(equality) {\n  switch (equality) {\n    case 'reference':\n      return function (val) {\n        return val;\n      };\n\n    case 'value':\n      return function (val) {\n        return Recoil_stableStringify(val);\n      };\n  }\n\n  throw new Error(\"Unrecognized equality policy \".concat(equality));\n}\n\nfunction getTreeCache(eviction, maxSize, mapNodeValue) {\n  switch (eviction) {\n    case 'none':\n      return new TreeCache$2({\n        mapNodeValue: mapNodeValue\n      });\n\n    case 'lru':\n      return Recoil_treeCacheLRU(Recoil_nullthrows(maxSize), mapNodeValue);\n  }\n\n  throw new Error(\"Unrecognized eviction policy \".concat(eviction));\n}\n\nvar Recoil_treeCacheFromPolicy = treeCacheFromPolicy;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @emails oncall+recoil\n * \n * @format\n *\n * This is a stub for some integration into FB internal stuff\n */\n\nfunction startPerfBlock(_id) {\n  return function () {\n    return null;\n  };\n}\n\nvar Recoil_PerformanceTimings = {\n  startPerfBlock: startPerfBlock\n};\nvar CANCELED$2 = Recoil_Loadable.CANCELED,\n    Canceled$1 = Recoil_Loadable.Canceled,\n    loadableWithError$1 = Recoil_Loadable.loadableWithError,\n    loadableWithPromise$1 = Recoil_Loadable.loadableWithPromise,\n    loadableWithValue$1 = Recoil_Loadable.loadableWithValue;\nvar getNodeLoadable$2 = Recoil_FunctionalCore.getNodeLoadable,\n    peekNodeLoadable$1 = Recoil_FunctionalCore.peekNodeLoadable,\n    setNodeValue$3 = Recoil_FunctionalCore.setNodeValue;\nvar saveDependencyMapToStore$1 = Recoil_Graph.saveDependencyMapToStore;\nvar DEFAULT_VALUE$3 = Recoil_Node.DEFAULT_VALUE,\n    RecoilValueNotReady$2 = Recoil_Node.RecoilValueNotReady,\n    getConfigDeletionHandler$1 = Recoil_Node.getConfigDeletionHandler,\n    registerNode$1 = Recoil_Node.registerNode;\nvar isRecoilValue$3 = Recoil_RecoilValue$1.isRecoilValue;\nvar AbstractRecoilValue$4 = Recoil_RecoilValue$1.AbstractRecoilValue;\nvar setRecoilValueLoadable$2 = Recoil_RecoilValueInterface.setRecoilValueLoadable;\nvar retainedByOptionWithDefault$1 = Recoil_Retention.retainedByOptionWithDefault;\nvar cloneSnapshot$2 = Recoil_Snapshot$1.cloneSnapshot;\nvar startPerfBlock$1 = Recoil_PerformanceTimings.startPerfBlock;\nvar dependencyStack = []; // for detecting circular dependencies.\n\nvar waitingStores = new Map();\n/* eslint-disable no-redeclare */\n\nvar getNewExecutionId = function () {\n  var executionId = 0;\n  return function () {\n    return executionId++;\n  };\n}();\n\nfunction getInitialExecutionInfo() {\n  return {\n    depValuesDiscoveredSoFarDuringAsyncWork: null,\n    latestLoadable: null,\n    latestExecutionId: null,\n    stateVersion: null\n  };\n}\n\nfunction selector(options) {\n  var key = options.key,\n      get = options.get,\n      cachePolicy = options.cachePolicy_UNSTABLE;\n  var set = options.set != null ? options.set : undefined; // flow\n\n  var cache = Recoil_treeCacheFromPolicy(cachePolicy !== null && cachePolicy !== void 0 ? cachePolicy : {\n    equality: 'reference',\n    eviction: 'none'\n  });\n  var retainedBy = retainedByOptionWithDefault$1(options.retainedBy_UNSTABLE);\n  var executionInfoMap = new Map();\n  var liveStoresCount = 0;\n\n  function selectorIsLive() {\n    return !Recoil_gkx_1('recoil_memory_managament_2020') || liveStoresCount > 0;\n  }\n\n  function getExecutionInfo(store) {\n    if (!executionInfoMap.has(store)) {\n      executionInfoMap.set(store, getInitialExecutionInfo());\n    }\n\n    return Recoil_nullthrows(executionInfoMap.get(store));\n  }\n\n  function selectorInit(store) {\n    liveStoresCount++;\n    store.getState().knownSelectors.add(key); // FIXME remove knownSelectors?\n\n    return function () {\n      liveStoresCount--;\n      store.getState().knownSelectors.delete(key);\n      executionInfoMap.delete(store);\n    };\n  }\n\n  function selectorShouldDeleteConfigOnRelease() {\n    return getConfigDeletionHandler$1(key) !== undefined && !selectorIsLive();\n  }\n\n  function notifyStoreWhenAsyncSettles(store, loadable, executionId) {\n    if (loadable.state === 'loading') {\n      var stores = waitingStores.get(executionId);\n\n      if (stores == null) {\n        waitingStores.set(executionId, stores = new Set());\n      }\n\n      stores.add(store);\n    }\n  }\n\n  function notifyStoresOfSettledAsync(newLoadable, executionId) {\n    var stores = waitingStores.get(executionId);\n\n    if (stores !== undefined) {\n      var _iterator44 = _createForOfIteratorHelper(stores),\n          _step44;\n\n      try {\n        for (_iterator44.s(); !(_step44 = _iterator44.n()).done;) {\n          var store = _step44.value;\n          setRecoilValueLoadable$2(store, new AbstractRecoilValue$4(key), newLoadable);\n        }\n      } catch (err) {\n        _iterator44.e(err);\n      } finally {\n        _iterator44.f();\n      }\n\n      waitingStores.delete(executionId);\n    }\n  }\n\n  function getCachedNodeLoadable(store, state, key) {\n    if (state.atomValues.has(key)) {\n      return Recoil_nullthrows(state.atomValues.get(key));\n    }\n\n    var loadable = getNodeLoadable$2(store, state, key);\n    var isKeyPointingToSelector = store.getState().knownSelectors.has(key);\n\n    if (loadable.state !== 'loading' && isKeyPointingToSelector) {\n      state.atomValues.set(key, loadable);\n    }\n\n    return loadable;\n  }\n  /**\n   * This function attaches a then() and a catch() to a promise that was\n   * returned from a selector's get() (either explicitly or implicitly by\n   * running a function that uses the \"async\" keyword). If a selector's get()\n   * returns a promise, we have two possibilities:\n   *\n   * 1. The promise will resolve, in which case it will have completely finished\n   *    executing without any remaining pending dependencies. No more retries\n   *    are needed and we can proceed with updating the cache and notifying\n   *    subscribers (if it is the latest execution, otherwise only the cache\n   *    will be updated and subscriptions will not be fired). This is the case\n   *    handled by the attached then() handler.\n   *\n   * 2. The promise will throw because it either has an error or it came across\n   *    an async dependency that has not yet resolved, in which case we will\n   *    call wrapDepdencyPromise(), whose responsibility is to handle dependency\n   *    promises. This case is handled by the attached catch() handler.\n   *\n   * Both branches will eventually resolve to the final result of the selector\n   * (or an error if a real error occurred).\n   *\n   * The execution will run to completion even if it is stale, and its value\n   * will be cached. But stale executions will not update global state or update\n   * executionInfo as that is the responsibility of the 'latest' execution.\n   *\n   * Note this function should not be passed a promise that was thrown--AKA a\n   * dependency promise. Dependency promises should be passed to\n   * wrapPendingDependencyPromise()).\n   */\n\n\n  function wrapPendingPromise(store, promise, state, depValues, executionId) {\n    return promise.then(function (value) {\n      if (!selectorIsLive()) {\n        // The selector was released since the request began; ignore the response.\n        clearExecutionInfo(store, executionId);\n        return CANCELED$2;\n      }\n\n      var loadable = loadableWithValue$1(value);\n      maybeFreezeValue(value);\n      setCache(state, depValuesToDepRoute(depValues), loadable);\n      setDepsInStore(store, state, new Set(depValues.keys()), executionId);\n      setLoadableInStoreToNotifyDeps(store, loadable, executionId);\n      return {\n        __value: value,\n        __key: key\n      };\n    }).catch(function (errorOrPromise) {\n      if (!selectorIsLive()) {\n        // The selector was released since the request began; ignore the response.\n        clearExecutionInfo(store, executionId);\n        return CANCELED$2;\n      }\n\n      if (isLatestExecution(store, executionId)) {\n        updateExecutionInfoDepValues(depValues, store, executionId);\n      }\n\n      if (Recoil_isPromise(errorOrPromise)) {\n        return wrapPendingDependencyPromise(store, errorOrPromise, state, depValues, executionId);\n      }\n\n      var loadable = loadableWithError$1(errorOrPromise);\n      maybeFreezeValue(errorOrPromise);\n      setCache(state, depValuesToDepRoute(depValues), loadable);\n      setDepsInStore(store, state, new Set(depValues.keys()), executionId);\n      setLoadableInStoreToNotifyDeps(store, loadable, executionId);\n      throw errorOrPromise;\n    });\n  }\n  /**\n   * This function attaches a then() and a catch() to a promise that was\n   * thrown from a selector's get(). If a selector's get() throws a promise,\n   * we have two possibilities:\n   *\n   * 1. The promise will resolve, meaning one of our selector's dependencies is\n   *    now available and we should \"retry\" our get() by running it again. This\n   *    is the case handled by the attached then() handler.\n   *\n   * 2. The promise will throw because something went wrong with the dependency\n   *    promise (in other words a real error occurred). This case is handled by\n   *    the attached catch() handler. If the dependency promise throws, it is\n   *    _always_ a real error and not another dependency promise (any dependency\n   *    promises would have been handled upstream).\n   *\n   * The then() branch will eventually resolve to the final result of the\n   * selector (or an error if a real error occurs), and the catch() will always\n   * resolve to an error because the dependency promise is a promise that was\n   * wrapped upstream, meaning it will only resolve to its real value or to a\n   * real error.\n   *\n   * The execution will run to completion even if it is stale, and its value\n   * will be cached. But stale executions will not update global state or update\n   * executionInfo as that is the responsibility of the 'latest' execution.\n   *\n   * Note this function should not be passed a promise that was returned from\n   * get(). The intention is that this function is only passed promises that\n   * were thrown due to a pending dependency. Promises returned by get() should\n   * be passed to wrapPendingPromise() instead.\n   */\n\n\n  function wrapPendingDependencyPromise(store, promise, state, existingDeps, executionId) {\n    return promise.then(function (resolvedDep) {\n      if (!selectorIsLive()) {\n        // The selector was released since the request began; ignore the response.\n        clearExecutionInfo(store, executionId);\n        return CANCELED$2;\n      }\n\n      if (resolvedDep instanceof Canceled$1) {\n        Recoil_recoverableViolation('Selector was released while it had dependencies');\n        return CANCELED$2;\n      }\n\n      var _ref22 = resolvedDep !== null && resolvedDep !== void 0 ? resolvedDep : {},\n          resolvedDepKey = _ref22.__key,\n          depValue = _ref22.__value;\n      /**\n       * We need to bypass the selector dep cache if the resolved dep was a\n       * user-thrown promise because the selector dep cache will contain the\n       * stale values of dependencies, causing an infinite evaluation loop.\n       */\n\n\n      var bypassSelectorDepCacheOnReevaluation = true;\n\n      if (resolvedDepKey != null) {\n        /**\n         * Note for async atoms, this means we are changing the atom's value\n         * in the store for the given version. This should be alright because\n         * the version of state is now stale and a new version will have\n         * already been triggered by the atom being resolved (see this logic\n         * in Recoil_atom.js)\n         */\n        state.atomValues.set(resolvedDepKey, loadableWithValue$1(depValue));\n        /**\n         * We've added the resolved dependency to the selector dep cache, so\n         * there's no need to bypass the cache\n         */\n\n        bypassSelectorDepCacheOnReevaluation = false;\n      }\n\n      var _evaluateSelectorGett = evaluateSelectorGetter(store, state, executionId, bypassSelectorDepCacheOnReevaluation),\n          _evaluateSelectorGett2 = _slicedToArray(_evaluateSelectorGett, 2),\n          loadable = _evaluateSelectorGett2[0],\n          depValues = _evaluateSelectorGett2[1];\n\n      if (isLatestExecution(store, executionId)) {\n        updateExecutionInfoDepValues(depValues, store, executionId);\n      }\n\n      maybeFreezeLoadableContents(loadable);\n\n      if (loadable.state !== 'loading') {\n        setCache(state, depValuesToDepRoute(depValues), loadable);\n        setDepsInStore(store, state, new Set(depValues.keys()), executionId);\n        setLoadableInStoreToNotifyDeps(store, loadable, executionId);\n      }\n\n      if (loadable.state === 'hasError') {\n        throw loadable.contents;\n      }\n\n      if (loadable.state === 'hasValue') {\n        return {\n          __value: loadable.contents,\n          __key: key\n        };\n      }\n      /**\n       * Returning promise here without wrapping as the wrapepr logic was\n       * already done when we called evaluateSelectorGetter() to get this\n       * loadable\n       */\n\n\n      return loadable.contents;\n    }).catch(function (error) {\n      if (!selectorIsLive()) {\n        // The selector was released since the request began; ignore the response.\n        clearExecutionInfo(store, executionId);\n        return CANCELED$2;\n      }\n\n      var loadable = loadableWithError$1(error);\n      maybeFreezeValue(error);\n      setCache(state, depValuesToDepRoute(existingDeps), loadableWithError$1(error));\n      setDepsInStore(store, state, new Set(existingDeps.keys()), executionId);\n      setLoadableInStoreToNotifyDeps(store, loadable, executionId);\n      throw error;\n    });\n  }\n\n  function setLoadableInStoreToNotifyDeps(store, loadable, executionId) {\n    if (isLatestExecution(store, executionId)) {\n      setExecutionInfo(loadable, store);\n      notifyStoresOfSettledAsync(loadable, executionId);\n    }\n  }\n\n  function setDepsInStore(store, state, deps, executionId) {\n    var _store$getState, _store$getState$curre, _store$getState2, _store$getState2$next;\n\n    if (isLatestExecution(store, executionId) || state.version === ((_store$getState = store.getState()) === null || _store$getState === void 0 ? void 0 : (_store$getState$curre = _store$getState.currentTree) === null || _store$getState$curre === void 0 ? void 0 : _store$getState$curre.version) || state.version === ((_store$getState2 = store.getState()) === null || _store$getState2 === void 0 ? void 0 : (_store$getState2$next = _store$getState2.nextTree) === null || _store$getState2$next === void 0 ? void 0 : _store$getState2$next.version)) {\n      var _store$getState$nextT, _store$getState3, _store$getState3$next;\n\n      saveDependencyMapToStore$1(new Map([[key, deps]]), store, (_store$getState$nextT = (_store$getState3 = store.getState()) === null || _store$getState3 === void 0 ? void 0 : (_store$getState3$next = _store$getState3.nextTree) === null || _store$getState3$next === void 0 ? void 0 : _store$getState3$next.version) !== null && _store$getState$nextT !== void 0 ? _store$getState$nextT : store.getState().currentTree.version);\n    }\n  }\n\n  function setNewDepInStore(store, state, deps, newDepKey, executionId) {\n    deps.add(newDepKey);\n    setDepsInStore(store, state, deps, executionId);\n  }\n\n  function evaluateSelectorGetter(store, state, executionId) {\n    var bypassSelectorDepCache = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n    var endPerfBlock = startPerfBlock$1(key); // TODO T63965866: use execution ID here\n\n    var result;\n    var resultIsError = false;\n    var loadable;\n    var depValues = new Map();\n    /**\n     * Starting a fresh set of deps that we'll be using to update state. We're\n     * starting a new set versus adding it in existing state deps because\n     * the version of state that we update deps for may be a more recent version\n     * than the version the selector was called with. This is because the latest\n     * execution will update the deps of the current/latest version of state (\n     * this is safe to do because the fact that the selector is the latest\n     * execution means the deps we discover below are our best guess at the\n     * deps for the current/latest state in the store)\n     */\n\n    var deps = new Set();\n    setDepsInStore(store, state, deps, executionId);\n\n    function getRecoilValue(recoilValue) {\n      var depKey = recoilValue.key;\n      setNewDepInStore(store, state, deps, depKey, executionId);\n      var depLoadable = bypassSelectorDepCache ? getNodeLoadable$2(store, state, depKey) : getCachedNodeLoadable(store, state, depKey);\n      maybeFreezeLoadableContents(depLoadable);\n      depValues.set(depKey, depLoadable);\n\n      if (depLoadable.state === 'hasValue') {\n        return depLoadable.contents;\n      }\n\n      throw depLoadable.contents;\n    }\n\n    var gateCallback = false;\n\n    var getCallback = function getCallback(fn) {\n      return function () {\n        if (!gateCallback) {\n          throw new Error('getCallback() should only be called asynchronously after the selector is evalutated.  It can be used for selectors to return objects with callbacks that can obtain the current Recoil state without a subscription.');\n        }\n\n        var snapshot = cloneSnapshot$2(store);\n        var cb = fn({\n          snapshot: snapshot\n        });\n\n        if (typeof cb !== 'function') {\n          throw new Error('getCallback() expects a function that returns a function.');\n        }\n\n        return cb.apply(void 0, arguments);\n      };\n    };\n\n    try {\n      result = get({\n        get: getRecoilValue,\n        getCallback: getCallback\n      });\n      result = isRecoilValue$3(result) ? getRecoilValue(result) : result;\n      gateCallback = true;\n\n      if (Recoil_isPromise(result)) {\n        result = wrapPendingPromise(store, // $FlowFixMe[incompatible-call]\n        result, state, depValues, executionId).finally(endPerfBlock);\n      } else {\n        endPerfBlock();\n      }\n    } catch (errorOrDepPromise) {\n      result = errorOrDepPromise;\n\n      if (Recoil_isPromise(result)) {\n        result = wrapPendingDependencyPromise(store, // $FlowFixMe[incompatible-call]\n        result, state, depValues, executionId).finally(endPerfBlock);\n      } else {\n        resultIsError = true;\n        endPerfBlock();\n      }\n    }\n\n    if (resultIsError) {\n      loadable = loadableWithError$1(result);\n    } else if (Recoil_isPromise(result)) {\n      // $FlowFixMe[incompatible-call]\n      loadable = loadableWithPromise$1(result);\n    } else {\n      // $FlowFixMe[incompatible-call]\n      loadable = loadableWithValue$1(result);\n    }\n\n    maybeFreezeLoadableContents(loadable);\n    return [loadable, depValues];\n  }\n\n  function getValFromCacheAndUpdatedDownstreamDeps(store, state) {\n    var depsAfterCacheDone = new Set();\n    var executionInfo = getExecutionInfo(store);\n    var cachedVal = cache.get(function (nodeKey) {\n      !(typeof nodeKey === 'string') ? process.env.NODE_ENV !== \"production\" ? Recoil_invariant(false, 'Cache nodeKey is type string') : Recoil_invariant(false) : void 0;\n      var loadable = getCachedNodeLoadable(store, state, nodeKey);\n      return loadable.contents;\n    }, {\n      onNodeVisit: function onNodeVisit(node) {\n        if (node.type === 'branch' && node.nodeKey !== key && typeof node.nodeKey === 'string') {\n          depsAfterCacheDone.add(node.nodeKey);\n        }\n      }\n    });\n    /**\n     * Ensure store contains correct dependencies if we hit the cache so that\n     * the store deps and cache are in sync for a given state. This is important\n     * because store deps are normally updated when new executions are created,\n     * but cache hits don't trigger new executions but they still _may_ signifiy\n     * a change in deps in the store if the store deps for this state are empty\n     * or stale.\n     */\n\n    if (cachedVal) {\n      setDepsInStore(store, state, depsAfterCacheDone, executionInfo.latestExecutionId);\n    }\n\n    return cachedVal;\n  }\n  /**\n   * FIXME: dep keys should take into account the state of the loadable to\n   * prevent the edge case where a loadable with an error and a loadable with\n   * an error as a value are treated as the same thing incorrectly. For example\n   * these two should be treated differently:\n   *\n   * selector({key: '', get: () => new Error('hi')});\n   * selector({key: '', get () => {throw new Error('hi')}});\n   *\n   * With current implementation they are treated the same\n   */\n\n\n  function depValuesToDepRoute(depValues) {\n    return Array.from(depValues.entries()).map(function (_ref23) {\n      var _ref24 = _slicedToArray(_ref23, 2),\n          key = _ref24[0],\n          valLoadable = _ref24[1];\n\n      return [key, valLoadable.contents];\n    });\n  }\n\n  function getValFromRunningNewExecutionAndUpdatedDeps(store, state) {\n    var newExecutionId = getNewExecutionId();\n\n    var _evaluateSelectorGett3 = evaluateSelectorGetter(store, state, newExecutionId),\n        _evaluateSelectorGett4 = _slicedToArray(_evaluateSelectorGett3, 2),\n        loadable = _evaluateSelectorGett4[0],\n        newDepValues = _evaluateSelectorGett4[1];\n\n    setExecutionInfo(loadable, store, newDepValues, newExecutionId, state);\n    maybeSetCacheWithLoadable(state, depValuesToDepRoute(newDepValues), loadable);\n    notifyStoreWhenAsyncSettles(store, loadable, newExecutionId);\n    return loadable;\n  }\n  /**\n   * Given a tree state, this function returns the \"selector result\", which is\n   * defined as a size-2 tuple of [DependencyMap, Loadable<T>].\n   *\n   * The selector's get() function will only be re-evaluated if _both_ of the\n   * following statements are true:\n   *\n   * 1. The current dep values from the given state produced a cache key that\n   *    was not found in the cache.\n   * 2. There is no currently running async execution OR there is an\n   *    async execution that is running, but after comparing the dep values in\n   *    the given state with the dep values that the execution has discovered so\n   *    far we find that at least one dep value has changed, in which case we\n   *    start a new execution (the previously running execution will continue to\n   *    run to completion, but only the new execution will be deemed the\n   *    'latest' execution, meaning it will be the only execution that will\n   *    update global state when it is finished. Any non-latest executions will\n   *    run to completion and update the selector cache but not global state).\n   */\n\n\n  function getSelectorValAndUpdatedDeps(store, state) {\n    var cachedVal = getValFromCacheAndUpdatedDownstreamDeps(store, state);\n\n    if (cachedVal != null) {\n      setExecutionInfo(cachedVal, store);\n      return cachedVal;\n    }\n\n    var inProgressExecutionInfo = getExecutionInfoOfInProgressExecution(store, state); // FIXME: this won't work with custom caching b/c it uses separate cache\n\n    if (inProgressExecutionInfo) {\n      var executionInfo = inProgressExecutionInfo;\n      notifyStoreWhenAsyncSettles(store, Recoil_nullthrows(executionInfo.latestLoadable), Recoil_nullthrows(executionInfo.latestExecutionId)); // FIXME: check after the fact to see if we made the right choice by waiting\n\n      return Recoil_nullthrows(executionInfo.latestLoadable);\n    }\n\n    return getValFromRunningNewExecutionAndUpdatedDeps(store, state);\n  }\n  /**\n   * Searches execution info across all stores to see if there is an in-progress\n   * execution whose dependency values match the values of the requesting store.\n   */\n\n\n  function getExecutionInfoOfInProgressExecution(store, state) {\n    var _Array$from$find;\n\n    var _ref25 = (_Array$from$find = Array.from(executionInfoMap.entries()).find(function (_ref27) {\n      var _ref28 = _slicedToArray(_ref27, 2),\n          executionInfo = _ref28[1];\n\n      return executionInfo.latestLoadable != null && executionInfo.latestExecutionId != null && !haveAsyncDepsChanged(store, state);\n    })) !== null && _Array$from$find !== void 0 ? _Array$from$find : [],\n        _ref26 = _slicedToArray(_ref25, 2),\n        executionInfo = _ref26[1];\n\n    return executionInfo;\n  }\n\n  var mapOfCheckedVersions = new Map();\n\n  function haveAsyncDepsChanged(store, state) {\n    var _executionInfo$depVal, _mapOfCheckedVersions;\n\n    var executionInfo = getExecutionInfo(store);\n    var oldDepValues = (_executionInfo$depVal = executionInfo.depValuesDiscoveredSoFarDuringAsyncWork) !== null && _executionInfo$depVal !== void 0 ? _executionInfo$depVal : new Map();\n    var cachedDepValuesCheckedForThisVersion = Array(((_mapOfCheckedVersions = mapOfCheckedVersions.get(state.version)) !== null && _mapOfCheckedVersions !== void 0 ? _mapOfCheckedVersions : new Map()).entries());\n    var isCachedVersionSame = mapOfCheckedVersions.has(state.version) && cachedDepValuesCheckedForThisVersion.length === oldDepValues.size && cachedDepValuesCheckedForThisVersion.every(function (_ref29) {\n      var _ref30 = _slicedToArray(_ref29, 2),\n          nodeKey = _ref30[0],\n          nodeVal = _ref30[1];\n\n      return oldDepValues.get(nodeKey) === nodeVal;\n    });\n\n    if (oldDepValues == null || state.version === executionInfo.stateVersion || isCachedVersionSame) {\n      return false;\n    }\n\n    mapOfCheckedVersions.set(state.version, new Map(oldDepValues));\n    return Array.from(oldDepValues).some(function (_ref31) {\n      var _ref32 = _slicedToArray(_ref31, 2),\n          nodeKey = _ref32[0],\n          oldVal = _ref32[1];\n\n      var loadable = getCachedNodeLoadable(store, state, nodeKey);\n      return loadable.contents !== oldVal.contents &&\n      /**\n       * FIXME: in the condition below we're making the assumption that a\n       * dependency that goes from loading to having a value is always because\n       * the dependency resolved to that value, so we don't count it as a dep\n       * change as the normal retry loop will handle retrying in response to a\n       * resolved async dep. This is an incorrect assumption for the edge case\n       * where there is an async selector that is loading, and while it is\n       * loading one of its dependencies changes, triggering a new execution,\n       * and that new execution produces a value synchronously (we don't make\n       * that assumption for asynchronous work b/c it's guaranteed that a\n       * loadable that goes from 'loading' to 'loading' in a new loadable is\n       * a dep change).\n       */\n      !(oldVal.state === 'loading' && loadable.state !== 'loading');\n    });\n  }\n  /**\n   * This function will update the selector's execution info when the selector\n   * has either finished running an execution or has started a new execution. If\n   * the given loadable is in a 'loading' state, the intention is that a new\n   * execution has started. Otherwise, the intention is that an execution has\n   * just finished.\n   */\n\n\n  function setExecutionInfo(loadable, store, depValues, newExecutionId, state) {\n    var executionInfo = getExecutionInfo(store);\n\n    if (loadable.state === 'loading') {\n      executionInfo.depValuesDiscoveredSoFarDuringAsyncWork = depValues;\n      executionInfo.latestExecutionId = newExecutionId;\n      executionInfo.latestLoadable = loadable;\n      executionInfo.stateVersion = state === null || state === void 0 ? void 0 : state.version;\n    } else {\n      executionInfo.depValuesDiscoveredSoFarDuringAsyncWork = null;\n      executionInfo.latestExecutionId = null;\n      executionInfo.latestLoadable = null;\n      executionInfo.stateVersion = null;\n    }\n  }\n  /**\n   * Conditionally updates the cache with a given loadable.\n   *\n   * We only cache loadables that are not loading because our cache keys are\n   * based on dep values, which are in an unfinished state for loadables that\n   * have a 'loading' state (new deps may be discovered while the selector\n   * runs its async code). We never want to cache partial dependencies b/c it\n   * could lead to errors, such as prematurely returning the result based on a\n   * partial list of deps-- we need the full list of deps to ensure that we\n   * are returning the correct result from cache.\n   */\n\n\n  function maybeSetCacheWithLoadable(state, depRoute, loadable) {\n    if (loadable.state !== 'loading') {\n      setCache(state, depRoute, loadable);\n    }\n  }\n\n  function updateExecutionInfoDepValues(depValues, store, executionId) {\n    var executionInfo = getExecutionInfo(store);\n\n    if (isLatestExecution(store, executionId)) {\n      executionInfo.depValuesDiscoveredSoFarDuringAsyncWork = depValues;\n    }\n  }\n\n  function clearExecutionInfo(store, executionId) {\n    if (isLatestExecution(store, executionId)) {\n      executionInfoMap.delete(store);\n    }\n  }\n\n  function isLatestExecution(store, executionId) {\n    var executionInfo = getExecutionInfo(store);\n    return executionId === executionInfo.latestExecutionId;\n  }\n\n  function maybeFreezeLoadableContents(loadable) {\n    if (loadable.state !== 'loading') {\n      maybeFreezeValue(loadable.contents);\n    }\n  }\n\n  function maybeFreezeValue(val) {\n    if (process.env.NODE_ENV !== \"production\") {\n      if (Boolean(options.dangerouslyAllowMutability) === false) {\n        Recoil_deepFreezeValue(val);\n      }\n    }\n  }\n\n  function setCache(state, cacheRoute, loadable) {\n    state.atomValues.set(key, loadable);\n    cache.set(cacheRoute, loadable);\n  }\n\n  function detectCircularDependencies(fn) {\n    if (dependencyStack.includes(key)) {\n      var message = \"Recoil selector has circular dependencies: \".concat(dependencyStack.slice(dependencyStack.indexOf(key)).join(\" \\u2192 \"));\n      return loadableWithError$1(new Error(message));\n    }\n\n    dependencyStack.push(key);\n\n    try {\n      return fn();\n    } finally {\n      dependencyStack.pop();\n    }\n  }\n\n  function selectorPeek(store, state) {\n    var cacheVal = cache.get(function (nodeKey) {\n      !(typeof nodeKey === 'string') ? process.env.NODE_ENV !== \"production\" ? Recoil_invariant(false, 'Cache nodeKey is type string') : Recoil_invariant(false) : void 0;\n      var peek = peekNodeLoadable$1(store, state, nodeKey);\n      return peek === null || peek === void 0 ? void 0 : peek.contents;\n    });\n    return cacheVal;\n  }\n\n  function selectorGet(store, state) {\n    return detectCircularDependencies(function () {\n      return getSelectorValAndUpdatedDeps(store, state);\n    });\n  }\n\n  function invalidateSelector(state) {\n    state.atomValues.delete(key);\n  }\n\n  if (set != null) {\n    /**\n     * ES5 strict mode prohibits defining non-top-level function declarations,\n     * so don't use function declaration syntax here\n     */\n    var selectorSet = function selectorSet(store, state, newValue) {\n      var syncSelectorSetFinished = false;\n      var writes = new Map();\n\n      function getRecoilValue(_ref33) {\n        var key = _ref33.key;\n\n        if (syncSelectorSetFinished) {\n          throw new Error('Recoil: Async selector sets are not currently supported.');\n        }\n\n        var loadable = getCachedNodeLoadable(store, state, key);\n        maybeFreezeLoadableContents(loadable);\n\n        if (loadable.state === 'hasValue') {\n          return loadable.contents;\n        } else if (loadable.state === 'loading') {\n          throw new RecoilValueNotReady$2(key);\n        } else {\n          throw loadable.contents;\n        }\n      }\n\n      function setRecoilState(recoilState, valueOrUpdater) {\n        if (syncSelectorSetFinished) {\n          throw new Error('Recoil: Async selector sets are not currently supported.');\n        }\n\n        var newValue = typeof valueOrUpdater === 'function' ? // cast to any because we can't restrict type S from being a function itself without losing support for opaque types\n        // flowlint-next-line unclear-type:off\n        valueOrUpdater(getRecoilValue(recoilState)) : valueOrUpdater;\n        var upstreamWrites = setNodeValue$3(store, state, recoilState.key, newValue);\n        upstreamWrites.forEach(function (v, k) {\n          return writes.set(k, v);\n        });\n      }\n\n      function resetRecoilState(recoilState) {\n        setRecoilState(recoilState, DEFAULT_VALUE$3);\n      }\n\n      var ret = set({\n        set: setRecoilState,\n        get: getRecoilValue,\n        reset: resetRecoilState\n      }, newValue); // set should be a void method, but if the user makes it `async`, then it\n      // will return a Promise, which we don't currently support.\n\n      if (ret !== undefined) {\n        throw Recoil_isPromise(ret) ? new Error('Recoil: Async selector sets are not currently supported.') : new Error('Recoil: selector set should be a void function.');\n      }\n\n      syncSelectorSetFinished = true;\n      return writes;\n    };\n\n    return registerNode$1({\n      key: key,\n      peek: selectorPeek,\n      get: selectorGet,\n      set: selectorSet,\n      init: selectorInit,\n      invalidate: invalidateSelector,\n      shouldDeleteConfigOnRelease: selectorShouldDeleteConfigOnRelease,\n      dangerouslyAllowMutability: options.dangerouslyAllowMutability,\n      shouldRestoreFromSnapshots: false,\n      retainedBy: retainedBy\n    });\n  } else {\n    return registerNode$1({\n      key: key,\n      peek: selectorPeek,\n      get: selectorGet,\n      init: selectorInit,\n      invalidate: invalidateSelector,\n      shouldDeleteConfigOnRelease: selectorShouldDeleteConfigOnRelease,\n      dangerouslyAllowMutability: options.dangerouslyAllowMutability,\n      shouldRestoreFromSnapshots: false,\n      retainedBy: retainedBy\n    });\n  }\n}\n/* eslint-enable no-redeclare */\n\n\nvar Recoil_selector = selector; // @fb-only: const {scopedAtom} = require('Recoil_ScopedAtom');\n\nvar loadableWithError$2 = Recoil_Loadable.loadableWithError,\n    loadableWithPromise$2 = Recoil_Loadable.loadableWithPromise,\n    loadableWithValue$2 = Recoil_Loadable.loadableWithValue;\nvar DEFAULT_VALUE$4 = Recoil_Node.DEFAULT_VALUE,\n    DefaultValue$2 = Recoil_Node.DefaultValue,\n    getConfigDeletionHandler$2 = Recoil_Node.getConfigDeletionHandler,\n    registerNode$2 = Recoil_Node.registerNode,\n    setConfigDeletionHandler$1 = Recoil_Node.setConfigDeletionHandler;\nvar isRecoilValue$4 = Recoil_RecoilValue$1.isRecoilValue;\nvar markRecoilValueModified$1 = Recoil_RecoilValueInterface.markRecoilValueModified,\n    setRecoilValue$3 = Recoil_RecoilValueInterface.setRecoilValue,\n    setRecoilValueLoadable$3 = Recoil_RecoilValueInterface.setRecoilValueLoadable;\nvar retainedByOptionWithDefault$2 = Recoil_Retention.retainedByOptionWithDefault;\n\nfunction baseAtom(options) {\n  var key = options.key,\n      persistence = options.persistence_UNSTABLE;\n  var retainedBy = retainedByOptionWithDefault$2(options.retainedBy_UNSTABLE);\n  var liveStoresCount = 0;\n  var defaultLoadable = Recoil_isPromise(options.default) ? loadableWithPromise$2(options.default.then(function (value) {\n    defaultLoadable = loadableWithValue$2(value); // TODO Temporary disable Flow due to pending selector_NEW refactor\n\n    var promiseInfo = {\n      __key: key,\n      __value: value\n    };\n    return promiseInfo;\n  }).catch(function (error) {\n    defaultLoadable = loadableWithError$2(error);\n    throw error;\n  })) : loadableWithValue$2(options.default);\n  var cachedAnswerForUnvalidatedValue = undefined; // Cleanup handlers for this atom\n  // Rely on stable reference equality of the store to use it as a key per <RecoilRoot>\n\n  var cleanupEffectsByStore = new Map();\n\n  function wrapPendingPromise(store, promise) {\n    var wrappedPromise = promise.then(function (value) {\n      var _store$getState$nextT, _state$atomValues$get;\n\n      var state = (_store$getState$nextT = store.getState().nextTree) !== null && _store$getState$nextT !== void 0 ? _store$getState$nextT : store.getState().currentTree;\n\n      if (((_state$atomValues$get = state.atomValues.get(key)) === null || _state$atomValues$get === void 0 ? void 0 : _state$atomValues$get.contents) === wrappedPromise) {\n        setRecoilValue$3(store, node, value);\n      }\n\n      return {\n        __key: key,\n        __value: value\n      };\n    }).catch(function (error) {\n      var _store$getState$nextT2, _state$atomValues$get2;\n\n      var state = (_store$getState$nextT2 = store.getState().nextTree) !== null && _store$getState$nextT2 !== void 0 ? _store$getState$nextT2 : store.getState().currentTree;\n\n      if (((_state$atomValues$get2 = state.atomValues.get(key)) === null || _state$atomValues$get2 === void 0 ? void 0 : _state$atomValues$get2.contents) === wrappedPromise) {\n        setRecoilValueLoadable$3(store, node, loadableWithError$2(error));\n      }\n\n      throw error;\n    });\n    return wrappedPromise;\n  }\n\n  function initAtom(store, initState, trigger) {\n    liveStoresCount++;\n    var alreadyKnown = store.getState().knownAtoms.has(key);\n    store.getState().knownAtoms.add(key); // Setup async defaults to notify subscribers when they resolve\n\n    if (defaultLoadable.state === 'loading') {\n      var notifyDefaultSubscribers = function notifyDefaultSubscribers() {\n        var _store$getState$nextT3;\n\n        var state = (_store$getState$nextT3 = store.getState().nextTree) !== null && _store$getState$nextT3 !== void 0 ? _store$getState$nextT3 : store.getState().currentTree;\n\n        if (!state.atomValues.has(key)) {\n          markRecoilValueModified$1(store, node);\n        }\n      };\n\n      defaultLoadable.contents.then(notifyDefaultSubscribers).catch(notifyDefaultSubscribers);\n    } // Run Atom Effects\n    // This state is scoped by Store, since this is in the initAtom() closure\n\n\n    var initValue = DEFAULT_VALUE$4;\n    var pendingSetSelf = null;\n\n    if (options.effects_UNSTABLE != null && !alreadyKnown) {\n      var duringInit = true;\n\n      var setSelf = function setSelf(effect) {\n        return function (valueOrUpdater) {\n          if (duringInit) {\n            var currentValue = initValue instanceof DefaultValue$2 || Recoil_isPromise(initValue) ? defaultLoadable.state === 'hasValue' ? defaultLoadable.contents : DEFAULT_VALUE$4 : initValue;\n            initValue = typeof valueOrUpdater === 'function' ? // cast to any because we can't restrict T from being a function without losing support for opaque types\n            valueOrUpdater(currentValue) // flowlint-line unclear-type:off\n            : valueOrUpdater; // Avoid calling onSet() when setSelf() initializes with a Promise\n\n            if (Recoil_isPromise(initValue)) {\n              initValue = initValue.then(function (value) {\n                pendingSetSelf = {\n                  effect: effect,\n                  value: value\n                };\n                return value;\n              });\n            }\n          } else {\n            if (Recoil_isPromise(valueOrUpdater)) {\n              throw new Error('Setting atoms to async values is not implemented.');\n            }\n\n            if (typeof valueOrUpdater !== 'function') {\n              pendingSetSelf = {\n                effect: effect,\n                value: valueOrUpdater\n              };\n            }\n\n            setRecoilValue$3(store, node, typeof valueOrUpdater === 'function' ? function (currentValue) {\n              var newValue = // cast to any because we can't restrict T from being a function without losing support for opaque types\n              valueOrUpdater(currentValue); // flowlint-line unclear-type:off\n\n              pendingSetSelf = {\n                effect: effect,\n                value: newValue\n              };\n              return newValue;\n            } : valueOrUpdater);\n          }\n        };\n      };\n\n      var resetSelf = function resetSelf(effect) {\n        return function () {\n          return setSelf(effect)(DEFAULT_VALUE$4);\n        };\n      };\n\n      var onSet = function onSet(effect) {\n        return function (handler) {\n          store.subscribeToTransactions(function (currentStore) {\n            // eslint-disable-next-line prefer-const\n            var _currentStore$getStat = currentStore.getState(),\n                currentTree = _currentStore$getStat.currentTree,\n                previousTree = _currentStore$getStat.previousTree;\n\n            if (!previousTree) {\n              Recoil_recoverableViolation('Transaction subscribers notified without a next tree being present -- this is a bug in Recoil');\n              previousTree = currentTree; // attempt to trundle on\n            }\n\n            var newLoadable = currentTree.atomValues.get(key);\n\n            if (newLoadable == null || newLoadable.state === 'hasValue') {\n              var _previousTree$atomVal, _pendingSetSelf, _pendingSetSelf2, _pendingSetSelf3;\n\n              var newValue = newLoadable != null ? newLoadable.contents : DEFAULT_VALUE$4;\n              var oldLoadable = (_previousTree$atomVal = previousTree.atomValues.get(key)) !== null && _previousTree$atomVal !== void 0 ? _previousTree$atomVal : defaultLoadable;\n              var oldValue = oldLoadable.state === 'hasValue' ? oldLoadable.contents : DEFAULT_VALUE$4; // TODO This isn't actually valid, use as a placeholder for now.\n              // Ignore atom value changes that were set via setSelf() in the same effect.\n              // We will still properly call the handler if there was a subsequent\n              // set from something other than an atom effect which was batched\n              // with the `setSelf()` call.  However, we may incorrectly ignore\n              // the handler if the subsequent batched call happens to set the\n              // atom to the exact same value as the `setSelf()`.   But, in that\n              // case, it was kind of a noop, so the semantics are debatable..\n\n              if (((_pendingSetSelf = pendingSetSelf) === null || _pendingSetSelf === void 0 ? void 0 : _pendingSetSelf.effect) !== effect || ((_pendingSetSelf2 = pendingSetSelf) === null || _pendingSetSelf2 === void 0 ? void 0 : _pendingSetSelf2.value) !== newValue) {\n                handler(newValue, oldValue);\n              } else if (((_pendingSetSelf3 = pendingSetSelf) === null || _pendingSetSelf3 === void 0 ? void 0 : _pendingSetSelf3.effect) === effect) {\n                pendingSetSelf = null;\n              }\n            }\n          }, key);\n        };\n      };\n\n      var _iterator45 = _createForOfIteratorHelper((_options$effects_UNST = options.effects_UNSTABLE) !== null && _options$effects_UNST !== void 0 ? _options$effects_UNST : []),\n          _step45;\n\n      try {\n        for (_iterator45.s(); !(_step45 = _iterator45.n()).done;) {\n          var effect = _step45.value;\n\n          var _options$effects_UNST;\n\n          var cleanup = effect({\n            node: node,\n            trigger: trigger,\n            setSelf: setSelf(effect),\n            resetSelf: resetSelf(effect),\n            onSet: onSet(effect)\n          });\n\n          if (cleanup != null) {\n            cleanupEffectsByStore.set(store, cleanup);\n          }\n        }\n      } catch (err) {\n        _iterator45.e(err);\n      } finally {\n        _iterator45.f();\n      }\n\n      duringInit = false;\n    } // Mutate initial state in place since we know there are no other subscribers\n    // since we are the ones initializing on first use.\n\n\n    if (!(initValue instanceof DefaultValue$2)) {\n      var _store$getState$nextT4;\n\n      var initLoadable = Recoil_isPromise(initValue) ? loadableWithPromise$2(wrapPendingPromise(store, initValue)) : loadableWithValue$2(initValue);\n      initState.atomValues.set(key, initLoadable); // If there is a pending transaction, then also mutate the next state tree.\n      // This could happen if the atom was first initialized in an action that\n      // also updated some other atom's state.\n\n      (_store$getState$nextT4 = store.getState().nextTree) === null || _store$getState$nextT4 === void 0 ? void 0 : _store$getState$nextT4.atomValues.set(key, initLoadable);\n    }\n\n    return function () {\n      var _cleanupEffectsByStor;\n\n      liveStoresCount--;\n      (_cleanupEffectsByStor = cleanupEffectsByStore.get(store)) === null || _cleanupEffectsByStor === void 0 ? void 0 : _cleanupEffectsByStor();\n      cleanupEffectsByStore.delete(store);\n      store.getState().knownAtoms.delete(key); // FIXME remove knownAtoms?\n    };\n  }\n\n  function peekAtom(_store, state) {\n    var _ref, _state$atomValues$get3, _cachedAnswerForUnval;\n\n    return (_ref = (_state$atomValues$get3 = state.atomValues.get(key)) !== null && _state$atomValues$get3 !== void 0 ? _state$atomValues$get3 : (_cachedAnswerForUnval = cachedAnswerForUnvalidatedValue) === null || _cachedAnswerForUnval === void 0 ? void 0 : _cachedAnswerForUnval[1]) !== null && _ref !== void 0 ? _ref : defaultLoadable;\n  }\n\n  function getAtom(_store, state) {\n    if (state.atomValues.has(key)) {\n      // Atom value is stored in state:\n      return Recoil_nullthrows(state.atomValues.get(key));\n    } else if (state.nonvalidatedAtoms.has(key)) {\n      // Atom value is stored but needs validation before use.\n      // We might have already validated it and have a cached validated value:\n      if (cachedAnswerForUnvalidatedValue != null) {\n        return cachedAnswerForUnvalidatedValue;\n      }\n\n      if (persistence == null) {\n        Recoil_expectationViolation(\"Tried to restore a persisted value for atom \".concat(key, \" but it has no persistence settings.\"));\n        return defaultLoadable;\n      }\n\n      var nonvalidatedValue = state.nonvalidatedAtoms.get(key);\n      var validatorResult = persistence.validator(nonvalidatedValue, DEFAULT_VALUE$4);\n      var validatedValueLoadable = validatorResult instanceof DefaultValue$2 ? defaultLoadable : loadableWithValue$2(validatorResult);\n      cachedAnswerForUnvalidatedValue = validatedValueLoadable;\n      return cachedAnswerForUnvalidatedValue;\n    } else {\n      return defaultLoadable;\n    }\n  }\n\n  function invalidateAtom() {\n    cachedAnswerForUnvalidatedValue = undefined;\n  }\n\n  function setAtom(_store, state, newValue) {\n    // Bail out if we're being set to the existing value, or if we're being\n    // reset but have no stored value (validated or unvalidated) to reset from:\n    if (state.atomValues.has(key)) {\n      var existing = Recoil_nullthrows(state.atomValues.get(key));\n\n      if (existing.state === 'hasValue' && newValue === existing.contents) {\n        return new Map();\n      }\n    } else if (!state.nonvalidatedAtoms.has(key) && newValue instanceof DefaultValue$2) {\n      return new Map();\n    }\n\n    if (process.env.NODE_ENV !== \"production\") {\n      if (options.dangerouslyAllowMutability !== true) {\n        Recoil_deepFreezeValue(newValue);\n      }\n    }\n\n    cachedAnswerForUnvalidatedValue = undefined; // can be released now if it was previously in use\n\n    return new Map().set(key, loadableWithValue$2(newValue));\n  }\n\n  function shouldDeleteConfigOnReleaseAtom() {\n    return getConfigDeletionHandler$2(key) !== undefined && liveStoresCount <= 0;\n  }\n\n  var node = registerNode$2({\n    key: key,\n    peek: peekAtom,\n    get: getAtom,\n    set: setAtom,\n    init: initAtom,\n    invalidate: invalidateAtom,\n    shouldDeleteConfigOnRelease: shouldDeleteConfigOnReleaseAtom,\n    dangerouslyAllowMutability: options.dangerouslyAllowMutability,\n    persistence_UNSTABLE: options.persistence_UNSTABLE ? {\n      type: options.persistence_UNSTABLE.type,\n      backButton: options.persistence_UNSTABLE.backButton\n    } : undefined,\n    shouldRestoreFromSnapshots: true,\n    retainedBy: retainedBy\n  });\n  return node;\n} // prettier-ignore\n\n\nfunction atom(options) {\n  var optionsDefault = options.default,\n      restOptions = _objectWithoutProperties(options, _excluded2);\n\n  if (isRecoilValue$4(optionsDefault) // Continue to use atomWithFallback for promise defaults for scoped atoms\n  // for now, since scoped atoms don't support async defaults\n  // @fb-only: || (isPromise(optionsDefault) && scopeRules_APPEND_ONLY_READ_THE_DOCS)\n  ) {\n      return atomWithFallback(_objectSpread(_objectSpread({}, restOptions), {}, {\n        default: optionsDefault // @fb-only: scopeRules_APPEND_ONLY_READ_THE_DOCS,\n\n      })); // @fb-only: } else if (scopeRules_APPEND_ONLY_READ_THE_DOCS && !isPromise(optionsDefault)) {\n      // @fb-only: return scopedAtom<T>({\n      // @fb-only: ...restOptions,\n      // @fb-only: default: optionsDefault,\n      // @fb-only: scopeRules_APPEND_ONLY_READ_THE_DOCS,\n      // @fb-only: });\n    } else {\n    return baseAtom(_objectSpread(_objectSpread({}, restOptions), {}, {\n      default: optionsDefault\n    }));\n  }\n}\n\nfunction atomWithFallback(options) {\n  var base = atom(_objectSpread(_objectSpread({}, options), {}, {\n    default: DEFAULT_VALUE$4,\n    persistence_UNSTABLE: options.persistence_UNSTABLE === undefined ? undefined : _objectSpread(_objectSpread({}, options.persistence_UNSTABLE), {}, {\n      validator: function validator(storedValue) {\n        return storedValue instanceof DefaultValue$2 ? storedValue : Recoil_nullthrows(options.persistence_UNSTABLE).validator(storedValue, DEFAULT_VALUE$4);\n      }\n    }),\n    // TODO Hack for now.\n    // flowlint-next-line unclear-type: off\n    effects_UNSTABLE: options.effects_UNSTABLE\n  }));\n  var sel = Recoil_selector({\n    key: \"\".concat(options.key, \"__withFallback\"),\n    get: function get(_ref34) {\n      var _get = _ref34.get;\n\n      var baseValue = _get(base);\n\n      return baseValue instanceof DefaultValue$2 ? options.default : baseValue;\n    },\n    set: function set(_ref35, newValue) {\n      var _set = _ref35.set;\n      return _set(base, newValue);\n    },\n    dangerouslyAllowMutability: options.dangerouslyAllowMutability\n  });\n  setConfigDeletionHandler$1(sel.key, getConfigDeletionHandler$2(options.key));\n  return sel;\n}\n\nvar Recoil_atom = atom;\n/**\n * (c) Facebook, Inc. and its affiliates. Confidential and proprietary.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nvar MapCache = /*#__PURE__*/function () {\n  function MapCache(options) {\n    _classCallCheck(this, MapCache);\n\n    var _options$mapKey;\n\n    _defineProperty(this, \"_map\", void 0);\n\n    _defineProperty(this, \"_keyMapper\", void 0);\n\n    this._map = new Map();\n    this._keyMapper = (_options$mapKey = options === null || options === void 0 ? void 0 : options.mapKey) !== null && _options$mapKey !== void 0 ? _options$mapKey : function (v) {\n      return v;\n    };\n  }\n\n  _createClass(MapCache, [{\n    key: \"size\",\n    value: function size() {\n      return this._map.size;\n    }\n  }, {\n    key: \"has\",\n    value: function has(key) {\n      return this._map.has(this._keyMapper(key));\n    }\n  }, {\n    key: \"get\",\n    value: function get(key) {\n      return this._map.get(this._keyMapper(key));\n    }\n  }, {\n    key: \"set\",\n    value: function set(key, val) {\n      this._map.set(this._keyMapper(key), val);\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(key) {\n      this._map.delete(this._keyMapper(key));\n    }\n  }, {\n    key: \"clear\",\n    value: function clear() {\n      this._map.clear();\n    }\n  }]);\n\n  return MapCache;\n}();\n\nvar Recoil_MapCache = {\n  MapCache: MapCache\n};\nvar Recoil_MapCache_1 = Recoil_MapCache.MapCache;\nvar Recoil_MapCache$1 = /*#__PURE__*/Object.freeze({\n  __proto__: null,\n  MapCache: Recoil_MapCache_1\n});\nvar LRUCache$2 = Recoil_LRUCache$1.LRUCache;\nvar MapCache$1 = Recoil_MapCache$1.MapCache;\nvar defaultPolicy$1 = {\n  equality: 'reference',\n  eviction: 'none',\n  maxSize: Infinity\n};\n\nfunction cacheFromPolicy() {\n  var _ref36 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : defaultPolicy$1,\n      _ref36$equality = _ref36.equality,\n      equality = _ref36$equality === void 0 ? defaultPolicy$1.equality : _ref36$equality,\n      _ref36$eviction = _ref36.eviction,\n      eviction = _ref36$eviction === void 0 ? defaultPolicy$1.eviction : _ref36$eviction,\n      _ref36$maxSize = _ref36.maxSize,\n      maxSize = _ref36$maxSize === void 0 ? defaultPolicy$1.maxSize : _ref36$maxSize;\n\n  var valueMapper = getValueMapper$1(equality);\n  var cache = getCache(eviction, maxSize, valueMapper);\n  return cache;\n}\n\nfunction getValueMapper$1(equality) {\n  switch (equality) {\n    case 'reference':\n      return function (val) {\n        return val;\n      };\n\n    case 'value':\n      return function (val) {\n        return Recoil_stableStringify(val);\n      };\n  }\n\n  throw new Error(\"Unrecognized equality policy \".concat(equality));\n}\n\nfunction getCache(eviction, maxSize, mapKey) {\n  switch (eviction) {\n    case 'none':\n      return new MapCache$1({\n        mapKey: mapKey\n      });\n\n    case 'lru':\n      return new LRUCache$2({\n        mapKey: mapKey,\n        maxSize: Recoil_nullthrows(maxSize)\n      });\n  }\n\n  throw new Error(\"Unrecognized eviction policy \".concat(eviction));\n}\n\nvar Recoil_cacheFromPolicy = cacheFromPolicy;\nvar setConfigDeletionHandler$2 = Recoil_Node.setConfigDeletionHandler;\n/*\nA function which returns an atom based on the input parameter.\n\nEach unique parameter returns a unique atom. E.g.,\n\n  const f = atomFamily(...);\n  f({a: 1}) => an atom\n  f({a: 2}) => a different atom\n\nThis allows components to persist local, private state using atoms.  Each\ninstance of the component may have a different key, which it uses as the\nparameter for a family of atoms; in this way, each component will have\nits own atom not shared by other instances.  These state keys may be composed\ninto children's state keys as well.\n*/\n\nfunction atomFamily(options) {\n  var _options$cachePolicyF;\n\n  var atomCache = Recoil_cacheFromPolicy((_options$cachePolicyF = options.cachePolicyForParams_UNSTABLE) !== null && _options$cachePolicyF !== void 0 ? _options$cachePolicyF : {\n    equality: 'value',\n    eviction: 'none'\n  }); // Simple atomFamily implementation to cache individual atoms based\n  // on the parameter value equality.\n\n  return function (params) {\n    var _stableStringify;\n\n    var cachedAtom = atomCache.get(params);\n\n    if (cachedAtom != null) {\n      return cachedAtom;\n    }\n\n    var cachePolicyForParams_UNSTABLE = options.cachePolicyForParams_UNSTABLE,\n        atomOptions = _objectWithoutProperties(options, _excluded3);\n\n    var newAtom = Recoil_atom(_objectSpread(_objectSpread({}, atomOptions), {}, {\n      key: \"\".concat(options.key, \"__\").concat((_stableStringify = Recoil_stableStringify(params)) !== null && _stableStringify !== void 0 ? _stableStringify : 'void'),\n      default: typeof options.default === 'function' ? // The default was parameterized\n      // Flow doesn't know that T isn't a function, so we need to case to any\n      options.default(params) // flowlint-line unclear-type:off\n      : // Default may be a static value, promise, or RecoilValue\n      options.default,\n      retainedBy_UNSTABLE: typeof options.retainedBy_UNSTABLE === 'function' ? options.retainedBy_UNSTABLE(params) : options.retainedBy_UNSTABLE,\n      effects_UNSTABLE: typeof options.effects_UNSTABLE === 'function' ? options.effects_UNSTABLE(params) : options.effects_UNSTABLE // prettier-ignore\n      // @fb-only: scopeRules_APPEND_ONLY_READ_THE_DOCS: mapScopeRules(\n      // @fb-only: options.scopeRules_APPEND_ONLY_READ_THE_DOCS,\n      // @fb-only: params,\n      // @fb-only: ),\n\n    }));\n    atomCache.set(params, newAtom);\n    setConfigDeletionHandler$2(newAtom.key, function () {\n      atomCache.delete(params);\n    });\n    return newAtom;\n  };\n}\n\nvar Recoil_atomFamily = atomFamily;\nvar setConfigDeletionHandler$3 = Recoil_Node.setConfigDeletionHandler; // Keep in mind the parameter needs to be serializable as a cahche key\n// using Recoil_stableStringify\n// Add a unique index to each selector in case the cache implementation allows\n// duplicate keys based on equivalent stringified parameters\n\nvar nextIndex = 0;\n/* eslint-disable no-redeclare */\n// Return a function that returns members of a family of selectors of the same type\n// E.g.,\n//\n// const s = selectorFamily(...);\n// s({a: 1}) => a selector\n// s({a: 2}) => a different selector\n//\n// By default, the selectors are distinguished by distinct values of the\n// parameter based on value equality, not reference equality.  This allows using\n// object literals or other equivalent objects at callsites to not create\n// duplicate cache entries.  This behavior may be overridden with the\n// cacheImplementationForParams option.\n\nfunction selectorFamily(options) {\n  var _options$cachePolicyF;\n\n  var selectorCache = Recoil_cacheFromPolicy((_options$cachePolicyF = options.cachePolicyForParams_UNSTABLE) !== null && _options$cachePolicyF !== void 0 ? _options$cachePolicyF : {\n    equality: 'value',\n    eviction: 'none'\n  });\n  return function (params) {\n    var _stableStringify;\n\n    var cachedSelector = selectorCache.get(params);\n\n    if (cachedSelector != null) {\n      return cachedSelector;\n    }\n\n    var myKey = \"\".concat(options.key, \"__selectorFamily/\").concat((_stableStringify = Recoil_stableStringify(params, {\n      // It is possible to use functions in parameters if the user uses\n      // a cache with reference equality thanks to the incrementing index.\n      allowFunctions: true\n    })) !== null && _stableStringify !== void 0 ? _stableStringify : 'void', \"/\").concat(nextIndex++); // Append index in case values serialize to the same key string\n\n    var myGet = function myGet(callbacks) {\n      return options.get(params)(callbacks);\n    };\n\n    var myCachePolicy = options.cachePolicy_UNSTABLE;\n    var retainedBy = typeof options.retainedBy_UNSTABLE === 'function' ? options.retainedBy_UNSTABLE(params) : options.retainedBy_UNSTABLE;\n    var newSelector;\n\n    if (options.set != null) {\n      var set = options.set;\n\n      var mySet = function mySet(callbacks, newValue) {\n        return set(params)(callbacks, newValue);\n      };\n\n      newSelector = Recoil_selector({\n        key: myKey,\n        get: myGet,\n        set: mySet,\n        cachePolicy_UNSTABLE: myCachePolicy,\n        dangerouslyAllowMutability: options.dangerouslyAllowMutability,\n        retainedBy_UNSTABLE: retainedBy\n      });\n    } else {\n      newSelector = Recoil_selector({\n        key: myKey,\n        get: myGet,\n        cachePolicy_UNSTABLE: myCachePolicy,\n        dangerouslyAllowMutability: options.dangerouslyAllowMutability,\n        retainedBy_UNSTABLE: retainedBy\n      });\n    }\n\n    selectorCache.set(params, newSelector);\n    setConfigDeletionHandler$3(newSelector.key, function () {\n      selectorCache.delete(params);\n    });\n    return newSelector;\n  };\n}\n/* eslint-enable no-redeclare */\n\n\nvar Recoil_selectorFamily = selectorFamily; // flowlint-next-line unclear-type:off\n\nvar constantSelector = Recoil_selectorFamily({\n  key: '__constant',\n  get: function get(constant) {\n    return function () {\n      return constant;\n    };\n  },\n  cachePolicyForParams_UNSTABLE: {\n    equality: 'reference'\n  }\n}); // Function that returns a selector which always produces the\n// same constant value.  It may be called multiple times with the\n// same value, based on reference equality, and will provide the\n// same selector.\n\nfunction constSelector(constant) {\n  return constantSelector(constant);\n}\n\nvar Recoil_constSelector = constSelector; // flowlint-next-line unclear-type:off\n\nvar throwingSelector = Recoil_selectorFamily({\n  key: '__error',\n  get: function get(message) {\n    return function () {\n      throw new Error(message);\n    };\n  },\n  cachePolicyForParams_UNSTABLE: {\n    equality: 'reference'\n  }\n}); // Function that returns a selector which always throws an error\n// with the provided message.\n\nfunction errorSelector(message) {\n  return throwingSelector(message);\n}\n\nvar Recoil_errorSelector = errorSelector;\n/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * Wraps another recoil value and prevents writing to it.\n *\n * @emails oncall+recoil\n * \n * @format\n */\n\nfunction readOnlySelector(atom) {\n  // flowlint-next-line unclear-type: off\n  return atom;\n}\n\nvar Recoil_readOnlySelector = readOnlySelector;\nvar loadableWithError$3 = Recoil_Loadable.loadableWithError,\n    loadableWithPromise$3 = Recoil_Loadable.loadableWithPromise,\n    loadableWithValue$3 = Recoil_Loadable.loadableWithValue; /////////////////\n//  TRUTH TABLE\n/////////////////\n// Dependencies        waitForNone         waitForAny        waitForAll       waitForAllSettled\n//  [loading, loading]  [Promise, Promise]  Promise           Promise         Promise\n//  [value, loading]    [value, Promise]    [value, Promise]  Promise         Promise\n//  [value, value]      [value, value]      [value, value]    [value, value]  [value, value]\n//\n//  [error, loading]    [Error, Promise]    [Error, Promise]  Error           Promise\n//  [error, error]      [Error, Error]      [Error, Error]    Error           [error, error]\n//  [value, error]      [value, Error]      [value, Error]    Error           [value, error]\n// Issue parallel requests for all dependencies and return the current\n// status if they have results, have some error, or are still pending.\n\nfunction concurrentRequests(getRecoilValue, deps) {\n  var results = Array(deps.length).fill(undefined);\n  var exceptions = Array(deps.length).fill(undefined);\n\n  var _iterator46 = _createForOfIteratorHelper(deps.entries()),\n      _step46;\n\n  try {\n    for (_iterator46.s(); !(_step46 = _iterator46.n()).done;) {\n      var _step46$value = _slicedToArray(_step46.value, 2),\n          i = _step46$value[0],\n          dep = _step46$value[1];\n\n      try {\n        results[i] = getRecoilValue(dep);\n      } catch (e) {\n        // exceptions can either be Promises of pending results or real errors\n        exceptions[i] = e;\n      }\n    }\n  } catch (err) {\n    _iterator46.e(err);\n  } finally {\n    _iterator46.f();\n  }\n\n  return [results, exceptions];\n}\n\nfunction isError(exp) {\n  return exp != null && !Recoil_isPromise(exp);\n}\n\nfunction unwrapDependencies(dependencies) {\n  return Array.isArray(dependencies) ? dependencies : Object.getOwnPropertyNames(dependencies).map(function (key) {\n    return dependencies[key];\n  });\n}\n\nfunction getValueFromLoadablePromiseResult(result) {\n  if (result != null && typeof result === 'object' && result.hasOwnProperty('__value')) {\n    return result.__value;\n  }\n\n  return result;\n}\n\nfunction wrapResults(dependencies, results) {\n  return Array.isArray(dependencies) ? results : // Object.getOwnPropertyNames() has consistent key ordering with ES6\n  Object.getOwnPropertyNames(dependencies).reduce(function (out, key, idx) {\n    return _objectSpread(_objectSpread({}, out), {}, _defineProperty2({}, key, results[idx]));\n  }, {});\n}\n\nfunction wrapLoadables(dependencies, results, exceptions) {\n  var output = exceptions.map(function (exception, idx) {\n    return exception == null ? loadableWithValue$3(results[idx]) : Recoil_isPromise(exception) ? loadableWithPromise$3(exception) : loadableWithError$3(exception);\n  });\n  return wrapResults(dependencies, output);\n}\n\nfunction combineAsyncResultsWithSyncResults(syncResults, asyncResults) {\n  return asyncResults.map(function (result, idx) {\n    return (\n      /**\n       * it's important we use === undefined as opposed to == null, because the\n       * resolved value of the async promise could be `null`, in which case we\n       * don't want to use syncResults[idx], which would be undefined. If async\n       * promise resolves to `undefined`, that's ok because `syncResults[idx]`\n       * will also be `undefined`. That's a little hacky, but it works.\n       */\n      result === undefined ? syncResults[idx] : result\n    );\n  });\n} // Selector that requests all dependencies in parallel and immediately returns\n// current results without waiting.\n\n\nvar waitForNone = Recoil_selectorFamily({\n  key: '__waitForNone',\n  get: function get(dependencies) {\n    return function (_ref37) {\n      var get = _ref37.get;\n      // Issue requests for all dependencies in parallel.\n      var deps = unwrapDependencies(dependencies);\n\n      var _concurrentRequests = concurrentRequests(get, deps),\n          _concurrentRequests2 = _slicedToArray(_concurrentRequests, 2),\n          results = _concurrentRequests2[0],\n          exceptions = _concurrentRequests2[1]; // Always return the current status of the results; never block.\n\n\n      return wrapLoadables(dependencies, results, exceptions);\n    };\n  }\n}); // Selector that requests all dependencies in parallel and waits for at least\n// one to be available before returning results.  It will only error if all\n// dependencies have errors.\n\nvar waitForAny = Recoil_selectorFamily({\n  key: '__waitForAny',\n  get: function get(dependencies) {\n    return function (_ref38) {\n      var get = _ref38.get;\n      // Issue requests for all dependencies in parallel.\n      // Exceptions can either be Promises of pending results or real errors\n      var deps = unwrapDependencies(dependencies);\n\n      var _concurrentRequests3 = concurrentRequests(get, deps),\n          _concurrentRequests4 = _slicedToArray(_concurrentRequests3, 2),\n          results = _concurrentRequests4[0],\n          exceptions = _concurrentRequests4[1]; // If any results are available, value or error, return the current status\n\n\n      if (exceptions.some(function (exp) {\n        return !Recoil_isPromise(exp);\n      })) {\n        return wrapLoadables(dependencies, results, exceptions);\n      } // Otherwise, return a promise that will resolve when the next result is\n      // available, whichever one happens to be next.  But, if all pending\n      // dependencies end up with errors, then reject the promise.\n\n\n      return new Promise(function (resolve) {\n        var _iterator47 = _createForOfIteratorHelper(exceptions.entries()),\n            _step47;\n\n        try {\n          var _loop = function _loop() {\n            var _step47$value = _slicedToArray(_step47.value, 2),\n                i = _step47$value[0],\n                exp = _step47$value[1];\n\n            if (Recoil_isPromise(exp)) {\n              exp.then(function (result) {\n                results[i] = getValueFromLoadablePromiseResult(result);\n                exceptions[i] = undefined;\n                resolve(wrapLoadables(dependencies, results, exceptions));\n              }).catch(function (error) {\n                exceptions[i] = error;\n                resolve(wrapLoadables(dependencies, results, exceptions));\n              });\n            }\n          };\n\n          for (_iterator47.s(); !(_step47 = _iterator47.n()).done;) {\n            _loop();\n          }\n        } catch (err) {\n          _iterator47.e(err);\n        } finally {\n          _iterator47.f();\n        }\n      });\n    };\n  }\n}); // Selector that requests all dependencies in parallel and waits for all to be\n// available before returning a value.  It will error if any dependencies error.\n\nvar waitForAll = Recoil_selectorFamily({\n  key: '__waitForAll',\n  get: function get(dependencies) {\n    return function (_ref39) {\n      var get = _ref39.get;\n      // Issue requests for all dependencies in parallel.\n      // Exceptions can either be Promises of pending results or real errors\n      var deps = unwrapDependencies(dependencies);\n\n      var _concurrentRequests5 = concurrentRequests(get, deps),\n          _concurrentRequests6 = _slicedToArray(_concurrentRequests5, 2),\n          results = _concurrentRequests6[0],\n          exceptions = _concurrentRequests6[1]; // If all results are available, return the results\n\n\n      if (exceptions.every(function (exp) {\n        return exp == null;\n      })) {\n        return wrapResults(dependencies, results);\n      } // If we have any errors, throw the first error\n\n\n      var error = exceptions.find(isError);\n\n      if (error != null) {\n        throw error;\n      } // Otherwise, return a promise that will resolve when all results are available\n\n\n      return Promise.all(exceptions).then(function (exceptionResults) {\n        return wrapResults(dependencies, combineAsyncResultsWithSyncResults(results, exceptionResults).map(getValueFromLoadablePromiseResult));\n      });\n    };\n  }\n});\nvar waitForAllSettled = Recoil_selectorFamily({\n  key: '__waitForAllSettled',\n  get: function get(dependencies) {\n    return function (_ref40) {\n      var get = _ref40.get;\n      // Issue requests for all dependencies in parallel.\n      // Exceptions can either be Promises of pending results or real errors\n      var deps = unwrapDependencies(dependencies);\n\n      var _concurrentRequests7 = concurrentRequests(get, deps),\n          _concurrentRequests8 = _slicedToArray(_concurrentRequests7, 2),\n          results = _concurrentRequests8[0],\n          exceptions = _concurrentRequests8[1]; // If all results are available, return the results\n\n\n      if (exceptions.every(function (exp) {\n        return !Recoil_isPromise(exp);\n      })) {\n        return wrapLoadables(dependencies, results, exceptions);\n      } // Wait for all results to settle\n\n\n      return Promise.all(exceptions.map(function (exp, i) {\n        return Recoil_isPromise(exp) ? exp.then(function (result) {\n          results[i] = getValueFromLoadablePromiseResult(result);\n          exceptions[i] = undefined;\n        }).catch(function (error) {\n          results[i] = undefined;\n          exceptions[i] = error;\n        }) : null;\n      })) // Then wrap them as loadables\n      .then(function () {\n        return wrapLoadables(dependencies, results, exceptions);\n      });\n    };\n  }\n});\nvar noWait = Recoil_selectorFamily({\n  key: '__noWait',\n  get: function get(dependency) {\n    return function (_ref41) {\n      var get = _ref41.get;\n\n      try {\n        return loadableWithValue$3(get(dependency));\n      } catch (exception) {\n        return Recoil_isPromise(exception) ? loadableWithPromise$3(exception) : loadableWithError$3(exception);\n      }\n    };\n  }\n});\nvar Recoil_WaitFor = {\n  waitForNone: waitForNone,\n  waitForAny: waitForAny,\n  waitForAll: waitForAll,\n  waitForAllSettled: waitForAllSettled,\n  noWait: noWait\n};\nvar batchUpdates$3 = Recoil_Batching.batchUpdates,\n    setBatcher$1 = Recoil_Batching.setBatcher;\nvar DefaultValue$3 = Recoil_Node.DefaultValue;\nvar RecoilRoot$2 = Recoil_RecoilRoot_react.RecoilRoot;\nvar isRecoilValue$5 = Recoil_RecoilValue$1.isRecoilValue;\nvar retentionZone$1 = Recoil_RetentionZone.retentionZone;\nvar freshSnapshot$2 = Recoil_Snapshot$1.freshSnapshot;\nvar useGotoRecoilSnapshot$1 = Recoil_Hooks.useGotoRecoilSnapshot,\n    useRecoilCallback$1 = Recoil_Hooks.useRecoilCallback,\n    useRecoilSnapshot$1 = Recoil_Hooks.useRecoilSnapshot,\n    useRecoilState$1 = Recoil_Hooks.useRecoilState,\n    useRecoilStateLoadable$1 = Recoil_Hooks.useRecoilStateLoadable,\n    useRecoilTransactionObserver$1 = Recoil_Hooks.useRecoilTransactionObserver,\n    useRecoilValue$1 = Recoil_Hooks.useRecoilValue,\n    useRecoilValueLoadable$1 = Recoil_Hooks.useRecoilValueLoadable,\n    useResetRecoilState$1 = Recoil_Hooks.useResetRecoilState,\n    useRetain$1 = Recoil_Hooks.useRetain,\n    useSetRecoilState$1 = Recoil_Hooks.useSetRecoilState,\n    useSetUnvalidatedAtomValues$1 = Recoil_Hooks.useSetUnvalidatedAtomValues,\n    useTransactionObservation_DEPRECATED$1 = Recoil_Hooks.useTransactionObservation_DEPRECATED;\nvar noWait$1 = Recoil_WaitFor.noWait,\n    waitForAll$1 = Recoil_WaitFor.waitForAll,\n    waitForAllSettled$1 = Recoil_WaitFor.waitForAllSettled,\n    waitForAny$1 = Recoil_WaitFor.waitForAny,\n    waitForNone$1 = Recoil_WaitFor.waitForNone;\nvar Recoil_index = {\n  // Types\n  DefaultValue: DefaultValue$3,\n  // Components\n  RecoilRoot: RecoilRoot$2,\n  useRecoilBridgeAcrossReactRoots_UNSTABLE: Recoil_useRecoilBridgeAcrossReactRoots,\n  // RecoilValues\n  atom: Recoil_atom,\n  selector: Recoil_selector,\n  // Other factories\n  retentionZone: retentionZone$1,\n  // Convenience RecoilValues\n  atomFamily: Recoil_atomFamily,\n  selectorFamily: Recoil_selectorFamily,\n  constSelector: Recoil_constSelector,\n  errorSelector: Recoil_errorSelector,\n  readOnlySelector: Recoil_readOnlySelector,\n  // Hooks that accept RecoilValues\n  useRecoilValue: useRecoilValue$1,\n  useRecoilValueLoadable: useRecoilValueLoadable$1,\n  useRecoilState: useRecoilState$1,\n  useRecoilStateLoadable: useRecoilStateLoadable$1,\n  useSetRecoilState: useSetRecoilState$1,\n  useResetRecoilState: useResetRecoilState$1,\n  useGetRecoilValueInfo_UNSTABLE: Recoil_useGetRecoilValueInfo,\n  useRetain: useRetain$1,\n  // Hooks for asynchronous Recoil\n  useRecoilCallback: useRecoilCallback$1,\n  // Hooks for Snapshots\n  useGotoRecoilSnapshot: useGotoRecoilSnapshot$1,\n  useRecoilSnapshot: useRecoilSnapshot$1,\n  useRecoilTransactionObserver_UNSTABLE: useRecoilTransactionObserver$1,\n  useTransactionObservation_UNSTABLE: useTransactionObservation_DEPRECATED$1,\n  useSetUnvalidatedAtomValues_UNSTABLE: useSetUnvalidatedAtomValues$1,\n  // Concurrency Helpers\n  noWait: noWait$1,\n  waitForNone: waitForNone$1,\n  waitForAny: waitForAny$1,\n  waitForAll: waitForAll$1,\n  waitForAllSettled: waitForAllSettled$1,\n  // Other functions\n  isRecoilValue: isRecoilValue$5,\n  // Batching\n  batchUpdates: batchUpdates$3,\n  setBatcher: setBatcher$1,\n  // Snapshot Utils\n  snapshot_UNSTABLE: freshSnapshot$2\n};\nvar Recoil_index_1 = Recoil_index.DefaultValue;\nvar Recoil_index_2 = Recoil_index.RecoilRoot;\nvar Recoil_index_3 = Recoil_index.useRecoilBridgeAcrossReactRoots_UNSTABLE;\nvar Recoil_index_4 = Recoil_index.atom;\nvar Recoil_index_5 = Recoil_index.selector;\nvar Recoil_index_6 = Recoil_index.retentionZone;\nvar Recoil_index_7 = Recoil_index.atomFamily;\nvar Recoil_index_8 = Recoil_index.selectorFamily;\nvar Recoil_index_9 = Recoil_index.constSelector;\nvar Recoil_index_10 = Recoil_index.errorSelector;\nvar Recoil_index_11 = Recoil_index.readOnlySelector;\nvar Recoil_index_12 = Recoil_index.useRecoilValue;\nvar Recoil_index_13 = Recoil_index.useRecoilValueLoadable;\nvar Recoil_index_14 = Recoil_index.useRecoilState;\nvar Recoil_index_15 = Recoil_index.useRecoilStateLoadable;\nvar Recoil_index_16 = Recoil_index.useSetRecoilState;\nvar Recoil_index_17 = Recoil_index.useResetRecoilState;\nvar Recoil_index_18 = Recoil_index.useGetRecoilValueInfo_UNSTABLE;\nvar Recoil_index_19 = Recoil_index.useRetain;\nvar Recoil_index_20 = Recoil_index.useRecoilCallback;\nvar Recoil_index_21 = Recoil_index.useGotoRecoilSnapshot;\nvar Recoil_index_22 = Recoil_index.useRecoilSnapshot;\nvar Recoil_index_23 = Recoil_index.useRecoilTransactionObserver_UNSTABLE;\nvar Recoil_index_24 = Recoil_index.useTransactionObservation_UNSTABLE;\nvar Recoil_index_25 = Recoil_index.useSetUnvalidatedAtomValues_UNSTABLE;\nvar Recoil_index_26 = Recoil_index.noWait;\nvar Recoil_index_27 = Recoil_index.waitForNone;\nvar Recoil_index_28 = Recoil_index.waitForAny;\nvar Recoil_index_29 = Recoil_index.waitForAll;\nvar Recoil_index_30 = Recoil_index.waitForAllSettled;\nvar Recoil_index_31 = Recoil_index.isRecoilValue;\nvar Recoil_index_32 = Recoil_index.batchUpdates;\nvar Recoil_index_33 = Recoil_index.setBatcher;\nvar Recoil_index_34 = Recoil_index.snapshot_UNSTABLE;\nexport default Recoil_index;\nexport { Recoil_index_1 as DefaultValue, Recoil_index_2 as RecoilRoot, Recoil_index_4 as atom, Recoil_index_7 as atomFamily, Recoil_index_32 as batchUpdates, Recoil_index_9 as constSelector, Recoil_index_10 as errorSelector, Recoil_index_31 as isRecoilValue, Recoil_index_26 as noWait, Recoil_index_11 as readOnlySelector, Recoil_index_6 as retentionZone, Recoil_index_5 as selector, Recoil_index_8 as selectorFamily, Recoil_index_33 as setBatcher, Recoil_index_34 as snapshot_UNSTABLE, Recoil_index_18 as useGetRecoilValueInfo_UNSTABLE, Recoil_index_21 as useGotoRecoilSnapshot, Recoil_index_3 as useRecoilBridgeAcrossReactRoots_UNSTABLE, Recoil_index_20 as useRecoilCallback, Recoil_index_22 as useRecoilSnapshot, Recoil_index_14 as useRecoilState, Recoil_index_15 as useRecoilStateLoadable, Recoil_index_23 as useRecoilTransactionObserver_UNSTABLE, Recoil_index_12 as useRecoilValue, Recoil_index_13 as useRecoilValueLoadable, Recoil_index_17 as useResetRecoilState, Recoil_index_19 as useRetain, Recoil_index_16 as useSetRecoilState, Recoil_index_25 as useSetUnvalidatedAtomValues_UNSTABLE, Recoil_index_24 as useTransactionObservation_UNSTABLE, Recoil_index_29 as waitForAll, Recoil_index_30 as waitForAllSettled, Recoil_index_28 as waitForAny, Recoil_index_27 as waitForNone };"],"sourceRoot":""}